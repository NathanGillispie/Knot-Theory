(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[   1262399,      29075]
NotebookOptionsPosition[   1233701,      28183]
NotebookOutlinePosition[   1234126,      28201]
CellTagsIndexPosition[   1234083,      28198]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"<<", "KnotTheory`"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5245678501431775`*^9, 3.5245678533453608`*^9}}],

Cell[BoxData["\<\"Loading KnotTheory` version of March 22, 2011, \
21:10:4.67737.\\nRead more at http://katlas.org/wiki/KnotTheory.\"\>"], \
"Print",
 CellChangeTimes->{{3.5619850430834365`*^9, 3.5619850610242305`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5253501286617346`*^9, 3.525350151631048*^9}}],

Cell[CellGroupData[{

Cell["Changes 6_8_12", "Section",
 CellChangeTimes->{{3.525350227626395*^9, 3.525350235355837*^9}, {
  3.525356982703125*^9, 3.5253569829375*^9}, {3.52698474759375*^9, 
  3.526984756109375*^9}, {3.527333829227973*^9, 3.52733382958727*^9}, {
  3.529839409421875*^9, 3.529839415421875*^9}, {3.548011569203125*^9, 
  3.548011576125*^9}}],

Cell[CellGroupData[{

Cell["changes to code", "Subsubsection",
 CellChangeTimes->{{3.5253502633744397`*^9, 3.5253502790013337`*^9}}],

Cell["\<\
1.updated computation for writhe, acn (faster) and curvature and torsion \
(corrected)
2. updated version of initPolyGeneration  to account for more volumefiles \
with differnt naming schemes
3. added functions to compute the breadth of the jones polynomial and a \
function to compute the knot (if it\[CloseCurlyQuote]s in the table) or the \
lower
bound on the cr (function: crorlookuppd[pd_, timeconstraint_]
4. added/updated functions to compute the volume functions in two steps: \
first all the integrals which are the same, and secondly the last integra.\
\>", "Text",
 CellChangeTimes->{{3.5253502809874473`*^9, 3.5253503316263437`*^9}, {
   3.5253506224329767`*^9, 3.52535062912836*^9}, {3.5253507282360287`*^9, 
   3.5253508924844227`*^9}, {3.5253509551250057`*^9, 3.525351016272503*^9}, {
   3.5253524357556925`*^9, 3.5253525260928597`*^9}, {3.525354936765625*^9, 
   3.52535510515625*^9}, {3.525357002671875*^9, 3.52535702121875*^9}, {
   3.52535896621875*^9, 3.525359018703125*^9}, {3.52535992925*^9, 
   3.52535993090625*^9}, {3.5253599660625*^9, 3.525359970875*^9}, {
   3.52698476246875*^9, 3.5269848490625*^9}, {3.526985034671875*^9, 
   3.526985062734375*^9}, {3.526985306765625*^9, 3.526985314640625*^9}, {
   3.52698540740625*^9, 3.52698542165625*^9}, {3.52698552128125*^9, 
   3.526985577578125*^9}, 3.526985646875*^9, {3.52698572725*^9, 
   3.526985765171875*^9}, {3.526986643125*^9, 3.526986658015625*^9}, {
   3.526987013765625*^9, 3.526987043140625*^9}, {3.526988914546875*^9, 
   3.526988949265625*^9}, {3.526991004421875*^9, 3.52699103615625*^9}, {
   3.526993380484375*^9, 3.52699339859375*^9}, {3.527333714063875*^9, 
   3.527333726968979*^9}, {3.527333777036207*^9, 3.5273338172774487`*^9}, {
   3.529839424625*^9, 3.52983954003125*^9}, {3.52983960884375*^9, 
   3.529839610125*^9}, {3.5480115796875*^9, 3.548011645828125*^9}, {
   3.548011758484375*^9, 3.548011861015625*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Changes 11_9_11", "Section",
 CellChangeTimes->{{3.525350227626395*^9, 3.525350235355837*^9}, {
  3.525356982703125*^9, 3.5253569829375*^9}, {3.52698474759375*^9, 
  3.526984756109375*^9}, {3.527333829227973*^9, 3.52733382958727*^9}, {
  3.529839409421875*^9, 3.529839415421875*^9}}],

Cell[CellGroupData[{

Cell["changes to code", "Subsubsection",
 CellChangeTimes->{{3.5253502633744397`*^9, 3.5253502790013337`*^9}}],

Cell["\<\
1. Modified initPolyGeneration to load for steps > 20; note that the volumne \
functions are expected to be in a certain subdirectory 
2. Modified findrad to no longer have two cases (t+1 > ra and t+r <= R)\
\>", "Text",
 CellChangeTimes->{{3.5253502809874473`*^9, 3.5253503316263437`*^9}, {
   3.5253506224329767`*^9, 3.52535062912836*^9}, {3.5253507282360287`*^9, 
   3.5253508924844227`*^9}, {3.5253509551250057`*^9, 3.525351016272503*^9}, {
   3.5253524357556925`*^9, 3.5253525260928597`*^9}, {3.525354936765625*^9, 
   3.52535510515625*^9}, {3.525357002671875*^9, 3.52535702121875*^9}, {
   3.52535896621875*^9, 3.525359018703125*^9}, {3.52535992925*^9, 
   3.52535993090625*^9}, {3.5253599660625*^9, 3.525359970875*^9}, {
   3.52698476246875*^9, 3.5269848490625*^9}, {3.526985034671875*^9, 
   3.526985062734375*^9}, {3.526985306765625*^9, 3.526985314640625*^9}, {
   3.52698540740625*^9, 3.52698542165625*^9}, {3.52698552128125*^9, 
   3.526985577578125*^9}, 3.526985646875*^9, {3.52698572725*^9, 
   3.526985765171875*^9}, {3.526986643125*^9, 3.526986658015625*^9}, {
   3.526987013765625*^9, 3.526987043140625*^9}, {3.526988914546875*^9, 
   3.526988949265625*^9}, {3.526991004421875*^9, 3.52699103615625*^9}, {
   3.526993380484375*^9, 3.52699339859375*^9}, {3.527333714063875*^9, 
   3.527333726968979*^9}, {3.527333777036207*^9, 3.5273338172774487`*^9}, {
   3.529839424625*^9, 3.52983954003125*^9}, {3.52983960884375*^9, 
   3.529839610125*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Changes 10_6_11", "Section",
 CellChangeTimes->{{3.525350227626395*^9, 3.525350235355837*^9}, {
  3.525356982703125*^9, 3.5253569829375*^9}, {3.52698474759375*^9, 
  3.526984756109375*^9}, {3.527333829227973*^9, 3.52733382958727*^9}}],

Cell[CellGroupData[{

Cell["changes to code", "Subsubsection",
 CellChangeTimes->{{3.5253502633744397`*^9, 3.5253502790013337`*^9}}],

Cell["\<\
1. Added function cdvalforceConfine and cdvalforceConfineClose to compute the \
new cdf - has parameters steps, tau, R, and p
2. Added function cdfvalshortNoDenom computing H without the denominator
3. Modified findrad function to compute full probability value for new \
approach and to use cdvalforceConfine or cdvalforceConfineClose (whichever is \
needed)
4. Old findrad function is now called fineradfast. Removed limitation on 50 \
iterations in the loop of findrad.
5. Commented out determineR function since we currently \
don\[CloseCurlyQuote]t have a accept/reject approach and added determineR \
function without it. 
6. Added volume function - modified to use k instead of k+1
7. Added initPolyGeneration function to load in the functions needed for the \
generation
8. Change generateConfinedPoly and determinR to use exact tau
\
\>", "Text",
 CellChangeTimes->{{3.5253502809874473`*^9, 3.5253503316263437`*^9}, {
   3.5253506224329767`*^9, 3.52535062912836*^9}, {3.5253507282360287`*^9, 
   3.5253508924844227`*^9}, {3.5253509551250057`*^9, 3.525351016272503*^9}, {
   3.5253524357556925`*^9, 3.5253525260928597`*^9}, {3.525354936765625*^9, 
   3.52535510515625*^9}, {3.525357002671875*^9, 3.52535702121875*^9}, {
   3.52535896621875*^9, 3.525359018703125*^9}, {3.52535992925*^9, 
   3.52535993090625*^9}, {3.5253599660625*^9, 3.525359970875*^9}, {
   3.52698476246875*^9, 3.5269848490625*^9}, {3.526985034671875*^9, 
   3.526985062734375*^9}, {3.526985306765625*^9, 3.526985314640625*^9}, {
   3.52698540740625*^9, 3.52698542165625*^9}, {3.52698552128125*^9, 
   3.526985577578125*^9}, 3.526985646875*^9, {3.52698572725*^9, 
   3.526985765171875*^9}, {3.526986643125*^9, 3.526986658015625*^9}, {
   3.526987013765625*^9, 3.526987043140625*^9}, {3.526988914546875*^9, 
   3.526988949265625*^9}, {3.526991004421875*^9, 3.52699103615625*^9}, {
   3.526993380484375*^9, 3.52699339859375*^9}, {3.527333714063875*^9, 
   3.527333726968979*^9}, {3.527333777036207*^9, 3.5273338172774487`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Changes 9_18.5_11", "Section",
 CellChangeTimes->{{3.525350227626395*^9, 3.525350235355837*^9}, {
  3.525356982703125*^9, 3.5253569829375*^9}}],

Cell[CellGroupData[{

Cell["changes to code", "Subsubsection",
 CellChangeTimes->{{3.5253502633744397`*^9, 3.5253502790013337`*^9}}],

Cell["\<\
1.  Edited DT connected sum parser to remove unknots (knots with less than 3 \
crossings) detected as part of the prime decomposition. Prime components do \
not allow for R1 or R2 moves anymore. 
2. Allowed non-integer values for the confinement radius for \
generatefixedoffsetfilebatch and generatefixedoffsetfilebatchstartstop. \
Filenames now include \[OpenCurlyDoubleQuote]Rnumerator_denominator\
\[CloseCurlyDoubleQuote] of the exact fraction for the confinement radius. \
For R = 1.5, the filename contains R3_2.
\
\>", "Text",
 CellChangeTimes->{{3.5253502809874473`*^9, 3.5253503316263437`*^9}, {
  3.5253506224329767`*^9, 3.52535062912836*^9}, {3.5253507282360287`*^9, 
  3.5253508924844227`*^9}, {3.5253509551250057`*^9, 3.525351016272503*^9}, {
  3.5253524357556925`*^9, 3.5253525260928597`*^9}, {3.525354936765625*^9, 
  3.52535510515625*^9}, {3.525357002671875*^9, 3.52535702121875*^9}, {
  3.52535896621875*^9, 3.525359018703125*^9}, {3.52535992925*^9, 
  3.52535993090625*^9}, {3.5253599660625*^9, 3.525359970875*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Changes 9_18_11", "Section",
 CellChangeTimes->{{3.525350227626395*^9, 3.525350235355837*^9}}],

Cell[CellGroupData[{

Cell["changes to code", "Subsubsection",
 CellChangeTimes->{{3.5253502633744397`*^9, 3.5253502790013337`*^9}}],

Cell["\<\
1.  Edited PD connected sum parser to reduce the types of unknots detected as \
prime components
2.  Excluded NotebookDirectory[] concatenation from file commands and instead \
by default sets directory at beginning of file. The limitation of this is \
that now by default any notebook needing the functions in this toolkit will \
create files in the toolkit directory instead of the directory of the \
notebook calling the functions. Easily changed by setting the directory in \
the calling notebook.
5. Added a rotator error example. The rotator seems to malfunction on lattice \
or near lattice polygons. 
SAVE YOUR WORK BEFORE EXECUTING THIS EXAMPLE!\
\>", "Text",
 CellChangeTimes->{{3.5253502809874473`*^9, 3.5253503316263437`*^9}, {
  3.5253506224329767`*^9, 3.52535062912836*^9}, {3.5253507282360287`*^9, 
  3.5253508924844227`*^9}, {3.5253509551250057`*^9, 3.525351016272503*^9}, {
  3.5253524357556925`*^9, 3.5253525260928597`*^9}, {3.525354936765625*^9, 
  3.52535510515625*^9}, {3.525356986125*^9, 3.525356994796875*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Changes 9_14_11", "Section",
 CellChangeTimes->{{3.5248786172724767`*^9, 3.524878644480033*^9}, 
   3.5250477653933773`*^9}],

Cell[CellGroupData[{

Cell["changes to code", "Subsubsection",
 CellChangeTimes->{{3.524878661933031*^9, 3.5248786715355806`*^9}}],

Cell["1. Fixed the PolyinSphere function", "Text",
 CellChangeTimes->{{3.5249144704919567`*^9, 3.524914500483515*^9}}],

Cell["\<\
Added more documentation to the Knotfinder, File convention, testpolygon \
sections\
\>", "Text",
 CellChangeTimes->{{3.524914451315928*^9, 3.524914456250839*^9}, {
  3.524914503843557*^9, 3.524914508259407*^9}, {3.524914544845366*^9, 
  3.5249145498763742`*^9}, {3.5250492010289183`*^9, 3.525049228206359*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Changes 9_12_11", "Section",
 CellChangeTimes->{{3.5248786172724767`*^9, 3.524878644480033*^9}}],

Cell[CellGroupData[{

Cell["changes to code", "Subsubsection",
 CellChangeTimes->{{3.524878661933031*^9, 3.5248786715355806`*^9}}],

Cell["\<\
1. Expanded/Debugged Planar Diagram functions
\t- if we find a segment intersection the code calls Abort[ ];
\t- R1,R2,R3 moves are now reduced consistently and without errors
\t- connected sums can be parsed with decomposePD[ pdcode ];
\t- transformation functions added to go back and forth from list \
representation of the pd code and the \tKnotTheory package's PD[ X[ ...], ... \
] representation (mappd [ listpd] , unmappd[ PD ] )
\t- preliminary PD to polygon function added polygonFromPD[listpd] this \
polygon is reversed to compensate for error in morselink conversion
\t- added abbreviation command to draw pd codes with drawpd[listpd], this \
uses drawmorselink which seems more stable and faster than DrawPD but may \
give the mirror image of the knot intended
2. Fixed reducer to allow full reduction at every step (not \
previously/necessarily implemented). Set default safety value to zero.
3. Added knotatlas' code for knot lookup i.e., IdentifyWithin[ PDcode , \
AllKnots[ ] ];
4. Moved KnotTheory` import to beginning of file to prevent possible \
shadowing issues.\
\>", "Text",
 CellChangeTimes->{{3.524878675313796*^9, 3.5248788640645924`*^9}, {
  3.524878906645028*^9, 3.524879173154271*^9}, {3.5248792490606127`*^9, 
  3.5248793449941*^9}, {3.5248793969990745`*^9, 3.5248794248856697`*^9}, {
  3.524879461800781*^9, 3.5248795126876917`*^9}, {3.5248797644500914`*^9, 
  3.5248797894675226`*^9}, {3.5248801805578914`*^9, 3.5248802476367283`*^9}, {
  3.524880548924961*^9, 3.5248805603236127`*^9}, {3.5248815525303636`*^9, 
  3.5248815539864473`*^9}, {3.5248816641937504`*^9, 3.5248816991417494`*^9}, {
  3.524911673406403*^9, 3.524911698220532*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Changes 9_11_11", "Section",
 CellChangeTimes->{{3.523459962910511*^9, 3.5234599865778646`*^9}, {
  3.523468196110423*^9, 3.5234681974805017`*^9}, {3.524442459419207*^9, 
  3.52444247138097*^9}, {3.524773665684924*^9, 3.524773668402789*^9}, {
  3.524773831790501*^9, 3.524773835380645*^9}}],

Cell[CellGroupData[{

Cell["changes to code", "Subsubsection",
 CellChangeTimes->{{3.524773789335272*^9, 3.524773799236389*^9}}],

Cell["\<\
1. Corrected dowker code comands decomposedt to work correctly with negatives.
2. Added meanpathdist function
3. Added radius of gyration radgyr[lst_]\
\>", "Text",
 CellChangeTimes->{{3.524773671211335*^9, 3.52477374419587*^9}, {
  3.5247737743656797`*^9, 3.524773774741647*^9}}]
}, Open  ]],

Cell["Added section Documentation, Limitations and Examples", "Subsubsection",
 CellChangeTimes->{{3.524773808781434*^9, 3.524773823588682*^9}}],

Cell["Add display function of polygon in sphere", "Subsubsection",
 CellChangeTimes->{{3.524773808781434*^9, 3.524773823588682*^9}, {
  3.524873561301474*^9, 3.524873573435563*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Documentation, Limitations and Examples", "Section",
 CellChangeTimes->{{3.523459962910511*^9, 3.5234599865778646`*^9}, {
  3.523468196110423*^9, 3.5234681974805017`*^9}, {3.524442459419207*^9, 
  3.52444247138097*^9}}],

Cell[CellGroupData[{

Cell["File conventions", "Subsection",
 CellChangeTimes->{{3.523464739616723*^9, 3.523464740720786*^9}, {
  3.524681412425008*^9, 3.5246814134222*^9}, {3.524861432008215*^9, 
  3.524861436973794*^9}, {3.525047744395615*^9, 3.5250477514275503`*^9}, {
  3.525049173163514*^9, 3.525049177564735*^9}}],

Cell["\<\
If there is a file to be read in, put it in the same directory as the \
RandomPolygonToolkit file. The output will also be written to a file that is \
in the same directory as the RandomPolygonToolkit file. The only exception is \
the allcalc[..] functions in the path calculation section.

In order to use these functions do the following

a. Create three directory (folders) called data, flags and polygons which sit \
in a common parent directory (folder). 
b. Put the file RandomPolygonToolkit.nb in the directory (folder) polygons. 
c. Any files containing the polygondata have to be also in the polygons \
directory (folder).
d. The dataoutput created will be located in the two directories (folders) \
data and flags. The directory (folder) data contains the files with the \
output data. The directory (folder) flags will contain the files containing \
the flags. The flags only indicate problems with the computations and if \
there are only a small number of flags then they may be ingnored.\
\>", "Text",
 CellChangeTimes->{{3.525047639406217*^9, 3.525047735030566*^9}, {
  3.525048724976604*^9, 3.525048864115197*^9}, {3.525048934573914*^9, 
  3.52504918798877*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["testpolygons", "Subsection",
 CellChangeTimes->{{3.523464739616723*^9, 3.523464740720786*^9}, {
  3.524681412425008*^9, 3.5246814134222*^9}, {3.524861432008215*^9, 
  3.524861436973794*^9}}],

Cell[" an unknot", "Text",
 CellChangeTimes->{{3.524861440062149*^9, 3.524861442518051*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"testpoly", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.2027316099671975`", ",", 
       RowBox[{"-", "0.2905715029254452`"}], ",", "0.9351299888292302`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.5616704411469235`"}], ",", "0.3345915136954332`", ",", 
       "1.0928027731073293`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.22232405112195353`", ",", "0.9428118334802961`", ",", 
       "0.9686227477696574`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.5533803180081543`"}], ",", "1.00416279291412`", ",", 
       "0.3405154388733104`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.18894837887233992`"}], ",", "0.14064716965803237`", 
       ",", "0.6891271571651092`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.4635916034092878`", ",", "0.5626995549337546`", ",", 
       "0.05979151094207398`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.728278068249634`", ",", "0.3198973531255371`", ",", 
       "0.9930589785671926`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "0.3391081312164841`", ",", "0.42431717250820095`", ",", 
       "0.07783044894756477`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.09633689457309336`"}], ",", "1.3190348940667622`", ",", 
       RowBox[{"-", "0.02150649405034974`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.6140716947925511`", ",", "0.8940766705207293`", ",", 
       RowBox[{"-", "0.5825146440768137`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.10432738519687473`"}], ",", "0.2588412137379732`", ",", 
       RowBox[{"-", "0.8660259777415362`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.6176062596953688`"}], ",", 
       RowBox[{"-", "0.5110123123294431`"}], ",", 
       RowBox[{"-", "0.48672353193459855`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.76009058655302`"}], ",", 
       RowBox[{"-", "0.16826973175714507`"}], ",", "0.4418375807890409`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.3333030869235176`"}], ",", "0.4638090457744234`", ",", 
       RowBox[{"-", "0.07960642235338677`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.7063333316306877`"}], ",", "0.321441236742225`", ",", 
       "0.6863180732069919`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.12723721017122647`"}], ",", "0.06818818456746756`", 
       ",", "1.461244246254966`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.04596036464780813`"}], ",", 
       RowBox[{"-", "0.8790993312549511`"}], ",", "1.151340330905784`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.7365552101881101`"}], ",", 
       RowBox[{"-", "1.052115223634055`"}], ",", "0.4490980220853672`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.9444643085456277`"}], ",", 
       RowBox[{"-", "0.08279030451750868`"}], ",", "0.31801404899992586`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.524443440929653*^9, 3.524443449731904*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"prettyReturn", "[", 
   RowBox[{"testpoly", ",", ".1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{
  3.52448124033709*^9, {3.524481277952393*^9, 3.5244813004163303`*^9}, {
   3.524481375202029*^9, 3.5244813997381887`*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   CylinderBox[{{0, 0, 0}, {0.2027316099671975, -0.2905715029254452, 
     0.9351299888292302}}, 0.1], 
   CylinderBox[{{0.2027316099671975, -0.2905715029254452, 
    0.9351299888292302}, {-0.5616704411469235, 0.3345915136954332, 
    1.0928027731073293`}}, 0.1], 
   CylinderBox[{{-0.5616704411469235, 0.3345915136954332, 
    1.0928027731073293`}, {0.22232405112195353`, 0.9428118334802961, 
    0.9686227477696574}}, 0.1], 
   CylinderBox[{{0.22232405112195353`, 0.9428118334802961, 
    0.9686227477696574}, {-0.5533803180081543, 1.00416279291412, 
    0.3405154388733104}}, 0.1], 
   CylinderBox[{{-0.5533803180081543, 1.00416279291412, 
    0.3405154388733104}, {-0.18894837887233992`, 0.14064716965803237`, 
    0.6891271571651092}}, 0.1], 
   CylinderBox[{{-0.18894837887233992`, 0.14064716965803237`, 
    0.6891271571651092}, {0.4635916034092878, 0.5626995549337546, 
    0.05979151094207398}}, 0.1], 
   CylinderBox[{{0.4635916034092878, 0.5626995549337546, 
    0.05979151094207398}, {0.728278068249634, 0.3198973531255371, 
    0.9930589785671926}}, 0.1], 
   CylinderBox[{{0.728278068249634, 0.3198973531255371, 0.9930589785671926}, {
    0.3391081312164841, 0.42431717250820095`, 0.07783044894756477}}, 0.1], 
   CylinderBox[{{0.3391081312164841, 0.42431717250820095`, 
    0.07783044894756477}, {-0.09633689457309336, 
    1.3190348940667622`, -0.02150649405034974}}, 0.1], 
   CylinderBox[{{-0.09633689457309336, 
    1.3190348940667622`, -0.02150649405034974}, {0.6140716947925511, 
    0.8940766705207293, -0.5825146440768137}}, 0.1], 
   CylinderBox[{{0.6140716947925511, 
    0.8940766705207293, -0.5825146440768137}, {-0.10432738519687473`, 
    0.2588412137379732, -0.8660259777415362}}, 0.1], 
   CylinderBox[{{-0.10432738519687473`, 
    0.2588412137379732, -0.8660259777415362}, {-0.6176062596953688, \
-0.5110123123294431, -0.48672353193459855`}}, 0.1], 
   CylinderBox[{{-0.6176062596953688, -0.5110123123294431, \
-0.48672353193459855`}, {-0.76009058655302, -0.16826973175714507`, 
    0.4418375807890409}}, 0.1], 
   CylinderBox[{{-0.76009058655302, -0.16826973175714507`, 
    0.4418375807890409}, {-1.3333030869235176`, 
    0.4638090457744234, -0.07960642235338677}}, 0.1], 
   CylinderBox[{{-1.3333030869235176`, 
    0.4638090457744234, -0.07960642235338677}, {-0.7063333316306877, 
    0.321441236742225, 0.6863180732069919}}, 0.1], 
   CylinderBox[{{-0.7063333316306877, 0.321441236742225, 
    0.6863180732069919}, {-0.12723721017122647`, 0.06818818456746756, 
    1.461244246254966}}, 0.1], 
   CylinderBox[{{-0.12723721017122647`, 0.06818818456746756, 
    1.461244246254966}, {-0.04596036464780813, -0.8790993312549511, 
    1.151340330905784}}, 0.1], 
   CylinderBox[{{-0.04596036464780813, -0.8790993312549511, 
    1.151340330905784}, {-0.7365552101881101, -1.052115223634055, 
    0.4490980220853672}}, 0.1], 
   CylinderBox[{{-0.7365552101881101, -1.052115223634055, 
    0.4490980220853672}, {-0.9444643085456277, -0.08279030451750868, 
    0.31801404899992586`}}, 0.1], 
   CylinderBox[{{-0.9444643085456277, -0.08279030451750868, 
     0.31801404899992586`}, {0, 0, 0}}, 0.1]}]], "Output",
 CellChangeTimes->{3.524861472979988*^9, 3.524912041786682*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzEvQV4HFeyNqzPEIc2ye4my7vJ7l3I7n73jh2H0eFsaMzMjsfMzMzMzMzM
zIyyZZZs2SLLlgwyS6r/rQNNc3okObnf7+fpsaanu6enznsK3qpT/V2NlnVr
N6rRsl6tGq982bxG07r1arV45YsmzbEr//+Jivo/dbFNfCWK/6aoKP2SRPgX
lZ9CoRCpf1GdxWtUAv9XgD/pInfE83/i0Hz8Vz7HRxetHQU9F8T/+oIXrPML
iR0FnN/Kf3eSx52zLvZ0xOPOWMc9K3YUdB2nv7yjPDjG+vLncj74hHXlnxvk
k8+wr5088bh14i8NB+U37GsrTzxi3d6vcvmN6sRD1jf+Npff2EaeuN/6xt8b
Dipg2NdanrjX+sY/5e3E3daJrxgO8gKH37WSJ+6wbvUvhoOeMOxrKU/cZn3j
3/J24mbrG/9hOKiQYV8LeeJG6xv/lbcT11sn/l/DQU8a9jWXJ66xbvV/DAc9
ZdjXTJ64yvrGInk7cYV1YlHDQU8b9jWVJy61bvUNw0HPGPY1kScutr7x7byd
uMD6xncNBz1r2NdYnjjP+sYPDAf9zLCvkTxxjnXiR3k7caZ1qx8bDnrOsK+h
PHG69Y2f5e3EKdY3fmE46HnDvgbyxEnWN/7HcNALhn315YkTrBO/yduJY61b
/c5wkElJ15Mnjra+sUQuT6wrTxxpnVgqbycOs261jOGgXxj21ZEnDrG+sbzh
IJM9CckTB1rfWDFvJ/a3vrGK4aAXDftqyxP7WidWy9uJvaxbrWE46CXDvh/k
iT2sb/zBcJDJZtaSJ3azTgzl7cTO1q3WNRz0a8O+mvLEjtY3NjAc9BvDPikL
6UOITxrl7cQ21jc2NRxk8guqyxNbWSc2Nxz0O8O+avLE5tattszbiU2tb2xj
OMjkiVSVJzayvrGd4aA/GPZJTEudJb6xY95OrGed2Nlw0B8N+yrLE0PWrXbN
24k/WN/Yw3CQyduqJE+saZ3Yy3DQy4Z9UlPIURGf9MnbiVWsbxyQyxMryBMr
Wt84yHCQyTGU2lD+J75xaN5OLGudONxw0J8N+8rJE0tZtzrScJDJFS0rTyxh
feOYvJ34vfWN4wwH/Zdhn7QxUd9a3zgxbyd+bZ042XDQXw37SssTv7Rudarh
IJO7Le1o1OfWN87I24mfWifOMhz0d8O+kvLEYtatzjEcZHLwpa8Q9aH1jfPz
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
Ror/El9VSmk4jtSsBe+F69DSNxuJ/Jdkbkf5MrdVPMxtP2XUddLYVbzGjsBn
ckpwdKjdbRNje0SXbVTNK0xLaZg2lq24a8yy8wvjYOzmwtCtwhBtS5VG7RTc
1Ev3iVIeGqKsiBUQziU6eWG4cpt3+JOVH44UJkX/yDCJk7f7sW2VYZKlM3WL
WGfSyy9X4GypEUawQjElaIK1q84VFHB1lrNM+r/FZZn/7BGwF64uLNqA1rzT
jLZ/3I4OfN89Rw62rIeDdSZ8fYvQ/iPdFG0CvHPMxb2WxRxrHIrKY8wvkVmE
gh/FyYqyUUQhT9pgAUZqLSKEnRiNI1AaZ2DqLwOdqUDn7Yc5FbPbFQzVrAoG
3epD01gbHDSW3TcsvDCY0wnNc0gn/M6V7c1TRHTGExFdNUdE24HUVUnOxeyM
wQZGRGrKv4PH/OmCcyZNoxVpekWTpp01Iot4eh1K76++MqfWWp8idWn5W01o
8wetaM9/OtPRMn3pTHUOkqZ5giY3sRo0EKumfK2rhIzNenH7N2ki2NgWgAnV
WhEh+azhozIakiWuiZKw0uOIGixW9D+ig6mIDBbD49oAb2sPhuL4bel9Jjwg
ug44ZjyMFDj5FCB42oqYqSm/8l7ZrJTTAmal+RsrWZtj1HM6d1HPTo568Nnk
U+ksu99bKGxsTDzpENdL3Vsj5uA+L1e0l0pLFL6mWu9JKs0Z3+iGEItfb0jr
3m1OOz5rT4eK96SYyoMots5oSmg+ma51mk3yUY7jVSyUO36UZ8uogJ1vZR3O
aQZd6sUl584c6zBl4TUvul3zosw6VIJybGt8hvnP/YFYVv16Xb1VYTJREyed
D+dqGXTFZuiJfRiQE9q5BBDTAcK7D7NzCInCqwYel3DKNc3/oivb+rgRzW78
3I1wVubEPnyZpeSkgyoG3DV33rpui7lkwrq8aofXLkQpw0PPO/BmClLmvVZP
lPVt/agN7fumKx0v14/O1hxO8Y0mUErbGXSj+wK6O3C5YjcnUXilij+7GSkp
ukd5f1wVrhOhzloEL6sZy6xmvbzirZzGG1dWDSCqyvz7KsW/H5P8+0rlJR68
Ib3Ei8pLvIHt3sNMyryXkUNg407vhy3UsVijNR7WyLuou0fuePkXLN3njUmc
2cjzCl86JtmLvzcDd4vi6c9efPkx41668fR/HJ31WotSPekBvW5HGSFzlLHh
vRa064uOdLhkLzpVdQjF1RtDiS2n0PXOc+l23yX0YPgaypq4mbJn7VK5H2ct
yQAVkfhTk5HSl6IqShVqt1fHhk2h1+UUOvcdvIbqecWZfFpYUQo2z6TgMKJa
c8JJcy4T2XFN+XvAWbzy92495BKrh9yeHzhLcRhZc222f+49nO4JX+1tV6/m
QKYr3+9nrgYCzuhCB73e6GLZFdVa24kwTbHplJs2LVaVs5cerKUWVfeTzKOM
G96w4gYWvibFF6i4YdvHbenAd93pRIUBdP6HkXS5yURKbT+TbvZcSPcGr6TM
sRsoa9p2yp4PL3zFEZLr13WMEYlSdC90caYZ/cqW+HfqRS1eKpEpJlH0Wl7U
dkSZUuI5Yg0zDjEAlyXxqu26TuY7RjLf6zFOuzEex+DMnfM4cw8f3Kfsuxi8
W1cixxrelLlnhYubtHG2JndWlrobVvgw4s4iPP7IGSYcuyVzfCpMkF0TnfDi
khon+2xZN2VxBLP3rs3siaZ+cvW07F74tjEUYLHLUKAxbX4focBXCAVK90Eo
MJQuNhhHya2nUVrXeZTRfxk9HLmWsiZtoezZcD6XIP5Zg3m/5Qxxmzt3PUZk
NtC58sSbGnRVFKnyZVZ+uvLJFQYpFvBCCYQMtUN5BJl8hN8bFCx3QxQM8Spr
zVcPx4+bftquu9CO2gXlqKUpR+3RfaDuDobs5iX/6CEsse1ddBKJcvGWetpt
LHLmsQu50oQ6AliL3zMpJs1qnReJSuYaLieVrGuBdZMIzdXFlrBXPqd3V8ud
37O8f74MZx6c3j8PhfD+P21PB4M9KKbSILoQGkUJzeD9d5xNt3ovovtDV1Hm
+I2UNX0HZS/AxF95FB4kIrmdMDYH4EQfTyLZ6MVUSRHO78lFIXVEftmb6Fuq
rKRVDPRJ+AIQF6/3vuT14qvAmnYJGcvVFPpMa2grafRx1U8fuV662QqinpqD
9pRNxLDbdi/cbaMMHJAeiw+Ohvfk+cYbMnhz1O7uqeGUinOttalCMxI3XcCV
+Zt94f6rOQDOSw5rpsJZtxvGxTUS5WKyRPd9Y55C2CaEACsRAvAI7PvaDgEu
NRovQoD07vPpDkKAR6PXUdaUrZQ9dw8mP6K1dScwBHA99yK0OYLQJobZHUyi
+NvkXwzh5u+8CzZ0us7Uk+Iw29YvZYpOz7cw3k6tq0tsGMoj5iqL1zdlqc4g
uazZRSgb6h7YhbvqceHoNuxuGgCadNAQNpiTzVU+8S7ayA1n4teXIoxoNjWA
J9LPGoyckPDyv7rA1mVmnGybXFIsc2MfistyatibfJjJYcEbdljAI3GqymCK
rYuwoAWHBXNUWLCaMidspqyZOyl7EULqVYjaNkHJ7cKsPggVEI1w5yxchYuQ
fOJd4VFzL75wok5XN9hEXUXYCO/CClP+zSrGUTW8/QIGukcTdEGx6u2xsPcW
Bd88LutueBHyPKL26yVlPOmkpIx1MQP7Q+zSXYG1vaZcugcOl46uQ0IJe1U4
4VPKa8weOxdYGKgS1wLmx6CSxWMC/2aAnX4ChG6+5LdgRfRlMFBrqk4rnx0r
fOTKMdixQn1arWKF/d91o2jECjwSHCtcRaxwA7HC3cErKHMMYoWpiBXmIYJb
DpOzHkOwHbN6H5yeo4jkTiHEjoW0L8PKpEANpD2C5LPFul0ZV0xxxBXOxWqS
nisllkM0zjGp5qyu4QpcJy2nY6ftSjeK6JzLE1qYDe4L/gCsopXf10mimqbU
WKL6BoLYWZ7A7l6i1927K909So0m/RhKc3wROSnsfQaKP3eSK+JYLBsswDo6
Kr+zl1HUXywo1vdAsZSR5XVWuJqIN9G3sK2owxJf4AwqOgS8+YXGtOn9llZQ
cboagor6Y8W4iKCi31J6OEIFFbN2YQAwEKthiTbD994NbXAIE/1EimQSL0Ej
JN2T2uBGllwuwEXXTNxbAYizHMGfvXMuafCm09jUbg64K2r5GGNW8FO1pqxO
nuEoH4xbVFbL9JCLfDVNPPKwXBC5TNcg3JA1CHH4ucmW/5dFmffZ/0sV/p/z
kZzmSMSc/NX9GY0Uy1srHQ9dsxcI+9DH1lOvwzConxImm8GFY9CP/NVlqztf
M5Bz8sEGvvHFIp1dUPHFyUoDRXxxpdkkxBezxGDcG4L4YpyOL5gyQXyxIYZo
x3kZXxyDNToNbygO3tAVeENXWRlkwgHKVu0LAD+Vz7xyjxyxiLPWwMnstXcx
e86FCcb8mS6L+ciemyZGT60IyysGq4nX12QdTD+iKtOJWjio4zmeAoPTqsDA
9gcfWf6gxp/zUYjh8Yh/ite7UsFMu+gFveGUsmw7aNZ+kkYpbdV0O3lgZ8mG
ZukOa5ZOP0OjhXg2ghVVWEVVIqpoQls+bE17v+5Cx8oiqqgxjC41RFTRZjql
d0NUMWCZkHnWZEQVcziqOIQQPBpRxRnYmTgZVZxkrlFGFZR8T3JYN7PkoxQh
72xhfiB3/H36dhYtjr1GO66TIwJxVhD4s3veRQRTAp5+CI7SFl3caGL1xIqt
xiHTctkIaKsuXgtTsMkjsVy21mxJIA+A+zEhWq4z1AUDupTV7f09EN6ffsat
66GbJfdGiESuuZ45FLaw4IN9OfIvuo4Q0HpaoYx1jm61FoYyPy7YKhUN+JB1
Pd3xwxIVP+z8vAMdLtFLxQ+jZfzQaQ7d6rOY7g9D/DB+k5B19kLEDyuP2STJ
QSZJED+cuS6VWAIglcqZRrcSe8CAwxaP9/uu3aM552QkuFM0YHLGGs7VVv7s
ni7896bGwmpVvvIPt9TKqggoe9rwUQ3xGqDgB7GiNIVXtNZdYFPHU6DdFznq
AKJVHYB28+5ge3T/nlruYD8ElB8ROU49IjJYPNk35uCK1ZzTs/5cS5SGmECY
R5u9YuPsD64G+U5S2MnF6ycChXF03TyxQjHECt8iVijfn87VGkHxjSfQ1XaI
FXosoLuDOFZYL+qcot6ANYBnsg8SPMp0SKqkQzhESIZ2uv7IpbiylED5o5M3
H1HfHUTjjsrKNc4V7eJCjAxnOJFbDs/dYE5nxFx1J6qc1I+7EyufOMPfLmRs
0BIBYzXF60uyYUUXudTUxRyrFXubHfWjXt/NhS/xLEqBLzng4tqGVX6eOtPw
In5/XsXCVUEDrl62cfVbq9TdxP3q9btiCb2TitO9AzvDmrwpnX5uOHKkVG84
/UMoDk5/UquplNZlLt3ut1TKk58w7nH4hZRPMN+R5uI76Eam7fBjpt7HrnT8
fxEfb0vOoLbwWvoxuI7ZiUgbXM7gwJnady5cCufqnKX13uX77JCKDoafuTnx
LYqjE72vOJ1fP8/gqqUOCFbNoGAvuRxUE8OjHevpnPl87ZSxClfAKiDjwXY7
xGPhi1/LsRo0POfq7UKxwQbRE34gMtK7T1jNcjS9q55tJ8H+s3CWrZK1kpK2
f9pO+u8VB9L52iPpStNJlNphloLQ+650p0Vh7MfsO5Yo5coUxpVwCoP10yPl
WiQCVscwM8sPh7GYRdQOcOq/k2i8gtPaJFm8Eq0msjSJpgy+vbjIRL9FSnjt
UXppTCCcdnMsJMojmn4Qrz+T1SEDJeXbykH5ismS4Mjac5XmA/6FLWU497SA
0M8j+/LGFKqj+8N728VACwe9UJ6gk99iaWWDW/Fy6BRJ5BSyCbK6qhxoBDS7
cMHHKYQU801b0p44osOIb07aDIOQnWYY7pDFMNzDdh1yuZCRTeuu3BAlhhUU
WtqvhhOLkGnCcenEMoW5hxOGKmVz9e498k/E6+5O4YSZs3XZpIC55oOb8wlD
HrCJMquDEyffmxkR87w/YmqL12co2DxLdOb3krTOvLsqopRIeZYeLE/BlV1+
eIQ8qN18T5ae84A+yQh50oGQ7CVd6eagkPR8TDy+AikgoXsg80LBkNzkUzSi
PqVbvRerZOImyprhTCY6gv3j+FVnwoN9IRxDsH8o7QF+H6BQl4QXUGEEUT3E
NB3WKDhEK0Y72Q2H1Lt3KXLGvLvyqduoHhwNw+q/nfkjb22GTpmFEVUlYadD
ZnuUIx6gQT6NF7UYvAqx/iKbN9XLupxpcg5GpWZnSDxncJhN9YzO5GSMRSU9
JdBQQOqLdUMoc1oTOvqDejRKQScgxCZ7wAsNwUP/peSJ+oVElZ9M8a13p/jW
GlJ8rmDc7dOybDgYT8XfZxCML4u7TsHXz+K34ffVk1CoOBIymiOhMBBKZ2K0
mjfJsoXDSWWzGQq3085ReA7buUbF5o1MddfOdI5eW60LKLj6UFTaBhx8ke4g
VOWxoSBcjLJAfje5yq/JMjdvudy53B+RI4/J8wIKz/j6tc7nErFfG+Ue/4Jy
/I/AEdo+CYDrRreGhJTd4Eaq9ZwAeNoaf2Eror4SJ6f1DokSPHOu7YIn18ax
8t2IsTJLZv/1+2q+bgQIzkmQMwi6AgSjJAg6riUaBBBMOiFBwJHnPpXRZxBc
u3uHbl8/Q7ePz6TwnLJzTYjN6DjLnp1tpiYH3KuWdTGDicmx1n80DJkaCisc
PGX4KOTEAacVatwRNQzc1E/zh2M1f6jyycHAYjGmLwgcPJ0LlzSRRBN7CwKF
JAQuwM07Cd2zb554umHm9KYUXZeXGGkD0dCiZZ60cFBI4OBL8UlYzmubJ+d1
wZHz4sl/KzygTREBbaYQhyxzZzO+iYJvnMcvwy+pT2J2VAIGGswl6rQOGIC+
mXxCsg+cZNIYiL+XTdfuZNDtazF06+BEMud2nYswpG1gvsVbimxKZmxy2AYv
zyI67xSHY1krFPVYIHhOgaCj/J8LCwbLTnht1ipq74Sd2A0GNmDbShYOnpKn
+fZWSBXjWNAGwZMSBImJctXDGcj0yEqY8MnQ5d3p9tCQjYPGsqX2KbYSGgdC
M6hm3xGTTbmMPXdevaO6hhRVOOAx2kzBN4GDEvglDUisha48mqghcNAZOBi8
Vy7d18nG/SqIuwwcXL9zizJST9DNPSPFYwbdxIhpGQQTI60EMeItFXYmFJx5
/r0qabDIS4jwkgdu+tkyZOyXn2ssDNT2Xyb6MQXqaAJO9eHinx4M7MF2wIsF
/ufnQUr/Dlh4WmDhaXlCKsYhGSr7Ci56AS5dzBbIdL54MlzmjGYU08DCBB/O
KUxsctnecwIO8hEcwg1UcaPI+Vhx44OwuDFTxY2cjjx+45GsBNELXrZQ8K0L
FCyJ+25IIrdXeQxRI6irznCjh2D0p/Dos8t0VdZ8ytHPwujfpIyrxyl9+0Dx
RED/tKaXuZBtYXUFr4nj18tXdyiLEMZY6AUIdUOPNfjPq8GfqO54nnzfSa7E
4kZsXbdIdoz7WXFmM1gkBvPkLMmnlEir4AgKFRK8j2q6RfKZJ0oh5NOcBHfz
5LjtKry2xCS5LO8sZH0U9mjHFHxjD8oYFvoDX1TEDco9ABSeFyCQ92+Fg1z5
fem2O+FsCgfvZNOGhJuq+8hrYm4KFLwdCwTgfhtJBFSB09wImOyyAU4zAqmp
MdJp3qwQcJpzHUBAWkY6ZaQccT1P3T+p6CUbuIkq8+91RTLfl38P2Mltq42V
Jhm+E4nEx0JAQYWABdiWYVvNXpF6FMJTYhlUUw+NJY7/9Ap0fZLy2xkFbmqg
gLq2028Un99/EPWkjYCf0X2IMpsfY8NIuI7hSmXGNU3qhVh4IzFbMb/5scjQ
CzOb05kmvOqT7GeZsW5VGgLjiVcRRig3xwoME1RgmG7OAifgSw+nPVBPlSiq
tOFWCYpSChA9JSAaAxBdGRD7JSAEZZwqV4ueEYDIBCDSKCP5UNgDQv1Tf14+
Qa5qd1a9asY8LNP8ejiPcErzCE3MRuG5nFBRSKFinbSLgZ3Y9mI7hO24xAyP
7ndXIR4EUhVg+avfVpM6HA1PqO9h5l17eYKLzK+CjDgM9lW4nLfhZGemOhAh
dEOG1A3xWjeshgWfCkewJ90ZEZLPTJNoECS5DieEBZZ3BFQ8JVDxrLwtnxhR
J2w5RjyLGHHFxbSnLEDwQG2j4DtxEhSNSdC8VaElmwCdXWEmhwEQ06ABlnL9
B+feFTGXcO8Rpd2+RneSDtgPIFZPbYqcpfMyCnJFuR/L7c0Hhy2ELyEyc3kF
RB3x+oIS6QFsR7GdQOB0hoLvwmR+dImCnyXA3CfLZbzlMOWrYsr/gPCiAQKt
ZvAu22Tml8w2wCH+EqlmgTL4dcsRZ22FW38I0+kMpswVSCkNI37PVzlcspXD
AVYOw6EcWtD55uqJvzLr9RQ5C4tlpNlGOWQLxXBKHQR4CF/Tck0eGqNHrp24
jPcHrt+XifLXlVLfDjlcpGCZDAmN3oDFeMBiIVE3wGI4vKfpp6Tx3HpNwuKs
gkX67at0J3Gv4SHC1yhyds3MLpjYam8CN4xV+Eb1EuwQMj08TCHD9Ci0uuJV
uuXB107BgUIo/UEcBT+5TMGv2AVIhVTgFFaGK1AzAyH2PQo2ARpaZ8LFyIJG
zRZrH8WTRDGRSk4jyRjhdagC90RpBiWv8Tt8zREKlr1HJVoQ1ehL1Aqn9YOP
Nh46YT7AsA7C3o3gIPos9H4cvEClVB4ZlQo+iMeBZ2Haj2ml0ovujpRrU+3W
kkyABNzlwn0Fmhoop26GVJWFD6pgmY2RCFokoCKEozG3Mu2Fiuwn7qDge5hQ
ZTF5msootdoE2OBFRN03KTCdllzNNq73VvW2iXBt0m+l0J2E3WFPhbuRGkPh
2TRv5Xs4S+Gs/jSR2cxIcJmTl50QVe4N8gqmeuL1DxJMXyTCZ0yRtqWitC3B
OnehdR8gOHlEwY4AT/ds8UgCXtQYhFkuicErCyTUWJFFbbbdFjlQHqjOyqfq
r0i3USq+miZ/zVMaWB8Drz88ogpwfevjkl2mQaHD/Z0OS79sl0E9Idy4l+JU
T9lSPaWkK/UEFMZsg7aAGtg4grJmtaS41nLJoA2s/MqB0gXB+tHmUld1VH7C
UiBrp3S8P0kgC2AqqPaJcXen3pXS/pXSeLjC+wBWORtY1QGsZgyszUQjEFXP
OK1ylJxVUmvzkgCsG7eS6M6VHV4NlU+NmNvTNVW1SxtW3sF8eMs4vaw4Z2pd
jIeuYK+RV1zVd+IqcBzbfkR4MEstgKP2UETdskU3Ka5tsnCEmL/GcomjCrhb
Hh6u12ighoktcCf1C/opdcu4Gq9+CVy0JzWuisBilr5LxZsRVe9D1BJf0ReX
H4cAZx4U1tr9tsKKZYWFSOZWmMJ6JBVWEisseOBncdKxNUS7ANIVvene6JDd
XFQ1nhbhVvCDJB1pjbNQ1VRNfFYIm4AsKNT3oLO/u04VqtwThz+nnGnpsLvj
5ugbj16wYMVjvQuwiqdgecxO/MQSfSW0mi0m6gFYjUTkOBN+2wr8rO3XJazO
C1g9oBs3E+nOpa0eXXUyvwUrp69sKlaXJEplB4nix647s7XsN+8oKgMpqzC9
ecj0hOIIsGrgglW08oygvAPriZ8GLOrLhcIdryZEPzUZ2sLDb4bJUF8sJ+C1
oVxDy+l17m7RUWmBvioMHKl+yRQPrD6Ew1XzEZXvQFQPyO0M1A6FzKdBXS2F
utpyGAEJ1NXp8/BZlLq6q9RVdpi6ipfq6hSrK+iDjSMpa3Yrim8fsjvYPWHB
qiDDyqKRQ+pX8TitBJoQJBSFX/h5MpUud5uq13lEDVoTte5Ftq+lQk4djMfC
Km5OvKVWobykzNNufMtlCavmgFU/TMhJElo9txCNAqxmnZEdErik8uhtWfWf
DFjdvHmF7sRtdD2orICFKa+77U/NVPdQM16y3pnT1ZSMfj6FqC4P5RVTjcTr
7z14Yu51BckAfYbC03DlCfIdt8MsaI4Aob7oP8QBEPc2a+LAEwcLfZSyHaE8
wylydqinZABQhSHxktI2VIMH23wMUZ85RGNXEs2FxNfCR9oFjByH1C9ATyVH
1FMpUk+dYz21FidOhwboQ/fHhIRjrqMMRsHBVvt442yQQJVEVCv1G/k3b8W9
QW1/GC8I50rV71Md3GPzLkSdBuEeJ5CueJD8IF9Uh/RH0h/+0kIVy20PrnMF
4Sr8UDiQJRlVk4laLJHIGnVYNhHk5Aej6phaS5J89z5QdZnuXFjrfO6MarP4
e2UAnZ66P9VjKrXU1L9zWSFT/2EUT9WQ8UHqESDV2LpFBGyBg9IN4KwXT1YR
BM1QdnuEuuXuKrBgSDUQy0yckOLK2A4eSDExMVZNjBkWpGAf3sMErv6QyrUn
qjOEqOMUoiFQL1PXQ0ftxKSHuA+cVDoKHtN1o47inifwOxKgo+KioaO2a+KH
e5/rn2lCVD5+zS9g9TzJVGNvpZLXAlKYXm+dp+B/rlLZineoZv0satyOqC3s
V49RRIOA2DGAxdQN6rIFGV66VoFv6lxGNq2KT1fPo31RqRSov48AsIoAWEsA
DP5pTQCs5VKiXlslyJhBW6VqdI+rJkIpANitG5fozrmV+kFdT1gaaw6Z04tm
1qiuYI3C0wnOZYM6z2yxRao4PLGRUWP9zB9eTSx4nSRJDu2SXkVglYLXTCUY
tt9Ma/Qg2SelBXRsQwEv7jHFpf28lpNXgzAJ2lXZ8YHqF4xR4cf0gHo8N1fH
BRbL9BMwXrUnPNnREPJsDNsKqbHWQGPtPIZZ7NBYN6GxHoZprDuq5ghW4jhm
+O4ZMCx96MHY0NMGWBUQry8yrpSyaq9MyRI5uwrDTf/4CpUsdYuq1npI9aBo
WnZHQAEr3Q8mbMR8ookINmdvk6msNZgBW2KpoILW+Rs3Bclw8Pp99YD1F9XY
76NgMRj9SvcFtEohbq6FCdVyGVFvXGrMEQkvLv/WJZRxqorp1o04yjgDDMpH
tBSyBs0vY2nmnpwVlqY8hc5ca87J6vFQy6y2FK4KGT5qpm+xMOPqsAdXi5TG
naS07UA1EzpSccyCsrhV5ny4aJGfpcDcDxdas8blcLaXun3GlYNhULiCqnj7
IgWrPqCyUAehwUQdMIEHI4ibuo5oCautQ1JtnYLainerLYWjJ5XK4qcVnsCB
OzCc8M02jaasuW0oqauPAeTX3ylcNVbaeLbU1oUhgndjEROzk36XajfKpqYd
cWsAQS8EFENmIaAAEKZvIlqwB+iFod4IPbMDd7D/KtwjlbM+C0Ccz8ikU5eP
/VphSxOlIiwqhrC7MvDVCvgaCHzBqWyFy/YBvsYelfjSJbrRDnzdTo+ljJiF
/BCVpyxs+WVAbfKquIO8aqqyH5q80tkPZzZck1ZcHqPLwJNah6L+mTdsNdea
lSeqwBa3nWeSe7XUKULokxW2Bqlb7iRutwwGpiL8weoGbHmJhtEBF9EgnYWn
EWjdRPyZTVV6EDWFpekJlTUaKmsOoqXVe5XKOq0YzGfcmioVY5iE8bwM6J07
gEkOSO6eifHuSw/Hh4xWUMLqt0pVdVGzBv5k4T3KU0+i0mXhqYdsT73bCKIB
GPtRQP3ktfKhc6Lk6hTR1otEe5I5W0J04rYkuM/fyaZzaSlRv3Fhapr0YZlX
qfKAgrh2aWDqB4SsrZcDU9slpnhNAY/Obk+pHddX8SOlricftTEVqSLc5rBK
Kw7LWZBpSqDozLrFXekODfXyjKkWFqZO4RaOSE+TU8qBNcowzFGYGq2sd291
u61xu00sTDG7yI8v8pJXTpKBMaVIBhnWFKLgG9ANlR9QmTZEtSHk9rAzgzB4
U9aRZdpOqU6T1zCB76QglGN9pTKwwsm6aWus06yx4P1sHkNZ89pScvdQoRyh
1ULZj/nyh7PL/sElP5edhs0lmgBnZyYM9SJECavwrZsuQLXAfB0E5I+r/DpT
UOdv3ZMpv6hfKGjBj/0kSSjpIH5xmUESVm0wi/put1cTcPk3D9IJq2xPVmzp
7AMr2zDqyum5h1NXzoJOv/QLq6o9mrL6XvRsyyOaWoahaa8BTVOU2zFEGewu
FpoqQJnmRFkZuAXrsblc1wd/uHI3jZ5f0mxop1XQTjswZY+expjEQhMBLTcg
4wfOLM21TIeawiCch4sTDYd/D9TUqn70cEKdqMhYqqOM+TT5cwvDLL15joJf
wU+vIP30Rk4/fYblp9O8XUTLcX/r4fBtR7iwL4UjQLmO56xQU1l0JuWCB0tw
Wj9NpmC1h2LdWRkY/NrTJZZ4ZQovJZh/wS4O52Gyqv+uxcgCao0lL1/l9NLD
+SpnNagxXxNw8FRfWU3ZXs0bllpZWDpNMnPHWEJMzUEQM8uBuWoGjFXo76vu
tg1iiqaC/swNT+XhFQSJl1/ZsFpwU9pNJBq4QNqTRZikG4GLfZj0MedcainK
rZceKL3E3SM5UoT7dUjrpXaU0iP0hAFL+V16qa2a2GzYd0iHEt55iVI3qUqt
B0bvfJLyzpewdx4D7zwOVha3d+i67Ml7WuilbLjq6VGyGe/PFZbgTHyWYmGp
LGLeEPDZdqValnJcltRxOTEfzx4ZD9W1O7cVOSZx6U9SOdsiaJLKXiPsydXo
TNp+ZyF57bzip7U2vkUYP8dIxCGcCBelAVwwMk/d7DhlAPoqBy8yz+klEUYE
LBJBFnnxAH55jYJ1s6hSV6JG8Em6Q4eMhD86C27uSri52zHZj0AZnYNQEyMq
o1SljA4pZQR/eXV/ejSxblRkADVUTitbiQ3SDX9HuuHlK9+lH7Qb3t/ghu91
u+EHUnmtknTDz93jFSmZFHPpQJQobVJ1CcHPrwrCJNhOgqfODHtNE69SWRAn
wbPvhrVqgodKVVqoUWQKzZs4Dm9U6qSjGgfqYZLK612uEtLEitVpzoCUJwwf
tRWvv5JepUAKVDfnxsMYcY0UzYhrBrNBGIPpoJskKP6kaQDxnSLdXvQEBcvf
o1KwmjUxEG3gXQzgWbyGaCEUzQalaE5iIC7CeU3FTM6AZci65gQKFM3VW1LR
XNSKBgHzlrGUPb89Xe2lFM0fnTgRm1QynZUHsVzyqK9hrnzm8at7wq8ebvvV
U6AH5yq/eh0wvA23tjdZGizbr86ic9eTVJG0KtWr8Uis5ygHhVVnpr2KSa9V
2OAqTZULVllwzymcmRPB3gYEkk+qEmiiuK+kdAQkp+Ik7Ewa5Fl/XLTTau1N
xsXxCLjwMtvtLVw4eCJpVP5iUUQ6lB9jh/LW1wc/w4QKZVLFLkQNIfxumFAj
MKwzMUFXaAVyKicFwoWqrEBilQKBq7EHQdvqAVAg9TRP58SFxEQz5ZvNk75b
4WPSIQ6mU6VquXOIN/s5xDczxMKqfKpcvtwwe0Ubr1uZFG2Xq++3dYWeMWRR
xk+ROXfr6hIglWMhxkBBxoCntsukJSKgob36+uA7ZylynsNJSlusoRz9vwvC
0I/YcZaOqODbqhspyXUj/TAdx0OtzpNM3ALY+g2IpvdGO7QExJ6B6ZiVatIS
+PAiJ9cw7w5D328ZR9kLOlBqb6Ulfm+hQSKhh1LHq4EC7HuD3dkUuLMZVLOe
cmf7GNzZ3eHurCByHO7s6cRTsovFk7K6yk9hP03mbKokZKTz0t4a5kKGYf6b
4doRhrmjhS8eYlPewSKGVYzxz4jknbeSwxAMu0o4GmBKdIUfPxyzfcZGzHYI
c9sRDBdm+9kLMtJNx2y/b5zt19Rsh24+gZP3YravGUiPJtVXv/V3juSnLihb
JJVaYVijYpepREmHf9ktZ/9yT5KkVLivBVcVn4d/eS79mqkz0LOWaM1uory1
Hko3YDifNAznX/M2nJ3EK6/YcqaRNkmb/N+UE1VmojWctRPOQDRYBOahzF0q
0ZyouqPCa4KaqesxU/dgpp7gCi9H2Wj4TOWScp6pGPIzaqZuHU/ZCzvStT6a
7v0N2UVcM6VJKoyI8J0LFPzmmnTyGmZTkw45O3k7rygnTytq5lpvPzS1a5eC
Lmhy1GQuUwzbUz9+2Drzq5xeRcifP7cHzuajIjMIzuoEHfVZJQkdZUmCs4LK
WeAppl+8YfqJAk89/TAnLvD0g5T3zpHTb3IDlXHVoZ2uj0IUUngXgHMKBj+R
SpW5TdXY62rl8boWCUKM5sK3W6a9rku218U0gfa6zl67bHyO4jPWPHB5UWLQ
nvqJBq2DPWhviD0yuRaJqDaTil4ayBS6O0MvkWQpdYeKqxKAFo5SJVFb6ShV
ilywfVst9eKZh5E/vBySnkDZizpRWr+Q9ESsQdTlSHPlbyt8lILvX6Tg9+lU
EW5SqAncpM7+btJqp5t0XT62yYrPb96SEjQOYn6nAo167BEsaPionTWC8tOi
nlxDbpg8yb6U92Ff/FLwIuVe4yGVA4jqIoLspMqCrCrGw7kpstYrs+LUsk3M
wX2Q+9pB9GhKQ8/w6dqfVcq3gVf3JXyb8uzbZFKjtuG+DZcozVe+zYaz0rdx
JanuqiTVlePG4dNN4Vl76sUEYuSe/vEjJ9gyR43Kd2rkvIy+H2/m5j38ollv
dlv2Ir1NQYC9ai9Ze9Nb1d4YawRznHh6jeUKTLyJlL24C6X3VyFRwFlfI6vg
g4WjbaelJpyW5j5Oy3az03JCOy0iD3Q16q2Ik25OzqNmcjaf8R+15tZ8k2HN
tx7m3MR25o6D8NYkOHPHIk9cTeaJ6wy2y1umqfIWqwTvgl2C564Y1gsaHKsg
xRJpnmuD6dHURmrEnKUrsso8+DYclK/dDkp7j4MyY7NyUOAsbTzv56Dcp6vz
mr7tJ2/bGzENkyn0izBMTaxhkg+E+7WHlI5EKkakBMQweSJBtYLtNZlvbSTz
raYSEV3UJiaWsajNsQSJlyfqxcvbJ2FidaUbA3UNyFgJMe2KfMquyC2qVjsH
V+RIZFfkTEospa3p/I5BoE//5EPU0Boiq/YkjPfNibWxq3sMgZwseC8qIgCR
tazygMrASNQe5Ci0WK8KLZz1YfGy0MI8gdIcE2iL6jEwhDKnchXFQGXnVamz
5VvcE75FM5NvsdXhW8T6cv+UfmoRpW8bEPWu39CoscDQ8CZpNNMg/cNwgQiD
VM8aJJnJ+jkFX/OjXP3JFE+0LW8p6k2h9poqd5/nkuju0CCbKncnasL1CrMc
9QqGEqsc549YwrfSaghycxDPH1U6zA1ZvkihMnAfauTgPqw4Jt0HvxqXmEsH
Ke3sSrqxbwwlTa1vGiRnvYRrkEw+oIn1jDBIoumK8CQ0ext8w8l/ehkvb52c
rmcSgbRSZu+KxpEVleJzDpRYi1fpPpVuTfSDuwCAFu8g2uRfs+QpB3curtsi
V+Rzu45pTaQdZU/ho3gqXkJ6CnUjeQrcMRf2b2uc21NwMNvAxFG6FruR0o9M
pevL24rYsmcgZFJ2psEqwK9POAYLfwlJmdaIqMEykWS1rBklHg/GOZS3vfSk
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
/EoaygoGWjXLs1D2TZayBIlIURdSaJshxvVCVUeh7Ib4MimiGf4Ew/DxXATW
rjtN1ZkYNmFAf6t1hWcnIFq8yMZAGzhqnQTcBwc8N5zky2KvFwLFQb766LIB
OFqPARREHlUT9jTuVmq8rUBFHHnLGKhiaRZVLMFl8SHULqKjwEIGql2ApTMf
l3kHUTuXuOwcBqr9GjvVbF0xi95iJiLy9d42Yz/2mek0a6cRTKU9cQrBZAC9
zCSCiQQTmE9JMWwSAdnr13y8IljVQSjTlkMtQUZ5ioGUtwNXQJUGwlZQaQ/D
XvmLLni08ZCCtnzrhnM01OnNj6wwsU7ze+lpMw/4movLHFySou+aS6NvL9qO
1ywfXykbm8kfVBydSd3SmT1yqxpJ8+tL4nojCIYTDCMYStLGENoDBhMMpJcZ
QOPsT9CXlnsfmpO9CXrSPO+xmfYigq4kqHahfaMzQUdCQIf1SrUnaEdTsjXN
45ariIUQp25MCGqwTFNU2gslKhuK3uj2R4mO1tmDD86tNBmjTFaHwAd9BHrq
diLp82yZC5jkvawI1lXHOsMFXU89d+/AKuTc08DgIGBwB2OwHzC4jTHYy8Ng
Nw+DnTwMfrGOMyW0pHNQc9pdmhAGkeHiM9p069IuUWuhUjXnq8gLhUOn5B3T
LgyxvCzu1DPBvkNf7x0wE+w72Jng9NewZ5Vje5YN9PTt4ImuLwW91hIiIXQg
0mSMqIIwXilE0ryyZPmTnHtsO5+Zs9x0c1zvaowxNuDR2XJNwP+KVJy79IzZ
h9AcjeCKwlgkvmVe51duQUgvwfFpv2atEIJ18P2ruvHUn86kmOCKYL2PCpIA
EsURPdBKwvPuCB+opDhtFTrkm42yY4nTY9sQtoDBy7OX21wlEo41DY/r/aZy
6CPFUd/s0CuN9Q6H3vW855SOq13xHUNYY/A1aN9iG+bp4Y1RiiK7LXyMvxOq
mofOopt4pEYdiMikgHVgIVsHfDOi9ULASPVeSsNMWBipYpWDqcTAA8k/lpex
SfLwejAYByptbelaygmg18at4dGwYaaKWDPMPzjiS4O7k2tZ6tOhJlCrjvDU
qqs4OWOaMJJqQodSKJsZiaRAkfzAtSx0ldLekOo4j06KipLO+eZRUlUjocwy
bjtv8Y5XuodK4TzSS5iH3uowLT3qL+6t6gm1kqLPdCtNwc+FspFCmaTxNd3e
4UZ7GTqTWJX0mqNS7JaNDCLTryuUjRbKpOVpur3LvbrU2RihTNqdTGeShqKW
UDZWKJOCYEy3ksLqU6FsnFAmWXRMt391r34ZOpOsRJ8IZeOFMomTmm7/7sYo
dTZBKJMM2aYzyR/qY6FsYordcuyt6IgnbcyThDLJDcN0e497damzyUKZJAma
zqSIAUneKWS3UrhPTCibIpRJorrp9n736lJnU4UyyVXWdCYFb34klE0Tym4M
7/ZBN0aps+lCmXR4N51JmTLeF8pmpNjtFdytlETlPaHsK6FM0hWZbh9xr34Z
OpNynJUXymYKZdcJZaZbKTXh20LZLKHsF0KZ6baYe3Wps9lCmaSaNp1JCXzL
CGVzhLJrhDLT7VNujFJnc4Wyq8M7e0aoeiPFbvUYr0DRFfyX7vFZoeXrQtm8
sIEW6LG4e2Gpn/lC2VViP88LLV8VyhYIZUXEHiXtRUmhbKFQdqXYYwn3rlI/
i4SydLGfl4SWUtlioSxN7PFlN7L/rB/pvSQ8Lrl0jxGRfBKZlwpl0cTOSrk3
lLpYpq9X+mX6H/22i0mantJy+EZf0wNdxYchLT9pmS5PKPMG8qZ7k0LeKO0o
0ja2wj3A3FjWFUjNVyaiupzQSNrSNdKv9G6UtmWJxeiVojFchG8s7wYoNZ/n
mpt8qe8KjSR2O8sNkPk081/9HKn5dPcclgwjHwiNpFQik92NfJCIfCg0kkSh
cW6AfO5k2UgPUGo+yj2Hz6Kiek8SC4e7G/kkJ8qJkpg6yA2Qz0Est+oBSs37
ueewOzN/NCqhkSSy93I3cigdy/D6OVLzrm5YnGFC1IBIHrQd3XN4AkSkJD3S
caqteyKvBD5f6QFKzVu65zzNzSW9iXS0bOpufI5vlI6H0lG3gRvgi3xjLTdA
qXk99xzepSN1hEbSsb+Wu5G3QtYDRONzK9i8uhtWWW4upfeQNCtV3XM4O2Tk
M6HRbUJZzN3Iy5d1NHqAUvMP3AB5MfGHcBMaScqmd9xz+Igo6rUkdVL8eyl8
rGbdWzS+CwgCnx4gazN4iiQ0kvQir7rnMM5ZKaqfIzV/yTVnDERaCI0kbcFz
boA8sogU7S4d4Z92T2R1OGvw9QCl5sVcczYqRdoIjaSD7cNugGxvFy000iH2
AffEbnxjOzdAqXlR17wXN5dCfKXT2N1ugP34xg7uOVLzv7rnDObm4TGmwnrW
zxnON3YWGkmHm9vdE1nDF+niBig1/5NrzhqnSDehURGh7LdugKwLiXQXGknf
vYunWuBTOnv46QFKzW90zfnUyPxHEkElrOoB8gkp0ts9R2pexD2HRfBI34RG
9D+fEXQjFj2ZixZBwSouiFzxb9mMpeM=\
\>"]]
}, Open  ]],

Cell[TextData[{
 "This is the knot ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["7", "1"], TraditionalForm]]],
 "as a minimal stick knot"
}], "Text",
 CellChangeTimes->{{3.524861440062149*^9, 3.524861442518051*^9}, {
  3.5248614874233913`*^9, 3.524861498997056*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"stick9knot71", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "14.1290948304074657216"}], ",", 
        RowBox[{"-", "22.6496315733981390395"}], ",", 
        RowBox[{"-", "18.0558960444480689489"}]}], "}"}], ",", "\n", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "13.7496054174481621146"}], ",", "9.4073491057062170739",
         ",", "8.4017284004146226550"}], "}"}], ",", 
      RowBox[{"{", "\n", 
       RowBox[{"14.8376842875557279910", ",", 
        RowBox[{"-", "17.9742172573713787642"}], ",", 
        RowBox[{"-", "4.2796099290585054575"}]}], "}"}], ",", 
      RowBox[{"{", "\n", 
       RowBox[{
       "3.7199907329964867486", ",", "20.4478738723734103644", ",", 
        "7.0314264592100705897"}], "}"}], ",", 
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"-", "3.7190658714125395257"}], ",", 
        RowBox[{"-", "20.4478530889670295778"}], ",", 
        "7.0318836941504487825"}], "}"}], ",", 
      RowBox[{"{", "\n", 
       RowBox[{
        RowBox[{"-", "14.8381986768636551233"}], ",", 
        "17.9741860822618058080", ",", 
        RowBox[{"-", "4.2779264731416581924"}]}], "}"}], ",", 
      RowBox[{"{", "\n", 
       RowBox[{"13.7505302790321088935", ",", 
        RowBox[{"-", "9.4074166517769537421"}], ",", 
        "8.4001072947169159733"}], "}"}], ",", 
      RowBox[{"{", "\n", 
       RowBox[{"14.1269229644406681956", ",", "22.6498757784231159462", ",", 
        RowBox[{"-", "18.0571846156436777164"}]}], "}"}], ",", 
      RowBox[{"{", "\n", 
       RowBox[{"0.0008365321068287003", ",", 
        RowBox[{"-", "0.0001714631026419100"}], ",", 
        "13.8054712137998532029"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "14.1290948304074657216"}], ",", 
        RowBox[{"-", "22.6496315733981390395"}], ",", 
        RowBox[{"-", "18.0558960444480689489"}]}], "}"}]}], "}"}]}], ";"}], 
  "\n"}]], "Input",
 CellChangeTimes->{{3.52485854151622*^9, 3.524858601301167*^9}, {
  3.524860353113076*^9, 3.524860353730702*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"prettyReturn", "[", 
   RowBox[{"stick9knot71", ",", ".2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{
  3.52448124033709*^9, {3.524481277952393*^9, 3.5244813004163303`*^9}, {
   3.524481375202029*^9, 3.5244813997381887`*^9}, {3.5248615172337008`*^9, 
   3.524861527087597*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   CylinderBox[{{-14.129094830407466`, -22.64963157339814, \
-18.05589604444807}, {-13.749605417448162`, 9.407349105706217, 
    8.401728400414623}}, 0.2], 
   CylinderBox[{{-13.749605417448162`, 9.407349105706217, 
    8.401728400414623}, {
    14.837684287555728`, -17.97421725737138, -4.2796099290585055`}}, 0.2], 
   CylinderBox[{{
    14.837684287555728`, -17.97421725737138, -4.2796099290585055`}, {
    3.7199907329964867`, 20.44787387237341, 7.031426459210071}}, 0.2], 
   CylinderBox[{{3.7199907329964867`, 20.44787387237341, 
    7.031426459210071}, {-3.7190658714125395`, -20.44785308896703, 
    7.031883694150449}}, 0.2], 
   CylinderBox[{{-3.7190658714125395`, -20.44785308896703, 
    7.031883694150449}, {-14.838198676863655`, 
    17.974186082261806`, -4.277926473141658}}, 0.2], 
   CylinderBox[{{-14.838198676863655`, 
    17.974186082261806`, -4.277926473141658}, {
    13.750530279032109`, -9.407416651776954, 8.400107294716916}}, 0.2], 
   CylinderBox[{{13.750530279032109`, -9.407416651776954, 
    8.400107294716916}, {14.126922964440668`, 
    22.649875778423116`, -18.057184615643678`}}, 0.2], 
   CylinderBox[{{14.126922964440668`, 
    22.649875778423116`, -18.057184615643678`}, {
    0.0008365321068287003, -0.00017146310264191, 13.805471213799853`}}, 0.2], 
   CylinderBox[{{0.0008365321068287003, -0.00017146310264191, 
    13.805471213799853`}, {-14.129094830407466`, -22.64963157339814, \
-18.05589604444807}}, 0.2]},
  AutomaticImageSize->True,
  ImageSize->{336.2289170361309, 384.83915413886035`},
  ViewPoint->{0.9830470515418062, -2.867676633834483, 1.5033460074828713`},
  ViewVertical->{-0.019674677039666914`, -0.18691742468792072`, 
   1.3945005720418893`}]], "Output",
 CellChangeTimes->{{3.524861518297585*^9, 3.5248615275719557`*^9}, 
   3.5249120418611298`*^9}]
}, Open  ]],

Cell[TextData[{
 "This is a lattice representatin of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["8", "2"], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.524861544433045*^9, 3.5248615644406147`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"lattice82knot", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "0", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "3", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "4", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "3", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "5", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", "1"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.524860052176004*^9, 3.524860064396451*^9}, {
  3.5248600984948673`*^9, 3.524860099880454*^9}, {3.524860157514553*^9, 
  3.524860357375143*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"prettyReturn", "[", 
   RowBox[{"lattice82knot", ",", ".2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{
  3.52448124033709*^9, {3.524481277952393*^9, 3.5244813004163303`*^9}, {
   3.524481375202029*^9, 3.5244813997381887`*^9}, {3.5248615172337008`*^9, 
   3.524861527087597*^9}, 3.524861582792058*^9}],

Cell[BoxData[
 Graphics3DBox[{CylinderBox[{{2, 4, 1}, {2, 3, 1}}, 0.2], 
   CylinderBox[{{2, 3, 1}, {2, 2, 1}}, 0.2], 
   CylinderBox[{{2, 2, 1}, {2, 1, 1}}, 0.2], 
   CylinderBox[{{2, 1, 1}, {2, 0, 1}}, 0.2], 
   CylinderBox[{{2, 0, 1}, {2, 0, 2}}, 0.2], 
   CylinderBox[{{2, 0, 2}, {2, 0, 3}}, 0.2], 
   CylinderBox[{{2, 0, 3}, {2, 1, 3}}, 0.2], 
   CylinderBox[{{2, 1, 3}, {2, 2, 3}}, 0.2], 
   CylinderBox[{{2, 2, 3}, {3, 2, 3}}, 0.2], 
   CylinderBox[{{3, 2, 3}, {4, 2, 3}}, 0.2], 
   CylinderBox[{{4, 2, 3}, {4, 3, 3}}, 0.2], 
   CylinderBox[{{4, 3, 3}, {4, 4, 3}}, 0.2], 
   CylinderBox[{{4, 4, 3}, {4, 4, 2}}, 0.2], 
   CylinderBox[{{4, 4, 2}, {3, 4, 2}}, 0.2], 
   CylinderBox[{{3, 4, 2}, {2, 4, 2}}, 0.2], 
   CylinderBox[{{2, 4, 2}, {1, 4, 2}}, 0.2], 
   CylinderBox[{{1, 4, 2}, {0, 4, 2}}, 0.2], 
   CylinderBox[{{0, 4, 2}, {0, 3, 2}}, 0.2], 
   CylinderBox[{{0, 3, 2}, {0, 2, 2}}, 0.2], 
   CylinderBox[{{0, 2, 2}, {1, 2, 2}}, 0.2], 
   CylinderBox[{{1, 2, 2}, {2, 2, 2}}, 0.2], 
   CylinderBox[{{2, 2, 2}, {3, 2, 2}}, 0.2], 
   CylinderBox[{{3, 2, 2}, {3, 2, 1}}, 0.2], 
   CylinderBox[{{3, 2, 1}, {3, 2, 0}}, 0.2], 
   CylinderBox[{{3, 2, 0}, {2, 2, 0}}, 0.2], 
   CylinderBox[{{2, 2, 0}, {1, 2, 0}}, 0.2], 
   CylinderBox[{{1, 2, 0}, {1, 1, 0}}, 0.2], 
   CylinderBox[{{1, 1, 0}, {1, 1, 1}}, 0.2], 
   CylinderBox[{{1, 1, 1}, {1, 1, 2}}, 0.2], 
   CylinderBox[{{1, 1, 2}, {2, 1, 2}}, 0.2], 
   CylinderBox[{{2, 1, 2}, {3, 1, 2}}, 0.2], 
   CylinderBox[{{3, 1, 2}, {3, 1, 3}}, 0.2], 
   CylinderBox[{{3, 1, 3}, {3, 1, 4}}, 0.2], 
   CylinderBox[{{3, 1, 4}, {3, 2, 4}}, 0.2], 
   CylinderBox[{{3, 2, 4}, {3, 3, 4}}, 0.2], 
   CylinderBox[{{3, 3, 4}, {3, 3, 3}}, 0.2], 
   CylinderBox[{{3, 3, 3}, {3, 3, 2}}, 0.2], 
   CylinderBox[{{3, 3, 2}, {3, 3, 1}}, 0.2], 
   CylinderBox[{{3, 3, 1}, {3, 3, 0}}, 0.2], 
   CylinderBox[{{3, 3, 0}, {2, 3, 0}}, 0.2], 
   CylinderBox[{{2, 3, 0}, {1, 3, 0}}, 0.2], 
   CylinderBox[{{1, 3, 0}, {1, 3, 1}}, 0.2], 
   CylinderBox[{{1, 3, 1}, {1, 3, 2}}, 0.2], 
   CylinderBox[{{1, 3, 2}, {1, 3, 3}}, 0.2], 
   CylinderBox[{{1, 3, 3}, {1, 4, 3}}, 0.2], 
   CylinderBox[{{1, 4, 3}, {1, 5, 3}}, 0.2], 
   CylinderBox[{{1, 5, 3}, {2, 5, 3}}, 0.2], 
   CylinderBox[{{2, 5, 3}, {2, 5, 2}}, 0.2], 
   CylinderBox[{{2, 5, 2}, {2, 5, 1}}, 0.2], 
   CylinderBox[{{2, 5, 1}, {2, 4, 1}}, 0.2]}]], "Output",
 CellChangeTimes->{3.5248615842104483`*^9, 3.524912041927565*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Random Polygon Generation", "Subsection",
 CellChangeTimes->{{3.523459962910511*^9, 3.5234599865778646`*^9}, {
  3.523468196110423*^9, 3.5234681974805017`*^9}}],

Cell[TextData[{
 "generateConfinedPolygon[steps_,centerZValue_, confinementRadius_,acc_]\n\
This generates a polygon confined in a sphere of radius confinementRadius.\n\
steps is the length of the polygon\nacc is the accuracy given as a number in \
the form ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", 
    RowBox[{"-", "d"}]], TraditionalForm]]],
 " for d digits of accuracy.\ncenterZValue is the offest of the starting \
point of the polygon from the center of the sphere.\n\nMethod: If there are \
less or equal 20 remaining or ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Tau]", "k"], TraditionalForm]]],
 " >5 then we use the accept/reject method, otherwise we use the \
\[OpenCurlyDoubleQuote]inverse lookup\[CloseCurlyDoubleQuote] for the exact \
cdf."
}], "Text",
 CellChangeTimes->{{3.5248733686872396`*^9, 3.5248735225075912`*^9}, {
  3.524879962779435*^9, 3.5248800134173317`*^9}, {3.524921565462138*^9, 
  3.524921640437304*^9}, {3.5250473970816402`*^9, 3.525047451973184*^9}, {
  3.525047484648184*^9, 3.525047484648278*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"v", "=", 
  RowBox[{"generateConfinedPolygon", "[", 
   RowBox[{"30", ",", "0.7", ",", "1", ",", 
    SuperscriptBox["10", 
     RowBox[{"-", "10"}]]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"PolyinSphere", "[", 
  RowBox[{"v", ",", ".02", ",", "1", ",", "0.7"}], "]"}]}], "Input",
 CellChangeTimes->{{3.5248736177362843`*^9, 3.524873631051262*^9}, {
   3.5248747276809063`*^9, 3.524874732039227*^9}, {3.52487515315795*^9, 
   3.524875189850801*^9}, 3.524912172920169*^9, {3.5249137539468803`*^9, 
   3.524913773513628*^9}, {3.524913919252811*^9, 3.524913942131844*^9}, 
   3.524913993348817*^9, 3.524914105129105*^9, 3.52491414574422*^9, {
   3.5249214999334917`*^9, 3.52492150964489*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.10137778211041926`"}], ",", "0.6309004709680105`", ",", 
     "0.7692120260544`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.1506536548263926`"}], ",", 
     RowBox[{"-", "0.2758624369862624`"}], ",", "1.1879636435156222`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.28861853953429506`", ",", 
     RowBox[{"-", "0.8389301246477109`"}], ",", "0.48796741611640576`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5638717558374174`"}], ",", 
     RowBox[{"-", "0.32981024513081614`"}], ",", "0.3694041647365903`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.016836519033490593`", ",", "0.08245924385462328`", ",", 
     "1.071409697441382`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5630646747556384`"}], ",", 
     RowBox[{"-", "0.6902690399276679`"}], ",", "0.8133290804148132`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.40348711559847694`", ",", 
     RowBox[{"-", "0.5844981448690144`"}], ",", "1.0469744405693542`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.19842287285632026`", ",", "0.053385865037598235`", ",", 
     "0.3046452371467442`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.03514251866833118`", ",", 
     RowBox[{"-", "0.5950486979160183`"}], ",", "1.048198963183671`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.31269880811467526`"}], ",", 
     RowBox[{"-", "0.05153055638489405`"}], ",", "0.28426543125278986`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.13812863621443966`"}], ",", "0.41092014772549984`", ",", 
     "1.1535551420802694`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7272100370108936`", ",", 
     RowBox[{"-", "0.08770636345911126`"}], ",", "1.102952938921878`"}], "}"}]
    , ",", 
   RowBox[{"{", 
    RowBox[{"0.0647604791036887`", ",", 
     RowBox[{"-", "0.80821656575198`"}], ",", "0.8979513983900125`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.048811389310265026`", ",", 
     RowBox[{"-", "0.4355124699890023`"}], ",", 
     RowBox[{"-", "0.029861774364213278`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.1675182942190723`", ",", "0.5120516643756776`", ",", 
     "0.2668382121418296`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.4834976696023841`"}], ",", "0.7762191448951857`", ",", 
     "0.9784517006913338`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.9737796922031681`"}], ",", 
     RowBox[{"-", "0.04078067621353443`"}], ",", "0.6749145026038443`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3095195609402177`"}], ",", 
     RowBox[{"-", "0.6842930846434169`"}], ",", "0.2945853580312785`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.6359606955182603`"}], ",", "0.2562044557851838`", ",", 
     "0.20024256761700118`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.354196378916103`", ",", "0.2664871634354361`", ",", 
     "0.3398249227732384`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.6139704658016224`"}], ",", "0.24726401758217997`", ",", 
     "0.5893914098119206`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.07069129105018393`", ",", "0.026252986861579383`", ",", 
     RowBox[{"-", "0.10515333533011492`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.7909702807932741`", ",", "0.3512352966293461`", ",", 
     "0.5076962997947508`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6577401030510684`", ",", 
     RowBox[{"-", "0.355299007060586`"}], ",", "1.2027207579601904`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "0.16395754896986364`", ",", "0.4288779466755106`", ",", 
     "0.8268946086381689`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7043592883817054`"}], ",", "0.2447337650331457`", ",", 
     "1.287455994708509`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.084267070540013`"}], ",", 
     RowBox[{"-", "0.34055916000340103`"}], ",", "0.76504061086694`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0025746965644530967`", ",", "0.49458203377862575`", ",", 
     "1.3081775125174397`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.4819607943466756`"}], ",", 
     RowBox[{"-", "0.2451229815946024`"}], ",", "0.8412065837871775`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.524921454114057*^9, 3.52492151845393*^9, 
  3.5250475088924437`*^9, 3.52504760409825*^9}],

Cell[BoxData[
 Graphics3DBox[{{
    CylinderBox[{{0, 0, 0}, {-0.10137778211041926`, 0.6309004709680105, 
      0.7692120260544}}, 0.02], 
    CylinderBox[{{-0.10137778211041926`, 0.6309004709680105, 
     0.7692120260544}, {-0.1506536548263926, -0.2758624369862624, 
     1.1879636435156222`}}, 0.02], 
    CylinderBox[{{-0.1506536548263926, -0.2758624369862624, 
     1.1879636435156222`}, {0.28861853953429506`, -0.8389301246477109, 
     0.48796741611640576`}}, 0.02], 
    CylinderBox[{{0.28861853953429506`, -0.8389301246477109, 
     0.48796741611640576`}, {-0.5638717558374174, -0.32981024513081614`, 
     0.3694041647365903}}, 0.02], 
    CylinderBox[{{-0.5638717558374174, -0.32981024513081614`, 
     0.3694041647365903}, {0.016836519033490593`, 0.08245924385462328, 
     1.071409697441382}}, 0.02], 
    CylinderBox[{{0.016836519033490593`, 0.08245924385462328, 
     1.071409697441382}, {-0.5630646747556384, -0.6902690399276679, 
     0.8133290804148132}}, 0.02], 
    CylinderBox[{{-0.5630646747556384, -0.6902690399276679, 
     0.8133290804148132}, {0.40348711559847694`, -0.5844981448690144, 
     1.0469744405693542`}}, 0.02], 
    CylinderBox[{{0.40348711559847694`, -0.5844981448690144, 
     1.0469744405693542`}, {0.19842287285632026`, 0.053385865037598235`, 
     0.3046452371467442}}, 0.02], 
    CylinderBox[{{0.19842287285632026`, 0.053385865037598235`, 
     0.3046452371467442}, {0.03514251866833118, -0.5950486979160183, 
     1.048198963183671}}, 0.02], 
    CylinderBox[{{0.03514251866833118, -0.5950486979160183, 
     1.048198963183671}, {-0.31269880811467526`, -0.05153055638489405, 
     0.28426543125278986`}}, 0.02], 
    CylinderBox[{{-0.31269880811467526`, -0.05153055638489405, 
     0.28426543125278986`}, {-0.13812863621443966`, 0.41092014772549984`, 
     1.1535551420802694`}}, 0.02], 
    CylinderBox[{{-0.13812863621443966`, 0.41092014772549984`, 
     1.1535551420802694`}, {0.7272100370108936, -0.08770636345911126, 
     1.102952938921878}}, 0.02], 
    CylinderBox[{{0.7272100370108936, -0.08770636345911126, 
     1.102952938921878}, {0.0647604791036887, -0.80821656575198, 
     0.8979513983900125}}, 0.02], 
    CylinderBox[{{0.0647604791036887, -0.80821656575198, 
     0.8979513983900125}, {
     0.048811389310265026`, -0.4355124699890023, -0.029861774364213278`}}, 
     0.02], CylinderBox[{{
     0.048811389310265026`, -0.4355124699890023, -0.029861774364213278`}, {
     0.1675182942190723, 0.5120516643756776, 0.2668382121418296}}, 0.02], 
    CylinderBox[{{0.1675182942190723, 0.5120516643756776, 
     0.2668382121418296}, {-0.4834976696023841, 0.7762191448951857, 
     0.9784517006913338}}, 0.02], 
    CylinderBox[{{-0.4834976696023841, 0.7762191448951857, 
     0.9784517006913338}, {-0.9737796922031681, -0.04078067621353443, 
     0.6749145026038443}}, 0.02], 
    CylinderBox[{{-0.9737796922031681, -0.04078067621353443, 
     0.6749145026038443}, {-0.3095195609402177, -0.6842930846434169, 
     0.2945853580312785}}, 0.02], 
    CylinderBox[{{-0.3095195609402177, -0.6842930846434169, 
     0.2945853580312785}, {-0.6359606955182603, 0.2562044557851838, 
     0.20024256761700118`}}, 0.02], 
    CylinderBox[{{-0.6359606955182603, 0.2562044557851838, 
     0.20024256761700118`}, {0.354196378916103, 0.2664871634354361, 
     0.3398249227732384}}, 0.02], 
    CylinderBox[{{0.354196378916103, 0.2664871634354361, 
     0.3398249227732384}, {-0.6139704658016224, 0.24726401758217997`, 
     0.5893914098119206}}, 0.02], 
    CylinderBox[{{-0.6139704658016224, 0.24726401758217997`, 
     0.5893914098119206}, {0.07069129105018393, 
     0.026252986861579383`, -0.10515333533011492`}}, 0.02], 
    CylinderBox[{{0.07069129105018393, 
     0.026252986861579383`, -0.10515333533011492`}, {0.7909702807932741, 
     0.3512352966293461, 0.5076962997947508}}, 0.02], 
    CylinderBox[{{0.7909702807932741, 0.3512352966293461, 
     0.5076962997947508}, {0.6577401030510684, -0.355299007060586, 
     1.2027207579601904`}}, 0.02], 
    CylinderBox[{{0.6577401030510684, -0.355299007060586, 
     1.2027207579601904`}, {0.16395754896986364`, 0.4288779466755106, 
     0.8268946086381689}}, 0.02], 
    CylinderBox[{{0.16395754896986364`, 0.4288779466755106, 
     0.8268946086381689}, {-0.7043592883817054, 0.2447337650331457, 
     1.287455994708509}}, 0.02], 
    CylinderBox[{{-0.7043592883817054, 0.2447337650331457, 
     1.287455994708509}, {-0.084267070540013, -0.34055916000340103`, 
     0.76504061086694}}, 0.02], 
    CylinderBox[{{-0.084267070540013, -0.34055916000340103`, 
     0.76504061086694}, {0.0025746965644530967`, 0.49458203377862575`, 
     1.3081775125174397`}}, 0.02], 
    CylinderBox[{{0.0025746965644530967`, 0.49458203377862575`, 
     1.3081775125174397`}, {-0.4819607943466756, -0.2451229815946024, 
     0.8412065837871775}}, 0.02], 
    CylinderBox[{{-0.4819607943466756, -0.2451229815946024, 
      0.8412065837871775}, {0, 0, 0}}, 0.02]}, {
    {PointSize[0.02], Point3DBox[{{0, 0, 0}}]}, 
    {Opacity[0.3], SphereBox[{0, 0, 0.7}, 1]}}}]], "Output",
 CellChangeTimes->{3.524921454114057*^9, 3.52492151845393*^9, 
  3.5250475088924437`*^9, 3.52504760683288*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJycnXecHNWV7/v1jCSiwDbeXef0NrxNFjjbBNtrr9c5Z2MDAiEBEkgCJZAI
NjkYRJSEcilMzrFz7jkdJ3WYnhwlYZtge3ffX+/9zrm3qntEjW0tfE7dqttV
3T33fH/nnHuru/X16+9ce9P66+9ct/r6939p0/V3rF23evP7//32Teiq+l8O
x/9aC3v4/Q7e/38Oh7mR/9bxxuF4jRvn/1uzZs0W1fFbbqq4w1ElJ2JPju5S
j79iXVBt7emHTlsdy6VDnsV8Dsed6qR56/nPW/qkWeuZLpSOauskfeJmdd6U
9WQXS8eyReeZT7pJnTxhPemlf/7kMevkt571NvnIadN3u7pwxHpLl9mcVGXT
t0FdWLBe8W/+wlfUF+asC9/5F77ienXhoPVW331uF/Zbr/g+m5OqbfpuUxem
rVf8gM1Jy2z6blUXJq1X/N/ndiFZF/6dzUlnc8pHt6gLY9Zb/YdzuzBiveI/
2Zy0wqZPSzFkXfgvNiedrRY+Wqsu9Ftv9cPndqHXesUrbE4636bvZnWhy3rF
j9qcdIFN3xp1YY/1ip84twu7rAs/ZXPShTZ9N6kL2623+plzu7DVesWrbU66
yKbvRnVhs3XhZ21Outimb7W6sMF6q//2F76ivrDOesV//wtf8QZ14UnrFf/j
3C48br3iV21OWmnTd7260LAu/LrNSZfY9F2nLjxsvdVvntuFB61X/I7NSZfa
9P1CXbjfuvB7Nie9xabv5+rCvdZb/cG5XfiS9Yo/tjnJLhFdqy583nrFn57b
hc9ar/hzm5PeZtP3M3XhM9aF19mcZJf61DtzPGW91RvO7cInrFe8yeakt9v0
/URd+Kj1ijef24UPW694i81Jf2XTp9zmeNC6cP1feOGP1IUPWG/19nO78D7r
FTfZnPTXNn0/VBfusi6889wuvNt6q1tsTrIrYZQYHNutV9xuc9I7bPq+ry7c
Yr3i3ed24Z3WK+6yOcmuaFKCV7WgXHifzUnvsun7rrrwduutPnBuF663XvFB
m5PsyjQV1FS5Ixc+fG4XrrXe6qM2J73Hpu/b6sI11is+YXPSe236vqUuXG29
4lPnduH11is+Y3PS+2z6VKpQAV0ufPbcLvyZ9VZf+Asv/Ia68CfWK+6xOen9
Nn0qHSo9y4X7zu3C71tvdb/NSXbl9tfUhd+1XvGQzUkftOlTKV95RR45cm4X
fsN6xWM2J33Ipu8r6sKvWReeOLcLv2y91Rqbk+ymFF9WF37JesV6m5P+1qZP
FVKOL1oXNp7bhZ+33mqzzUl2k5gvqQs/a71i27ldeJX1ih02J/29TZ+qMh2f
sV6x2+Yku2nTF9WFn7Iu7D23Cz9uvVW3zUn/x6bvC+rCj1qv6P8LL1QluOMK
68LguV34Yeuthm1O+kebvs+rC//FesXYuV34j9Yr9tmcZDcZ/Zy68B+sV0za
nPTPNn1qYqOgkgvT53bhh6y3mrU5yW76e4268APWKw6e24Xvsy4ctjnpX236
rv5LLrSbcF9VcWHFQ2gdQ/+Tp3jT4pfdn77Kpu/KymexX+16Tl1m1NYnjTpY
fX0KRw16mzQa6sQcHzu3l7RL4nbrSQ/JdoVxsilp1DSljDpYfXPKaIA1NqeN
pua0w4ltxmk0N2ccy4zmpozRUmmNGUe10SrbtsaM0dZgWZXRXs+XtNeljY7a
lNFRkzLaYK01SVvdXm7T95ml/xy7VS5VJVYbtc1J+TPkT2lJ4y9o4b+gNYNR
bWnJGK0tWTb8abzFO8dxe3PWaGuW1ml0NHN3Jw47TGtCd2dTFn9QZ2PW6IJV
tHimzga+pKseffUZ05xGV13GsdzoqsVhTRqWMjpPYixOYCxOJO1ytN1K0KeX
Hga7pbcdsr3QqGvBELRiCGCNbfBmW8ZohrXAWmFtbRgGGFr8Ae1t/Ie39VcZ
nW39/Ge29htdFdbd2o/h627BCd3NvNvT3M97cuQ0upv6q42eRnmgoR+WNXrq
s3yE7XKjpw7HdRmjp1ZbDRtc03OCWe85nrTevl2xfI6jstymTy2SX4wRgaTa
UmJNGBUZkXaMiBhGA9YO67Ba/ps62/vhzHb8jd08RD0YovOM3rZ+3jN6W5W5
uG1B2yJtldErA+XCIGGPWwxUb1M/QHE1og/mUuY0XA28qZfzAZEL4+WuY7+4
auEXVw0rzHUyY7hOpGEpo/d4ym4e8xGbvk8tPVB2y6Ebeevk8UFkaORRasco
YXRaOjBCYhilDmGmg6Hv6Og3OrV1deDP6OZNTwf/nb3ow57R2y6Gv0SG04VR
c8PQ4mmwhz6P7vOovlaG0IMRdWM0PS26lSF0N+OJPLJpwih7ePzcQG+54QZ6
7nqcZ1odGwbQw6PoqWEUPUDPg5F0n2DDaB5PGa5jKbsps91ofnLp0bRb6lUr
EBfJQDa2YzA7MJgdbxpMHkoMZNYcTCePJN5sd6caPxlDmEu1Tt7B8Lp1l1sZ
xqJDhg2j7TUNQ+qTIcUeLsG+2Wd4W/FMPhG2F6PrY5MR5u0yw9ssx4avSZvI
28vD7W2AFLyCqxdj7K1lY7n7ahgJL8bXe0KZ5zhk7j7GMncdIWtg7FbFznG8
7VbI1dL6eUZ9Sxzg8ninMN4VY97JBhjaOzmYd3QigGOMu7RhvPHn93TiT+zl
jYs37k4e2U6BFAPtVcYj2oFR8Ikn/Oj0t1uGDoE6gFH2s7Xy+X4Z6gCG2c/W
LBdKjAhgeP1sMsR+HmJ/A+/6QLFfGT9BnVyC0fbXsGXZ0H0SG98JTre+42nD
eywl5jmaMNyH47ZLnnY3DtQ9AdtFB7uFerXevgz5JQ68CUOc0sZVAwYaj7Vh
fNu7gLW2zi7+M7q6OEDwppc3ri7+S91d0KoynOLhB7xdPL7sAr9sOvqXGwHG
PMihJNjGCuERDlYaQkaglc/hCBxUowuIeYSDEnsDPLoBBjhQz3t1zHoAYxqo
MS1rBE5ygAuc4IgRAMX+Y2xpw2+kDN9RjO9hslv0PsdhtbupcL0muLGtDwQn
ZEhbYK2daQxnBsPJxsm6iwXXiVHFeLI5ZFA56uLYVTYnjy3Di0OvMtZ4Fw+f
H8fYk5YtoFqMjfAehCaCHWI4OcRjH2rvX2aEOAuGOHyEeJhDHIyDwnNIjbMR
RGYL8UgHBekgInOwXgyvHZTIEUTkCLHVcl+oRvow/sGTWTY+T8Y/eDxjBI6x
pY0Axj+A8fcdSdjdH7ErlD++9PjbPYVaib8QxQEjncS4p8TautIy9h1iWT3w
WaO7m99pdzf/8T3dCM8wlzIMfLcMPA69yljS/IBfzg90qxHXVm0ExVEhHGLP
CEk0CjH7Ydlw5I908CnY5T1ucUqE9RARPYShAeyVW+ghwo4Kt/B1EUghrAzX
hUUeYbiL3RYST4nTQg0sijAcFjINjgrXyem1/Gzw1oVG6CQeOJEtGzwVOsaW
NoLwVPBIyvAfSRreQ2R7d/HjS7rQ1l12N7Z+quXS3E5wUxISScFNFa7qzhid
3ZBLVzfLBX4SL/X0SDHWI9VID7KnMo480ufFsU8Zx90eQA5nwUHiwhCegZ0U
EneFu/BohN0XEdFEIZpohxgGMcpOi7Joom28x7Ep2sLeZ19EYRFl8CAX0WEe
/3ADzgpzeMKYVww5fIIhD59gyyo7zviFj3G0DRtpI3RUDXvgcNLwYdjtipJz
HHa7QKdufFyEyKSHvYuHXQ29GnIZdh51o7uHTcbcGvJeDLcyHvJeDva9Ig50
YrTZOP7yuAf5slAPj1iYxx0WVoZRF3dg7I0oLCKBLSpOiem+mLgkxvKJiXLi
8Az2uHVIHzZSlMahlhgsLpk7xs6KsbNiIhy4zIgph/FrNLEr2VMREQ38ZUTY
JLxF2HERdlykljdw3EVGBI6LnGDLGpHjsGNsGSNiZIzw0bQRhtNCbIcSRuAg
2c1h7G7af3Rpv9ndXP2+lkur+C2hfbbYb109kAucxhMzuK4HLukVP7nYT27x
E1zGHhOvOdlrXLbgOKCMY7f0hXCMPW4ZU/FiBP7FnrSwaiPKETHG8oqxlOIs
pXin6aw+Zbi8z3JgH8qseLv0SdRj3/Up36kWUa+vlZ+mhZ+6md3IcwVxWZTF
FWUfRSWgRZH7scctu7aW32MUeSgKj0VPiKEbOjvPiMJpUXbaUdgR5bTwYeW0
4EGyW5X4E06zm+ra1cXqXtH54rS2TrKc1tGtndbDTssY3b0cC3p64b7e3kqZ
eUyZcWTDsU8ZRzZ2aYA3ZX+Fy/6SvgiOo8p4fFiTsR7lMXhDFNgHpcFt3Koj
bImPO8XYT50o3ojVRu3sMfYSaW9VtE52m+MCo69FHKhaWNxsm5UM48hXMRZh
TPQHlxoxZSxq9m1MfBuDb7HHLT/AcTRWw5uTnL9i8G4MWhSDa2PQYhSujcK1
EXbtoaQRPkhG6ECf7UfAPmnT95GlfWt3Q/+bOpC2dvRp3ybh0xSEyJau9C17
Fo5l6xcxIuRr75paLHuVy16OpZV6dLJbq9irTnZqNXsUQyFPFMeJ8Z6y9Umc
7hPvEsIt9tijeCLerjASXXIsloCXqdNq4d2EKBWeNhLt4ldIKiHrSgSnJmDc
Uou0fGYLPybOblYWVy1eD67m94d6MtaovBxnq+fnjHOQjbNX4+zVOLx6sRGH
V+PHYfAoWwyCjcGrMXiVPRuFYCPwbOSAmo7ySqzdp5OuWNqTdh+U+Jr2ZHNb
FLNL9mSi7Mke7cneJTxZpTzpEuOppUuyIY79yjgbulimvAm5pNTDIxE2rU/d
Ko9Wi0dj7FVl1UafvA4p53KrXOs0ErLp4mFOsjthFS3OSrJ4kyzeZDsGPCme
hD95T7wp1sJvMiH+TLRYHi57Fx4l9mqTNlFuXKa5ffBoX70YH7FX+2rlIsTh
vpPa4Ne+4xJMJBjH4dc4FBvXvo3Br7FDKSN6MMGOOUeX2n0SRd2/XAZ39sGd
BFcm4UZxJ09je3lxt3uRS/sl5rrYSW5xIbsUzmRXcoqULRxpBN1iXN+7pbTB
seVQFycofo6YnM8e7FPGf7xyo+4j8whDLx5NwrfYM5IiXbVNdSuPpmR6mOIk
m+JFjZTIFI7lPTlyGikphlLauSlZOuLthUYKDk1WWotqtfPLrcwqSKaDVHY2
WzV7GiGkHi9OEqAJAZrgZDopseWkXARH03F2dpYNf7LBIx2Hj+PwcfxQir0E
P5MR2U+ftnHc5Uv72e5jPOpW7HIE4RgmDeznhMi2C77u7k072cnAoAeuZjf3
wEe9LnGzQ/n5PMMD/3lhPpgfFqho4ecqcXOVuDmijHOpmxmP4RiOtiwuTu9z
8VBoFxsJ1VbzDjzG7k5KMZWCq9m9bGnWcYo3aXF0mvu6lMHfy4x0J54hzTpO
SxKGr4208nK55bIpJSpm52qn480muZRKyEZcm4Bb2b2JRmnhSi6uSPQMB7N/
xcdO9jFGKAFPJ+DpxElt7GXtaWIvEyYxK4w+qLnvSFo8HD+YhCWM6AEywi/H
HXYfPl21tKvtPj/1Re1qcbOWtHKzuLqKncw3LFxZ08VibvgILnayj3mZrcK7
gUolO9nDTnaveLeKnYu8xJs+PiRWdUIczC5NKnOISzHs7NeUyDjd06/8183P
zNvl4scMm/ar3q/mHWzYuRlZjYR3jYz2bYaXatIyp0lrf6bFu+zjFUaqRQvZ
tGar5WjOJRbxtDQh0TqBOJ2oF+NH6/iPqZUH4Nikciw/cIJruATkC58qO5oR
jxKqKkKM7oNXY/BqdH+fXRGlnWp3i8Puk2bqFvwKo70jrp1KcGpSnNojlpbC
OIPC2MUL1L3wmUub5dZqy63atU7xazX7tVK4dp7FKHFfQs6Hf41k2Zz0zyvf
66iif1n5XvawkZaCKy1uz7CbYRlxOpzpuMzIdpfdbO5Ly8dn7ctj3KL0ynaq
FgwY2Q5FQJYXHjIS0jUMwoJTtssqiRAS0pLDU7I8kWrWNCgTwbOnIfekMg4K
DQxmEkgk6yoMUk9yQQYkUBElofIkYGAgEscUCAkjbcFAkHkfYBAg9sXtZkwf
XhoIu08QflYn7s6uPgUDAno3gAAMAkKaQeD7wcDBBIFD+ZsV7j9b4bZBXGhg
GNgcZSw4FKITWHDLyuAHkm6Ohym3IiTl6mdA6PZVa+gEDJjQv658r5MJge8s
TLIakxUMAAa9X+NxVus0+nnJt79TzgQO/RoNaYFFf4dggTeTlWCRbVf9WRU0
nAxJJS6tOnRwXGlRmGirUlwkOfgnOfinGgQc0JACBalaMUSaGi7LUwgPyRNZ
JkEISCIsJFC+JY6mjcRhJiFp0IGEEWcSXo4bkT0R2/XcP4GCXZ/6MEe10dEZ
Exy6gEN3T8IpLCxDyZZmFMRcbjZe93CLjs/K6U4GAd1BD+bH2sIejvYemYPi
MKaMCZA+JqJPmUNCRDUTUMUEOBkAOJlZEP8/Ct93f3wN5X+2hv3PnjeysAxn
hqyU9P29CoN+ZSvY53iVAe39fllUVlvp67JMgHCy7x3nCwn9JgllIqw2o+iQ
EoGDSKYcOUwkqiRUVCkSmsU4cPBCS4pxSDUKCUgXQoMioopxcKxkHoSGFGiA
CQ2p4xkhIgkakogLQgSSBIGG+P64EdsTtYPhX5eGwa4iUHOC84zOzjhA6AMI
BA4SkiR6YS5XGoY0ARR4du3OCgSmecWNwIHvnHBggLuD2jQNVUvRgHjAG/Ko
NCFRoJoZqBIGkLrd/XQTGDgAi31hjZMhcCyj6d27BQO2ftUqEtjxmgW0yLcD
AsMgHM/OH5TCAXvLjAEu+Ac65Tq4fsB0vyZCBYJlZyNgZCUOZHhRJtNaWT+k
zCwhHuc6EmVg2rRGqwXdEhDScH8aASFdK4ZuudeTOmm5np/uOFd/KaSF5NGU
QoADAmp82t9nxPfGbIPBvyztf7sl0U9q/3d0RBEM4kY3gkGPMJDU/hcGlP85
DGTgd2GA188kMUhAgGP92gLiYBDAhYJigBFgczIFnBtwGPeKOQQDTgvoSyjj
tMAnJ+WBFDo5NaQle6SZj4zECGZjJ6zl8jU0+L01NLXjNppq7KfpE26aeXCX
k5mAry0wBpVB74MKjB6BQo6W89ZpDMrsHnjwnhyhr3MxLAqUcvioMvpVXWEm
kXZJIjo0ZFolTDitGAHvy4cJGImMaUAkIyt1GdSRl1aywWgIFOmTWSN9ImOk
ERfSx9jSgAP/A4zk4aSRYDAQG/pejtvddP0TXNh9lODjVlyIGl3gQjFBYCKJ
CX0FFyAClHo0F14xxAWPxQSv03isLOFVFvZyluBN1CtAeBcBIX2E44SySiCW
CRBphkK3aYGRmVhpZPHi2JO2X8eP52GBK9fQ2I1raPqRzYRoSzPgZOZIM01v
XsuEAIZeLsywy3tiQxqZIY3JULdue/Q+L/kOCUlmFx+dz1tF0gpjqEySmJDV
Ka1DQVVVhkpWGyT89LdbdUhbv4mSCjrVEnTSqjQ1MsxTRniyOGp8M08Z8JSp
VRxlarNGpgZ2MlPBU9oQmo4yTwkjeYiMBFgiVB3RlyJ2H0NRn6a1rTXtvhWg
kLxYeOruVjz1Is+4Knhyu9M6wGQAUUZg8rl5Bd/HzvcLRZJhvBZJTkaJb6Hg
MKotxt1xYQgkCUckRwl+IMmblJd1yM+akRhjIpOVGANwHBfQJmBzEpb+2hrG
hHLP30tN+/opX99Psw0pmt13FJwMAB3XAN7BkGvAGOq1bBmgGMBzDfcM8B63
6shpDHfzRh13D6gzugcc8gA/EffBhroGFEpDAovwVQ5Ksp7BKAlWnYJVtQ5T
miaJS/1cwHJIWlYOSeXQxFmWs1aG65Qsz22zjXIq6hSgw6ahEZj4szXgBoxn
QE7mOKg5hgSlqUmBmiSiUALVSd/eqO2HFP8ENnbfCblCY9PVFTV6gE0vQpBL
LKmQ0diYyPjEgI2HsfGLb5mYgFeM85KQwPRElDkkBkkI4jVidPb5AIwy55uY
kcsBjZGFZSS8ZZkjZuZibAeMAfcArQE3j6+6mXo+cTMVf3YzTT9whzGI/ofu
H6DewwM03jhAs3Vxmnv2WXatADTsGgQ4g8Zwr7RVvCPIDBo51e1QfecZOfRZ
/bI/gL4Bs606iy4+qha6qiro4rc+xOskg1wNmVmuSuJQdTmnqQBkToI4nWWV
4SjL7GSl4gE8zE7ZGoQcPFzHA5NF1MnWsGUk8gg/J9JGhvnhIof5OUyKoQNx
I7EvZsvPPy3Nj92nh1fpNNbdFTN6e+KaHbaEZicFdtJVDA8vd3iygCarShn2
eYA3ZWTCbD65o+2Tm6KgJAaLK3MyOpy5cJhQxisC0pfCMQhi48UGft4Mb7Ly
5AxTv2eAjXMAtiuMAY+wJNysAUuHYPEv3EwfvuT9DietwnY5rftmip5/fJAi
JwZptmmQ5k56ae7h+5YzTHhazQ236oi3LsUNH53PWyfjpE9msPRRz6AEKaFI
sGFamCMOOENdVjCSAsl5VuQZUNGnSiJPlYJIU+OULQBD+urHREm3+Ks5/PTz
NElCTj9CUD9CUJbX1ICP40JsMwJQ9qSG53hKAXQ0YaQ1PKmDgOdle3j+cWl4
7L6spaZSK42es+Bxa3g8gMeL4GMFHk+mTNAieqpVuvIJPcyOk9FxMjscc3wq
5vRZMYc3Sd6AGhSNPsnveIaMd8CyrFdQ8bJLBhQ6aAfZ4BLPIGZKTM19q9ZS
6+VrmRqa2fo4yJnZ9rhjBV2O41tuGqSjzw9SphbkNA/SvNFKc3fdyt53DzEp
QyAk7xriPWkr93O91jHeB/bwHnNnnZPvlcdA2nLBK6+4q2yXmaQNYsI23D2o
gtaiFKjawS6rtUVOW5XKeP28yNvPJXe/3GsT0prEFF2yWNcva/NMWX9d1uiv
5WlXfw3nN0YsC8SyGrEMEMscIYUZEEsCMbtvaPwJxOy+1qfS4XKV2zRibjZX
wvC4krz2xp8694EyJszvMY0Jy5ZTWhXDxQtxCi+my2GHVx9DBcb4jjQOk9o4
OKXFBlAQ+DhPZH2CmACGIfJyTBjwCl5Cl2bMGPIM0s1g7EUYt2tX7ZXo9AEn
EPsAQtTll36A7rpriFr2D1GhcYjmm/ppYf9xJzMGNtRmeDl4Gca7wrFFWsGk
yD1ULYAtL3eZpygIq4W08xbzZebIcqswqxbMhribWzOwVSnCOoUwR7VZnJeD
mUPV5VXMljGgjBcU+LOEA5wIB/g2n9A1gAQ4IIQN8N29gfosUuBAXcYYQAQD
YEb/SaB1IiV4ZY8lDVn4O0pGBnilDwGv/TEj9lLE9jtN/2dpxOy+x6lOX2F0
doSM3u6Y4arAzAPMvO6kQ3FWrTizGMtwBOObA1w9cc0d9EkQczJmZ6fAWEUK
XAqxFJgCYlUasYxvEJiJ8dj6BDEc9zNmXkEM28uwHQJsQ0BN2bBniO5ctQ64
rQNu+2APMHDkvm+Ypo4M02xbH11x6QeNvGeYHn5gmNzom2wepoUGooXnX6ji
B1YaBfcw3n7BNcx7ylzDTumuquxWRwhOFbyZwc1qcz0qIJrpVJFWpQKaIo2r
re5BYc0piK1AFEPIZuA6VAnPoA20S8vocP5kxlYwY4yYsmYVwdAaA01yoiwt
gjRYlmFj1JzMGt51f00atKWMfqEtaWRN0o70CWkpkEb7Inag/cPSoP2dTd/f
a9C6O8MWaO7ePsMD0LyLQFuxCLQAm5ctK8nSeRZjVZWM8dKhsFVRpFdwNsAp
E5u0AJYGTBkLMGyrLcpAFJt3SChDDBrycgBReA0LWjevukXhdVUI7TP05Pfi
HNM+6DifrrhE6BLCbv1ail54Ikexkzmab8nRQm2ATj36S8bGk8NTFj053jOK
bmWFytaTc/IB3CenlR9S3VWV3XykTi3zyq3ikyOk6spXxESu44bMAk+DWIaR
J5tdgxL3tPE8QEKhDnsVJA5K/T8IEgdbhEAeOa7bBrluG+TFzcEGjnOD9Rkr
1g1U0NfP9B1LgEAyskf7jAzTdyCKai1s+6VTjZ/d7U27r2Sr2HcBqrWI4arE
z2Xhx/ABPbY0zw55RZvJC4plxULCWJjrLrNO49sW5fzpUNGtWlM3gHZgEXmc
FStCGyNnhTj4AuxxEQ36yhTCh0NeBJ9hLweanACo4bsyRHf8IkfrLt9Pz/00
SbFHczQL0ubaggqwFXTbjTk69nyO+utydAoAnjrWSQtbbzeKXg2QICOwKXPn
VPdyY0R3jeiH9bGTd5z6HL500XkKUAXjCgWjqwykRSGY5NJv2Cm5ebmqFytD
JdphiZQSFVVoHKxMw50DsvqqeFRRclB4HOQKb1A+QwceJRqCSbYyknxRY5aR
hHFdBywxhRioSwPKlDEAKAc0lP2Ast+E8rCCMrkElH+/NJR2X+L9kI6JCsqo
QOkBlF6G0m3GRCCJktMPMP2etBUPmcqQEJk1pw5q4lmloayYeTrKU08FJEym
ngMy9RyUUJgWCDMSARWYQ2xngzmMvWFpYXCKj1Mg8ASdOTacn8P2rzSjL4PR
sDB6/y7m9Djtuz5LyafAKICcb/NK9Ct48iAozy1tuTNPrS/naaQxT6ebh+j0
wRrAmjdGvHLOCuCWx0vyIfbkyCnb6so+3meC8xI7McYmnG8KtC5+y2CyiqEU
Jh2yy3uMocx2hyRbD1nZukoC5HIVIDsHhUhNJdOIcemQxTqk66E2MbXcMdTK
t7KHgONQc4Vh6jEEHIca2DImjYOgcbA2pYlMgkiQeIwW0Zg+CBr3h2x/E+BP
0Gj3wwxqhe0i0BgWGt1CY1zTSOAwAUtqEjWN3gzPMDKyApIRGMM+viNsP4sd
EAKJI2FC4EsCtJQyvqcl8Jl5OSPwZX089v06III9zjhMnoUfKnZfDns5aWFV
QuCFIPBWGBMYAYF5un9nnna/mKdbLm+kIzcPUXZ3nuYaOC93SSjMI7oWFWX0
8P158h7J00xLgU43punMi3uBVAFEFYySt+DkA1xUKnfhfZWkj08rKVNngJOS
BrjkWdTyJXl+LmCqES6HYSv/VzGsCAFAVbCVVgPKoOZ6Nawyn5aUPqyJ5RnM
oEROM34Odcoxtwxoh6z6taswOSRTliGesgzxxxXApuNS0JnVdGaMIWTvwbqM
heagiebxBIyMAcbzaNzIajRTB0J2ZP7d0mTa/fLH+2R7PsgMgcwIEnfM8Goy
fZpMvyJT1nVTMitJl+OkL+MULqsrp8BsEib5s5LAsk+bQnTQSPiRdJJ+HrSU
f1DHySGJkUPCJWM5LDRyOpGIKBzyiPrgumHe5HB8CYDMG3lvfkkkD9cUaMPH
O6hm/TANv1Cg+UZg2dwKBAoS1wqOi2j9V1L04hMF6jsJJFsLdKYuTGcef1iz
VjRKvqJq+dhXUDiu4F0TR9kfLbd4ag2p72xkqy2MOZiWTEBBt1vFV46qqgxd
VhlLTUBl0YdrCwWmCejwWXxiyiami02OqMwn8jnbcMeAcDnMGX2Yl5mH5Xvu
w4ifw82mZY3hJl7PH2rMoL5UlKaNobqUReigDp6K0D5F6JE4aswIE2obPP92
aUTtfipG3T1fbvR0KkQ9FqJ9jCiodCf4u8hMKWJngM2bVrGzmgE1YyfozDrL
xeVyncMr8Rw0iNFMCJpJRlOM0Uz7OUtn/ENGVmwYnA5zBh+WeY1CFMYVDwdK
k1OETB8CUd6Xd7wHgN5WAWkBmbsASAsMKeJjgTZf6aKmzXkq7gWoLZg519cY
Ixo+aWEjCkjacGOBjr9QpMGGIp1pg53soTM7Nhmj+jzd4k1jT0gs9zl136hX
9fHRsjedV0Df4sBbLglWSFUxoquLoruidUvalxkTY5svm65Lc1IIDPcM61p0
SG7BDSEvC7Jd6EMYHQauVtsxqHBldNthbXLbzuS2usxtkzCL7jchOwRkh2qS
QDZhDJ4gY3ARsjELWbsfDzpHZN9tRlU7ZBFZ/W42iaxyl54//hVEVJX5kACb
AbAZh9NK+VkzrMrq4gBPxjm99PmFWAFWIqqTaa1iWBFM/TzMTGq/Ms7v/hwH
1Bzn9xyn9zzH0bzjLQworMBGa1atp5sx8bn5qijdcR0wvbdAz7xYpEO1RZp5
ahcjSDs+H6CO7UUaO1BEsTlIcycOMC5A6HwTM9p2V5Ha8PhoS5FeacvTK4cb
8NiIMeofEQRHTA7HmDm/GD/gLy56wGc9oHDGiRX9yyu4NSOt06okmNYCCkOT
1LOJLbjZcoIqV6e9OTOmSnU6zDGRIe2usC4BVnI+4NRgsgOGJedrQBlPx6K4
2pLVMTUjeOIxTJAuMoYZ0PqUhjQJSAHoSRJIB47FUZTCGNDDESOxP2jHp1ri
tv21TbsIrFaWVio+MUPy9kaFT5+Lra+ST4mnQTZvSjHKGR+AyqJ3RtCEOZzW
3GjAjKk8N5JAqgm1KB2SvD/ElMIYy7NRZVcAVYRSv6CadypUh/2cKHP+AqAV
Y5dh+zZaczkje0CQvf26IpAtIrIqZGd3bBZkb7l8Mz3wlSj17irS1JEiLbRn
aezlxxlH0APzV6DJGPOxb4Qe+eUI+Y6N0GzbCL3S2k+/2bPfGMNjYzjrQt7j
2MnH6nqzxfOc/VjRJN2KwGa0HZWojCNGt6jKBxV2PYUyx1xLq7oB/EqRwOMh
DKsCQSZYObmpmNPTrGGpXBXImEt2D58NMspVtXqe6xhk46vbB/CX5QBxrrVf
W9bIAeAcAM4xwApiIJwGwFwcDteleAJWowAeEoD7BOCBowxwFKVr5BzhtVsJ
+BtdD3R3BABv2PD2aHhhflcf1wOE9BQAvwFP8mx2BV2OqxmncLsM3Gb1IieT
O2jEhdIyuQRKE1ICJDmqpgRVYMvQCrioWP1cqwFbhlZsUIxdNOS3uB1mbpWx
T7C9zMj7OeQWjYIyzfH+xRy/pDieuHEDzT56N7NKt17xOD327QT5wOYs2Fzo
TDG/1QLe2zVuJbSwQInu+HKK9jxVIqor0SsdJfpNU4x++9Tj8vi4Oke15n5A
7VutvyQ4l5z8MP5YOVFzLRYYAbSK9zEV4rV+7Hk3IS9ybObqxqOme0WzdRfM
OM3FhMLcKiRUpJYIreL1sMK8m+esOaCd6xJTSwM5mZAJ3e2mIYXmZGHVAlt+
hy3XnEFcZMBzjWkTbkYbljSGaxPGcA1ZcA8y3EZMwX0kbAf3h5aG227pX31R
aBnADgFsjswxDXbcociuErKDimy5CZniXybxpXWpm9FhOcNgL4rK/gGh2slU
83fbFNdMtUW2U+JxFbDOMdQCtlPi8TKNdl4MaDPYgjdXiRVka2OP57F9h1FA
1MMet6B7A0xH6etHQPcI7d4zQofqRij79dtpdvNGGnv+QVBSAuF76ZkfZyjy
SInmTpZAOAnSo0DSRHtU4cnkgcrldMeNJTr50igNNY3SbzpH6bd1HvrNzruq
wfHoxQyzOlNhrdoqfoIqIfctKlJreqXlrFCum01yVQ2u2xFPsZJcjsqeghWa
XarEyLvyet62TNcY2phfi93zmV0VipnfTjYJyUaeDeDm29iB+TZeAssjLOdB
bl7CMuIZsEXNy+DmGlNGriGl4S2DOwxwh07EFbhHAe7RCINrW/N+cGly7W7A
q2+tXlBBbtQkF9z2gVoygmweodcEN+RlcNMCbbme0FO0aiklNLhszO4Qf+db
2B0Gt8OMrYTjNPjMSOXA1K6QcNyveTWZHQSbTKzEYtkWmdUKXt9e5jXAzI5U
MBtTzN43Qs8IsyXyfPJ2Kl17B83dvw3RV7ikWz9yjF76xSDRkyWar2Nuoxw6
A6NczvpHeU+OVN+FjKYxFhyVFkbbt4xS+6FRGm8Dv51F+u2xZnlsIsjXYA+j
NsHnwyYCi9oqebhKPawvWSZ9y8rIlyO8BGy1NYO1tFVS/1SrmshrLn0UeRrI
00QGvmiFaGllwseB2pWXCiSvArUZohl61B757mGBO48AnZfaI9+JyQrY5ru8
qJrBNaxfmUl3c8bIczxuEqydzDXfq6lPGrk6UF1Lyk72KbKPc0iOgm4mO2Q3
O/sTYNt9eEn9VsKFi8D2IywrsONngy1co0L28rsMV5AdlklctuKmKqNdgfWy
RVhrtGXlIecsk21yLZM5Hm2T60GpKkA3lxtFri+KgjRvMNECyo63GcXACN10
+e205oqDtOaqOIAuAegSgC4J0MYVdxD9+x00vX4jzfz6PgTYURAxCqgb6dCa
HGWeGaWFxlE61RFgnAOjisiLhMIxTeMiMoNj9OiDYxQ4MUZzHWP02/Yh+t3+
Q9X8wIUCaJWcOxE0CVd94+ZzBfSRbK0CRaPLE0RVhzCxqm6vEm5HvVLTy0yQ
yfUU4cJiRahmegtiEp0lUgu4vXkNbp7B1cAC3i7TNLhOARcTR4BbaO83Cgpc
dLdmHZeC3YxmN23kdTjOIRzn6hS4OYa2RoN7kkNyDMVyBPCGlwL3A0uDa/dJ
cfVre/zTlwHD241CuTcCcKNOKSYuBbd9mlsSbkNetpQRZvOlLHZ1RNbcDuiQ
PKhK5GW6jBgWS4nl3sxsFoxazPKmIOBKMIZx8DWZlfndCDPLxikU23diWzKK
iK4C7+UK3g0mvHtHAe8oPfiRO6jjo3fQ8A8Qke/eQpE9v1bRlgH+aCcdv61I
gy8A4OYSAHaBpzFE3jFpx9ECySre4QA6hgwyERqjTV9O0t6nxyjZAHa7x+h3
rUS/2/2UcDpWzacgHE8C8qvf+Y9s3G1Mhsb4ESc/ICcy5CF5ATmqhHxiUZyu
UiLiNGFW3AgjVrnjU6WPKks05LARaYtOCdBv0QFam4m5S7V5bhejzqArzFGM
MOqFbg47hS75CA4KkQIKkYIscPD2PEV8mya+NVsO081AvQkhGrxDbfkGkF4P
0utI094H2uPGMML00PEoiGfaQ0byYND23oTG3e6783ZfwFI/DrbC6G7zAncV
q/0cq10xI4BYHXT3cbmMEhpVB2I18x5exLuaEqrSYwWzTu9c+X5618oPiL17
5QdM2GUuOOwU1leYhQcsL6ZhhxUcivXlOkAXmXUpOnQrrHOoAe0FIZ6dXuBp
FmB3XAzc79C49wH3UbrvvlHE6lE6CNzXXrGR9n5kI4Wv2UgTazbS3KM7Ea/H
pLAYcyyjjZ92U/2mEhX2jtGpViDf2o5oAL6lgBgHkeOqLe9XAd1x1NGbbxqj
k3vHabh1nH7XPU6vNvrpt/dvr9YPb7lyE1j/J7r6Xf9E7m/upeAX76PgVZuW
8cNOpv8s3qtNDQStBOGoNoO6WRL5pSTCdkWZdW2qECkH9BFFerUi3W2SXuQ5
Ik9HGPZ8GXL50Awe62FvFbpzjHbZGG5U2Rrw9gFkyUKbBhxwF1rYMkYBcBea
Ugy4xHOmO890159Nd0zRfVzotl0ffv/SZNv9Ip76tcFLNNVhUK3IVlQL2RLJ
Qx4SssMm2aA6gigekSUPXu1YrpeRB+gdIPrgqnX00jVPgO4POoH3BzFGqvrI
sTkU37zWkTfZlrUOjt39gYIxIMaxe5Bj95DE7mEBe0S41pVHnnEG046/Yaix
N4p2VNC+yQZtRHLGmHYA74aPbKL+b2yi2TvvpPEXHmawgc042nHa+tkgtW4b
o7ED44jmI3SqsY45A4CAGe9kUmPNyDplexm2E8ZkeIJb2rFtgjqOTNBE5wS9
2j1Kr55spf4fbsbj48aUuo4evPJlgfzlGwboGrQdP2gi7zdfotAX76Hg1ZuV
XKrkkslFL7VMVKXzAKcByRRmLuCEM6ESjy7pddxXJsXNqC5uVLwvyeJgSVbY
tRZ03OfKhpcFizzlLDpFAdUqzCvyuRX4ncw+3+y2qDdDOwxzSxXWhXxWAqqY
SxaRL9YI6hsSMDLyEtf7YKC+RpN/IgLyw0b/EuS/b2ny7X5sQf0s7QWGl2tv
lDA+i/zYm8gPexL8pbQkElTEa4GvLWuVLzHfoBNx/QOOauaeDq+6hfZe8yS9
Z+WHnEJ9NVMvzKcDYD6AciUbMJHvx5xQIx/gYR8KqFA+JLSDe/68ldBfYuzF
Cor5aoZeIvpG2CFacyVjP0b33TtGT+8Zo0P1Y4L92is20TMwz6c2Uennm2ju
lzuEkXGeKoIp7NGuL8Wpe+c4TR4B+p15mj9xADxNgLEJaYE3sxaacMruO0zm
VQubKrf06EMTFKydoIVu6KArR68dOiqPT0EjW668l2q+3wMN/DP4/2f6NfLC
wRv6qf7aAHX9sIH833iewl/YTsFrNuMFcRWLwdLYOJdGIpByijGTwTKpuKTy
skzPkPm+pBRAPPUoSVVfknvnnAhKDL7ckeQV+qJnpFztIA8U2FxsBY2+TE17
+fMfhZ68BP+iMsilCym8yIV8sYM/7lwua7Iq8rdmFvMP9gsNbGC/XvNfFzdy
zD5H/pNRzX/IyBqBpT9uYYu/3Y/PqF+qXWa4OgMS/H06+AN/KWXijr8SCYTc
jL9IAOwnNf9lDUSt+4cDSgP+QfrOquOQwQdFBO9a+SHE/w9RtuaoRP8UF+lp
Rj8j6GeBeb8yrmgCvAoAAcBGIIERY5hNJJDjWJ+XmVke/iso4zUxbM83RnA8
4h+zRHDTlUQbriuL4GAdB9BRwH4JbbhiMxkf2UyJL22mmfV30uzTvwQzCnC0
dNvHHqCHvpki7y8naPbYBJ3qHqbCSw8x9sLdBN6k5li1innN6TuxnaQ7/wPV
/e4JSjVN0O96J+i19hS99vwzxjR08eurj1N0a4rOGBP0BrSwdc0E3XfzBO1e
M0pHbshQ07Ve6vlBLQW+sZsiX7iLAp+9s1JXqhUJlmWxKEdUWRWY6sOeSEVP
RgI6U6h1ohVaD9CFT7Wj3EpxJMnBW3KKKPhW54gIQ5kWhquoBOEqsB5405NH
fC9CFEoQw8qQG4qdbEOwQVaGUVykC0sTLKxmvnNdaIImGhOii4LoggttZAVe
GK6JQRcRWNgYYF0cDdjW+u9dWhh2P7WlfnC/erEoeGrLmrgAeogvoQlTDxWr
4xcqWfj5zs8QfeeTbnpoR44ajuUo5s5RtK2Dsl1e8my6jRXhKEuisFgSnBJQ
7AzxZlgWKIYR+HNioywGpyihipWgayBO/lADWL9p1SZLD+uvG4cexqGHcdYD
q0HqnbXQwkOwzo9tptwPN2OGu41S+34t4DDx4B6aeJ6e+kE/hR+ZoPmaCTrN
X3ueVIIIT2JvEkhOyv5UWFpWwyTe7LTumopI6zSmI5OILtMskpvGqeblScq3
T9Krrkl6rSVEr/3qHmr9hZ9Gd4/SGz2T9AYV5XI+f9vNk/TLtZP0/M0lMlan
qOVaD7l+cJJCX/81Rf/tTvJ/7s7lZq7Q+rQkIltrWqIyh+QKHGMcWBiqBpRp
jn9MlUoV+WKU66RRWQQqQQ+cLlge2AMXi5ThNhUBdfQW1QS5F9bDi/cQB7JL
d1kcI11sQ0oYKJiK7SIMjmwol96ipwosjjTLQhdMlcLoQ9KIQxycMGKwKMTB
wghBGEEjc9RnK4z3LC0Mu58bVP+OymUomAKGD+JQwogYQV0wKWX0GWH3m5UR
FbPJFqiYWBsoXn7+tSTtfjhHnQ05Svjy1NSTp4Q7S9lDz0EdBdYGrFiRMEZE
HZyxVbIosTmURDD7RcGr5SGzhVHHSp0zxlgfYiNi43Tj5ayRw5ZG7mWNYI56
sB4aCU5wmJxwrKR1kMi+j26m8GfvxKz4Tpp77D6rNmL+J0KTtP7jR+j5a4cp
/uQkLdRPQiZpDtOTy7UYtAhA8xT2p5ZDDFOO8+ju7VPUZUzRZPcUve4ap9fr
Omj42rvod7VT9EZkslo0cwFtv26YtoP/h9ZN0ks3F+nE6iS1X9tLnh8co/DX
H4cG7iLP5+5UyjtPK68ib4QW5Q9TFur9S/qzcoWuB6U6dJq5YkyqqDGVI2Rc
kSnkXusoS8MUhdJEtdbCiNKCTCBcRUiFJVGEHMR6CipR9KjqaaQrZ+oBz9LJ
n4sz8wTEAENkLbbyjdQi1FCEGopNbBVqaNBqwNQhVxuFGiKihiFRg23p9CeE
YPf7qurfo3qr4TGFgCyhhBCFEGIihLBYnxFBmoiYYkDZdLYQYurD1vyRiLhO
E99e9Qxt+PkQ7X82T972PKV8OTrUUqCgt0D9LW0sAp4ryyQBImAJiAw4S5Rk
4lBiCcBGlQx4zhYY1UXTGJtTMsQF2I4z/1oDm3WeSND66yfo3vsmoIEJaID5
BxkrWAVSHt390TupAdb/LZROd22hyRcelTnBJCeESccyiKCeXr6xSKlnJulU
0xRE0CcV0xTeEKBn5rnl3KC2UdU3w210ymnMoPsi7qLHHpmiUP0UnXJBGD0F
ev3IcXrDA1HQkDqdL4voy/jZLqTtN47Sjltw6bop2ndzgWpWE3Ve20O+Hxyl
6NceoRhE0vH5u1gdDiXLKjNTWHligucSZVmwOVkTsrY0XqGOMZUreF4BXfjG
FusCmmBtjLB5eOXNU9Lr/tAFNDFiTis42PcW+aOPFaIY6WaDIFSScChFvB3b
QWOkY6CsCiQIiAKWLsuiOQlZQBKNkERjH5JE3CjUcZKIKVnUsizCkEXQ6D/m
t00Q6rOGtj8me5VNn/rX91Yank6/JAl/T0jpQmtjKV1EvaILLpkySHcx60Mz
1qyadWH0+YfpO5c30T235+nEgTyFeguU6I3R08cL1OkuUqaXKPX0/VAGa4HT
wzLoosSqEFMJYlQSBFK5KQwIIjBWKYxxrpzGudgNKFXcKJlhsSoOmKo4TyYO
48FJWgdF7P4o4u9n7qLSL+7C7HqnqYkpaG0SAR97tP4THXT01lEaeAG6aEWC
6A6zMpQmwlPnCcQrRRJKDtNoYRFp6ap3fZiueveHacuXiPY+O0Xplil6jfXQ
laU3Xnqumi+quFxMKYt2YJZx961T9CS0cWBtnupXY6p/bSf5v38IuniQdaEk
VGVlKS0O2VqVXYjzmJoEsUQqJk5m7kDO4GgxLslCJYxyy9LgScUopwkOUVCG
koSHwxeEAS+4eAm2yImiRyWLkR7+ykV33nGpkkSXrptQM410KDmMtEMK7ZIk
lBxQMxWbzSxhyQFpqCHOq7X1MaghCotoNYSMwRMBqMFr+02bP6GGq2361E/p
X6SU0M1KCFcoIVZWglsrwSNKYBWkUWXFkCSUErI2ShgyyJ+j710Vosd2Faj5
RIHingLiZD3d80KRajqKFEO2GKw9wWqAFkpcKZU4Q4xKhhhlDUiGYCEA+zwv
62sljEteEJPkP4LiZwWtXlIJDMdYcJLj46TjUrodGjgGS/zHXTRz+xaae+ZB
Bl8EwKDrlm7/lJtqNk5Qbi+EgPr/TJcX3E1zRTSNZ2TopxX0eGfYOunKd33Y
yfAjxl/NEgDPtQemqdA5Ta97pumNtgi98fAuuXJWywYtYjw/x4V097pp2nXb
ND0NDRxem6PG1THqvbadgt9/meJfvZ9iX7hLVIjSzOE0M5Mq05QYQnpKUyXV
np71qPpJJhJlHYjJ4EEFMpEY13oYZw1wfuBbJSXkC6mdVI4QFVh5YrnkiKLL
tKLoYaS3AMXwRAIyQNVgTh7OFsIIRDDSltFC4LzAHx1AVuC030RGkXNCg84L
9VBBfUQrIayV4LdLCe9aWgTXyHZ5ZZ/h7fQZPggg0BPif5whgplPCPyHNf+R
ikwQ1Zkg5uPpP/B3vO3N8PskDcBy9J1Vt9Hq7wzQC48XqLupSElf0Uj7C3TT
A0XaUz9CXs8IDXYFKbD5DmZfyqNRp2SAKpA/xtyzKQXwx0jgn0KFFQMTGv7z
jVJgAgK4EwI4QjdemaTbrp+kXfdNQgCTLADG3yH8Y4NovxzJ4C56+GN3Uecn
7qLcjyCCnTto8OWneSowxQGVebzrmiA1b52k0sFpOt01QWfaO4X46TL5Kvyb
euDgPgMuZqMzxmxshq589yrIYRXVX30vXfWeVU66+j2rZC4xQ13HZ2iqd0aV
Sg3dVLxhq2hiNjbtFFHguWLTZhebvILjfLr7lmm6Hyp59tZJOrp2iJpXh8l1
bQuFv78XKtlFsS9uwbvRaaKct9SRqqesBQE9KWKBVMnsYplWhrIxMVGJf1xK
KKjDN26UZPkC4pDFWC0Lryz1eUY5Q7BCXLxIO+JiRRRZEKwMzhLlqknSg6qa
BgHTImVAFSOolkZaU8ZIS7laKisDqmiIiTIKogyoojZkDNUEjIETXttq6Z1L
S0P9UvP58od4OrxWTgjqnBByRaAH1gV/FBOqQHpiXShNJI2Y0oWZFBzq+5mX
qc8U+1RCgCaQFPLQxQHafGOBDiMR+DuhCw9/Er5IP7hphB4+UKKWnhKl3EM0
eGgPdDHKqpCEMMRpALrASytljIsi8pYaYDI/hC6ULM4TSaxGTjhbEgfrpyCJ
KVbElFLEeWBgitZ9bAu9DAt/bgtNrIUqHn8ArEyzHpwc+3Eadhl+2v7FOHXs
nKaJIzN0pnuczjQ3QAwzVSKB83mX98Rmz25jaGMzeKvY44SxCjNn6IPlYdk1
sEcfnaFQwwyd9szQ790l+v3xmgv4GsfF1vPgOekeqOFX66fphdsm6PjaQWpb
HSTPtY0U+d6LRF/ZwYqQnKXnH2VVqFxiJT1JgjpxiCokaExIObU4cUzwPbsJ
EYR85UUkwYLQUhhDljBnFTC3SMMt1ZOrBFGMsDAYfEwp3qnE0X2WMKyUAVF0
9C9KGSKMFhYGRNEMUTSTJYxiIwsDomiIiDBydSFTGOeoCfUPw19ibLr1Tmgh
AB0oPYSgh7DOERGdI6KsBZ0jKrQgOshC2nH9+fo+sWHJESiQjATr4aNddP/m
ItUeLlLUNULUFTQy/hH64SfCtPGJEh1pHqWwd5SGWrqlPOIUMWaliHE2SRHj
ZoqAh9iKbBUpYiQwSTdcfhf0wCkipfUwRb9GeXNA6UFSxBR0Cy2wKkQTa6GH
nbDGj22l/m9vpdkt22jqpcdFCJAEbAY0zZgt3f/1FLkemKEZRPgzvaO0cPKA
U0SxwhLADAsgOot2FhDDorN489jj3BGfpRev3kbJHz9Hv3uwnl4/6aPXjw86
6Zr3Xu64iLb+e4T2PT9L6bZZesM3S7/vHaA/7H3BmIvPGnP66SpaltjsMtHM
BaKVnetn6OENM7TntnE6ubafOlb7yfezeop97zloZStF/31rtS7wdOKQtMF1
1RSXVVNVas6kUqnKGFamgPknjFEZdJYG37EeN0a0LEosC6/kDA9/5gmygEEO
7hElid6RxZLoMeVQKYlBVUW1c67IliXRZuYKSKLFlISSQ7ExBouIJPL1YS2J
ICThs5PEO/5cmsCUASnCjxSxZf1WkYWSRMRWEjFv0sma4H9iRWeIuPUbEvI9
Kd8QJtWkFYEMAVUU6EdfIHrq/hFqr4UivCVyHzlgZP0lTBdK9OPNo/TMsVHq
dmGW2puhLAr4ISmUhkUF5dQwYeSVGjj+YHshKwI2yWoQK0EVq684QquhiFuv
n6Jd90MR+0QRWg38+c5pqGEajlc2GZpGpthKz8I8V26l0nVbae5Xu4CIqID5
mUH5tP6TT9Kj3x+gwCOztFA7S2dcBaGe0ZTWVADoF04d75U+E99FKEMVj129
nSLfeppO76ql14+66XVvnK5+7+X0Rk07vRFX52xbM0W1h2ap0ANp+GfpD51x
+v1j94s8Zk2JqHPL+7HZKnn5ldbLQaC0c02edkEpj98+Qy/fNkZ1azPUtdpL
gZ/VUPy7T1Piy1sp/KWtXAFWiWIuVOFA0mXFbIrDiNmyBSW5yArupKQR/pAf
vDLqV1ZCkQXZKMlg/jHiG9MZZcwpyqkqK8cl9zdcvJIC9WjVWMrhx7qGeT3K
VE6nSiYlJJMSVFNqK1dYrJwRVk0zVNME1TSxaqJKOY1hKCdk5OqDUE7AGKxx
q19ecfK71FMOu3+6SuWQt2GK4bNyyNYN260cEtGCibpJBBNTglE5xGuqJWv9
zkWf/KAF8S8FQCyOS1UCWXUfrf1hjvb8eoTcLSVMNEpIICIVnlnTj76Vo53P
j1FtxxikNErDtfWQyziLhfPGBE+usWGVID/DPVofPHyoAFYYpeAU3cAauUpp
ZKepkYZpceM0x0SujSYggMnQDG2EMI5/fBslvrINM+xtmGE/zMLg+mMWmYjh
xx7ImaUNnzpAz/wsT9EnZ+lUI0TiGWZRcCLAtqoils+hCpmLz2EGsOua7eT5
8uM0t/U4vX6gl17vjdHpUIReOTBGb9T56Y0kf/KBz11O9+yYo+6TczTtmaM/
+GfoD829NHbz9vNYAZVPj6NqeclLaNct47Trjll66vZZOrh+lBrWpalntZtC
PztBfd99kpJf3kaB/9gqmUwlPjUdmpISS0pFwC/Lalw98cxjXPLppCxAqGUI
Jn/STBuSLibkxt2E5l7WNby81Ocdkw/76ZJKyim+gQH0363TRsUUo6dyQVZX
UHoxtiTgZ2EV4LcCeqSLETNdmOA3nQ1+AOD75Qc2hHC7f4fxb5bWgUocb7US
R7AnqBNH2Nh++w4jorUQ1YlDdOB5sw7Uz2ENsAT4iwO+YWSOhKqjjCSyxndX
naSt60pk7C1RsGsU84gByRr9mD8MiI3RTfeO0d66cfJ7xmm4K0rhOzfLbYgJ
vD/JGPBLIaisnCmmoIWpCiWkdbaYpqf2TdP+BpUhJFMEZ9jtPAmAFoCC0sS6
j22jR2Cdn9xGuR9DEzvvoeH9ux2mKKajKitogzBqac/qEiV2z9Gpljk6I/88
xSxkgHImPseC4CPGXHqVOC6jO6/ZQR2ff5gm7jhKr73UTa93RunVSB81bp2h
aUx93qjro9efu9+Yj6tr5/vm6NHH5ijcjNfwQSTeMfrjyXr1WHyuSp62ik+T
Lj4SbTm1gjiDzKpMorPY+XQvJiT3QkHPwI6sH6HmdUlyr+6h8M+OUuK7j7KC
pL6akZXcGV1GavXISu605A8WT7VsOQlPsXBQbclqhshn1D8pqaPkN2UzoSsu
Ec64/N7ImBaPCMjJ6uGQhmlISU1DyuLprswal1kZo8TiabcRDwunhcpZo9kU
TwQWhnhCEA8yBsQzVOv5oCWeZecmnmt01eVuc0M8PiPIiaRHiSeMRMLi2b7x
HiUetyUeVXVh7uGt1E6//iGaISMhNgyz9AMr0nc/4aOHto1SozFKMfcoxfGy
WWinX+YeUBDm1T++YZwe3j9Obd0TlPEUKHf4ACvI1A+SSWDSSiZTbDINmapI
Jjeg4Lrl+mkkE0tCHBpDLB5TQedp9cyinRUF7UdWCf/bNkzOt9P8479S4rlA
ZRQRzpzYbHSONny6jQ4ilGdfANhtME/KKUpZLtrRurH20TLr85hbz8fnRUZ1
1zxAxXUH6bXdnfR6a4RejxBt+WwnHVo/QcXnZlB4ZemNo/v4fLz1+T5cS9u/
GKSXX5ynTMc8vRGYpz+6h+mPB/bwo6IhkZ3ZKolhUFhVF2tJW0Uf3bthlh7Y
OEvPwYz1RWpdh/y9uouiPz1MyW8/JDJy8koDQgInomlVf5plGH/UKjwtt0JQ
t4anVfnFMxgua8/nCV9ZSUpNSkVchEFJIz6ZPPqUjKAqz7g5tXcaJTdPYUpu
JSMxKcBkVt+T54LMWuJSOajUybULshDm1CIlKcBSRolzUKuWUksf5AQZNUNG
zVGRUqEpBCkFVQ6q96uPS8nPddv9q+p/Vkd/LUkooJNQCEnI1FDExQkobty9
cZcRc1cmoTRElBYh9UFIpEWU4F9zWiwiB3+OtoBEkoKQfv7lftr90Ch11o+i
JhtDIoKI/GMQ0hjLCDZOP748QBsfm6CjzRMU9U5QrtUNIU2qJKSExPUDi2hE
mRbSRVpE6QoRzUBEMywhFg/nIShpFvuzLCGOqrOQ7rqPbaedH99OjbD+72xH
EbWDpl96EgDNAaU5XsKdg/AgDSjIRcfvmKLhffN0ppNTUBRsziPUz68QqawU
rOcYbUjm8DW7aPD6ffTaE630WmOIXg8nqPYnfio8PUHPrB6lzFNz9PqJPGTT
UC1qWU7b18xQ7eF5GnHN0x+CUEs30R+f/JUSU5X5zHLkFJlVqVeMz5cTEVCz
NGzmRXmMtX4J3Ycc9OCmWXpx4wyd2JCn9nVx8q1up9hPD1Dq2w9Q8ivbVDFa
XsKQFpFHC2iZiGdST/5kIhiUog7bZVDPlDEaFAVp9XCJV5JyboRV5LWUpBIS
VFRCMoKA2JycingBXxRUNErmFOZNa2FKPfwTvpWJqNSqFaSSEb9MC988LCso
LArKNwaMXIMfCvKqRS/RxkXnpiB1G/GDyESuikwUhIJCRsRUkVupKIZsdM/G
e5WCPClLQWYqslWQj9OQSkWsoO+ueobW/2yE9u8eI2/7GKV9SkEDYuN8x4Rv
5A4FJugnGwGZMUG9rkkadA3S4O7HICJWCxTklAx0sZbQNCb903T95aZ8MNW9
f2aRfMZDSjaQjyyAzjpFPJchqupUBPE8C/NiSl66fgdm//ezeCT3mO1MFEqB
WmZi0tLGq4NUv2WGigehpu5ZeqXXv0xUVCWMz/UtoF0QwhccK+mFa+6m5I9f
pN8+2ESv1QTptUCCnv58A8XuHqYzJxfovh/kKfTQHL16dJR+X9/LVxkLtFBl
LODy82nn3QvUXbtAM94F+iOU9Z9tHpq89W51Gr8UzlomwlpmyYxlpVuHqvve
aspJUiXHhPs3ztEjm+do76ZpqtmQo651UQqsbqW+n+yl1LfupeRXt0kmZkmJ
jJScqkRPK3UaKitJFcxTKhexkgJTSkW8NIPqruRD8e3n9XxI6BJTTJKOlIjG
ymLSJR3nIVFS5e2WLlXWDeEvKkkuevN8SOUiqKhV56GWOCwGg4qauaRDHmoK
aiX5/toS0SX/ExFdZvg6PEawyy8iComIwpaITAGZaeieTfdDPCmVgrzWPEj9
oKASEP/2Zc7xdiPps/SjNdRK96wfoxP7xyjSO07J3pTW0LgxKDZhDLGxiL6a
p3uenaS69klKIhvl65olAYl+eDMt68hlAV3/GSWge7SAXm6YNcZCs1LIzYpy
5F60iAY2JzfheFq+8eM76PgndlDiq8g+d0BAux8FNvO8UDzP9ZzSTNmQXrZ+
IU6t98zR2NEFOuOaoVc6uzj+C8bxBd6Tdn6Rji6mR6+5h8Lf3k2ndtXTa0d9
9JqXqOgNUuvqGI29iCLOvUDb/iNDXfdinnVwElqK4O1DSZhaLihNKetboEcf
X6BIywL9JrhA/4nx+s+6xvI5/LpkiUv6+B1U6VymND6vsxhL7BJJpjqXmUKj
+yGux++co/2bpqh+wxB1rwtT8IYmop+8SOlv3o0R225MyYrhVGRWxnNWRKby
1USYF7onpATQCtMqU3lKqQsqg7qmnJKsOE2JyKw0JSsRojBRmUNVe28vV3ui
LqWw0qIVh2Eoa2ixwjpYYVpdbUmtMKirVdQl+SoKFxabw1BYEAoLQGEqT73N
kthbl5bYZUtK7B2GB3kqoPNU6Kw8FUWeionMIDF3QmQWR57auemXkFhG/Ste
S02XWGM+0ZiDvyk44lhB3/tMjB7bOUYtJ8apzzNO4YY26Gycdca39v38Sawh
RLRhZXTTzinaVzNFAc8U5buIondt4Q93TXN5Ny0f7prREsvQOpHYLCQ2ixwl
EhOFyUc7OFXNsUm5MgeFTqGUg8zYkKl20KMQWtendlDuJ3fT3K5dlN//nEMp
7WKtsIWyxaWlnV9NU88DCzR1YoFe8UzTmZZ6JTMgvVzA/oBIYifk5f7KUzS7
7SS9dsBDr7mIzkT6aM9XOij1yxH6XeMpeoNO0dZ/C1Ptllma3DsLiaXp9/t/
jetPiUxOaYnpll5+aYGy3Qv0+zBk5svTfx1+eZHMRFpqX7+Xah0CrBxWLQq7
SJWrSL7331qg+6GqJ2EHN01Q44YB6l0XoPANDZT48XNQ1nbq+9p2JarlWlQq
bMmiJgytmpUuF02NQVOjwWmlJ14aCoieuDAcgYtFUz5ZQ/VNyG9JTmg9WeWf
Q9V+F+gZlKknGDJWSWuq1DVkakpNnlaqhCWSgpzaEjCCrLSkWnXCakHCakbC
ag5AUn4j1+i91FKTXVb6s2r64KKEFe5hJXHCgpJcppL6LDWxkuKetChp1+YH
K5Q0qNWklJQUKxj84RiVsUZgJbrhW3l64bFx6mkcpxQSvlYSbILFNIk8rsQ0
ZeT8U/TTn0/Rw/umqL17mvo9o1Q8coS1BJthIcE5M3Td5Ue1mGZFTE9CTMhX
VVpI40pEcLMWErMwzwtz4Xneo3WfuJv2w8JfuJsm1kFJTzwIDS0gV3GQh2Zw
7pxW0JwyevA7g+R9eIHm6qAi7zhNHdsjxJ5yMvyOd9Pma3ZS2789SuMbj9Gr
L/XSa11xejWaoLs/d4B6b0vT9IEFeiMACaVGaevnm2jfrVOUe26efl83TL8/
eQySYQmdWtwmTtHda2ap9sgpKrlP0X+GT9F/uZL0n08/VMUnOaoqlaQT5UVW
4jJtLl7RWgl23pwB8vwKqZoeuH2SHrhrnp6Bso5sGqfmDVlyr/VR5PpaSv7o
GcpAWdGva2VdJKqasJSl1CWzVdgYZqxjIS0pVBmjIimZAENYENIUS0skNakW
y5WsvBxhS3x7iFW18qwqsCg5qtSTE02VTE116RzVqXNURwaXt/NvNyhN9YmN
tJmagp5aQtBUUDSVb/IhRXnUl3RFLna/TPInRKU+n/x2w9vWixTlhaj8RoiF
1auEFXWdLSyIyp0UYfWJsLKSou7d/JCVokhEJb/Q4MsjtkuK8ilRpSGq7646
SJtuGKNDz0+Qv2OC0p6iFtaElIGDMrhDiGFvKSvr8l7a+Mg0GU3TFPNi9tLq
V6pSyhJVXVepqpdnF1WBc05JTVz5s7bm4XhYRCSFMDuPiYKS1i5YE6z/u3fT
7NadNLPnKZYWL3kvqDpvOban6PYrX6Anflyg0BOn6DSSyyu+Es9jTmEsWQDz
nFP6Tomwaj/7KyqsO0yvPttNr7XG6LVoirZ8bicd+Y6HBhBcXms/DWGxaE4b
pxKn6Ynrxij5JAR3okR/aOjgfvwNeARQqHOUwGC0855T1FN3imb9EFcE1uGn
uY07+TG8UVZZtcpvZjnYt+A0J10qjVaKSypCzPpYWOakkR7YOCPKeg5mbBql
1g1p8q51U+z6E5T60ZOirODXt7OkZH7K1d+sfJBJyUokFZoROelsxYW7U6Wq
ET+vrWtNyTwLWnKKmKoqFyh0lqqqXKHgvh7+/SWlJlEU93UO8NqeVH06RbWj
6mtHmmqHpNpZUpBTG+TUGoWFtaSQopr9kJRXfbdRhGL374b/9Z+T09sMf4cb
OcoLKfmRo4KQkqr4WE6xioovLnIypZSx5MT56d7Nj7CcHGpG9VY1ozKl5GMp
KTl974peug+1RO2hCYq6Joi6+iCnCchpkqUEm2IxiZSGubDL+acdF9HP1k/T
7iMz5OqdoWFXnoafewpKmqVfiJKytBZKuhtKekKUBP2MsYigJLyVidC8JaIJ
LaTJyAKEBEM7HVkQMT0H86IyK91wD809+Eup7GasKu8UV0enEIznRU/H6Lnr
R6lvNxBvhZ4wd1zoO40C67S0C2Tt87QIWqBDn72PBq7fT68+2UGvNkbotUia
9UEPfv4k+e/if9IPuoqcpt/RoNZPNe36bo78D52i3xmT9IfGwDLpvsiUnsjv
sSdOU6TtNP0mdJr+KzRN/93YIo/zO5DziNMmlLVMV47a1L7ksVPVleVgn5WI
nZyVoWI1DpDW5nn61ZZ5egF2fFOJ2jckybe2l+LXGZT+0WOU+Qb/8MBkZE6+
F2FmKrUoxItDZVnNIEuhvgiKrHixvYSyQ9aZVMbij4nKPXSVqMr1n2dUz6fk
G8wu+e0uvf7H2nJytgLQSl3IVV2LclWFulhZpNTVDmW1sbIiMCirBcmqxQ91
eY3hBrf6Xpjo5n3/E3W93Qh0IlFhPhVGooqIupCooK6YqEslqrhOVKIsT1lZ
fd7ycsW9mx8zqz9JVgWEDVZXWtRVgo3Sjz6Xpifvm6D2mklKeCfJc/SYJKrF
6ppmZTmUtFYaef8MXfuFHO18ZoYa2mcp7UPCqm8/S1pzkNYc7WucY2WxsLj4
m+foyTNzU1IwmWMvwHnTLK3oAm3+xD10/JP3UOJr99D0Rkjr2cdknfkU83Wq
SlSFIjAOxfSdptuvaqZ9aycp/cJpOtNxGsoaFJahJEYYUno7Pf/ZXZT4yR76
zYOt9GptmF4NpsD5Gdry+cep9qdhKuyeodd7ztAb6Xlo5IxxGoaWtn0pRW07
F2j+4Cz9oSlBYw/tMh/DO8IeUnj5/NNoT9O+Paepv+c0/TF6mv47MEL/ffSg
0p7WoKmzitbhNKWlxcaJVqVbiSGWzmZFY6iBLzNm4irWwOiXSF0Pb52nPVvm
qGZzkbo2EAXWdlHfdYcp88OHkMJ2sMpQEc6dpa9ZU19O5C2+E1hSMmOVyRLU
COvMP2WuEnLmKq9biL7UuoUS1wUV4iqUi8Euc4JlLVjwJIu/vVnqgLY6KjJX
exwGbbVFJHONtAahL2SuFh8yl8cYqHNZ6rL7R4H/hLqulO3fn5W7ApK7olBY
TBQWF4XFde7qM3OXJ2Opq887uGil4r7Njy/KXaIuX0nlrlV3083fL9GeJyfJ
3TKJOdaUbe6qVNgMVAqFwWbpxh2ztK9mlkJeTlxH6BdQ183Xz9GOs9Q1hoQ1
jkQFgXE5CIVVw9ELpsLYqkyRRTl33UOPQWBdn95JuZ/upLl776Pigecdoi8m
7jRImIe+5vpMjfXSkQ0zNLDvDL3SDeMfMlugM45LWUa8Zxo9AqmFvv08nbq3
kV41AvSqL0VjgZjI6ekvtFBsZ5HO1EJq8TM0E44pFS03Tiehti/66RjmN2N7
F5C8BukPxt5qefgCJbLkGVNsdA8mXnXGGSr5ztB/xc7Qf3sz9N/PPspp8IzO
hWcLrUqUVm1lW1U2Sio7pYpe/usllenVGdaYUyaeFxjTLLMtC/QoZPbylhmq
21yg7g1xCt7cQYnrDlDm+w9Q+ps7nDKxXQ4XiMKUulhpwVkIDLVjqawytcAr
c66Sb0q3rDJdH1bLR1kr1t2Vxt5RmcCUyYRrqGLChQTWiQTWiQTWkdYig8A6
kMA6VAIrtUNgbRBYGxJYawAi8xlP3LTJePSGjfJbZnb/3OifFdffInV5lk5d
LhZWReoScUFYnorU5V18q4oXLu7f/KQWVoW4fKMQVw1tvXmSjD1TFOyaopSb
fxBv8uzUxZ9XhaguZWnBZllYRgGV4LU/nqZH9qqK8Bef7j9LWPPGKETFwhpT
wqpiRfGPYJQ1JcXgVOQUMtcp/oQAgjat++ROOgCLfHEnTdwCbT3xiHx857RT
dFVlagp2Rj7OcAYX3X5VkE4iiOcPQVu9p+g33rhDCewSJTDOLxDXzs/eS66v
Pk0z2+ro1YN+etWVpFdiSZHE1s+/QC03IUftmafXvRBYZkZy1CvIlaeTr8g5
2754hF68ZZqGnjtNf6gboT/WN0jugrRUPquW3RVy8s6dZ6in4QzNhqAvaOz/
dgfp1JZ7pdZkyfIbO6WSoahf9un0ctHZcqu6VX/rKRHYHC/JcPquFq1V6KyK
FYay/ZdbF+jJbQt0YMs0NWzOUe/6KIVvbqXkL/ZR9nu7KPWtHTLHHQ/PqV9e
5xlwNXwl+oKgZlliXCXyp56UvkRjDlUiVuv1DKtEVKsZ71xy1d1azege+v+c
3Xd4VPe5L3o9AsdOcbKT7OQkO/vscs7d5z73nnP3ttPtVBfsuMc2uFHcwCa2
wWBMEyChXpAQILoEAjF0EAKVkUYzqqP2VRdCvXdNVRfsFO73/a01oxHG8bPz
x6s1jIQtpPVZ3/f9rTVr5neIHmByV/ysKh0YcWVqCdaeYTXsXr2ZtckQ9/5G
LcHSzHd7d1Xd1bc/19W3tNCirWLaKlG2PKElrjhw5VbMDy1zjebKMucK8l6o
6hSWrFvIewe2KFs16paHVMUdpVZc/bSIXXsvUk/1otzci4r0ImWqgZ6uqx+k
qLpfVLEGDE2FWjUX6q4eNGCFMuUJqyHsShrC0VQJJ6qSqzIZTl3FLOuwOp3C
4yxdySwwwoOtkOotHRFRUlhNT0GsKw/tQP2SQAxsDcLAkT0LPKLKbeJIWVqg
Pn5XRdGGx8pxZdsIOk5RlZmqzIXajurdWfk1FHXt8V3oXH8W7iMWuLMr4Srj
oFVpx8ZHg3Dk2RxUhXXCmWbHeJV9gVDid2gTUCxuEbGiE+VxNoyf68b0lVzf
zy1UX36fKNQM8sujd9tRmmmHs9SOW6X9uJWWfq8StcCbpdyq1UObNgreowwN
68cNOX7Iv9tfNMmRZUS6wbIR1Q32eYopH7auFWGkFL91GCc39yJtQyPMa4pR
8v4VVK04RE7bUPX7AC2jrFojoTuSnBpQr3ccmMsqcVQ4L6dUM6iF1f0+ixnt
d2AiJFOzz/Kgd2lQ/q5RrbUbBVLNHKYsGOI/2MHaboj/Q4DC1JZRxLRiUl3L
JyaLoTE196+E1F/DVKgw5RmsxgIVUqWqAyzRMTGkcj2Q9JAy6yFlEUjzMDX5
/ZNq/qp9mr/QDfGST2KJ1YnlTzRib1gvjJeYUfl9PhklnvpU89colviDblKl
WWouHKSnQWVphbI0hK1iKXEIiZeHhNKwHP+G/RWjv1MdXzfp9OjV69mWSo1y
p2CVjTKiAnHgoUDksVVrfzcQgxFh3I1sCpK6TsHLSSvY9DD6v7H1qRpkBo+i
+6ydTeAwHNlG7q124SJbfPLbnTj/SCSaPzgFV4IJ7vQKuEtr9QCyY9tjKchZ
W4/eZHopsjOkunQYDo8Zr6vtv2+COdwGh2EA02llvp/T/k71vK/302x+CYlH
7ajPtWO6nMCKO3Dr9En5jJaFCz3zm+co4K+03eeJWO8BQvWzFdqWPwVJaonw
CjngDGgElT02iOUyuvUpgSOylasFpWlE2IZehAUMYx/r1OYeXN3QAMuaQpS9
fwnVy/fLzgm8GKDWnlSIDWohVvS5IbZAhdiXfM5zdfrC0zrE/+ZzmstnSd7o
E2BGBpixTrmL/zCEFczaqdy1ZzHAMhlgmWKumEVz6QWGlmsWCbC/1hneDZ12
55zvMcFyDUWZkmB5TDAPPD3BTGVEpyXYHDommFlLMFi86Fh3nBzW5GkBdi/x
7dFC7IE9+OiNLhzb24e89D7U5Esj2CBn42mOe3kjf6o3VPXrCSYnpGjO78tM
MIr7RT3e84hLGsbRy8NoT83mL2hY4PkpeXIbGEky64iC1y1toETY12hvVJnz
ccfdw4ZP6e4sq/K5QPR9QnsJsQJOuiLbAm+C2bnb2QnPruDZ2SHu/H0jciPs
GLhoh6NgEKNXL0pgcI/+OyQ/Eoq6d5LhijXClVoOt7VOA1XpwMbHgnFycSEa
YnsxlunAeI1gcajPq221Y4E84P9i65OVuLJ9BAPJI5i+WoepJFl2kc/xK6q1
L5c/LVQf75X/BAJXcRQ6bUdHoR03K+itoB63Du6SZlKFZaVdukXm4PyAG/Ye
UmTNYy69NWALdVxa9Uvr3C/rPkKLP9kyOZox3jYNKFwHGG+nN3chfUMd8tbk
oXzVBQWr7uUAlAouspIzw8Slw/JEmrqAUC4C8I5gc7Hmu8IhLWK7zF3zEq1l
fqJJe5jdYIhfE2GI/yicFUZdTDQjE83IRDOyPcxie5jF2SuzhFWsJVpGAXXl
MdHMhsYrprvq+u4X6fp7Rlqu6g+ten9YSl1lShd7Q5MWaRW+vaFEGnVB6bqu
67rBEllNnlNb3rX4ubHLEPbpXupKx7aP+nA2qQ8lOf2ozm1U7WGDuorpemGf
uruIFmk3CgfUC2fltCR5KVzLvbiGvbisjJP23HpUbtsuwMhrRIJtRDpDOcB2
U1SPqCqR3oeu1Ks5bNwrVGE1Ve16KAjGXwahaVkQBneGoCP5oLp6VYs1u5Kl
dFVouhYoXffj419HIPLVVhTscmD4igOOoj60n0zgXqsp2v9IMPBGEmwRGXCd
L4W7qE7FjbAJf+wi8jc1YfA0dZU54Kxq0tl8ZY5NtcPzGFufMOHkJ0NoPzLK
drEZ0xcMypffgrkvrdL/xB/ZqP7XAnc4kJPqwJDVgf+sYJmssAfs9CSrZysr
/mIOdrUCYvddm1HWZAC16WOo4lUxqjJMcq2vfFTlmJZhvRo3Ng897MGlk4zY
NoxDJHd2cwcyN9QoZuWrzqB2WZzilvcSubUXy6uMFbXC/rkq0Lj1Km7eM2Ea
s7stc9wZYs2kFcOKZkUpau3ZDLFshlh2rQ81MjNCY5alhVh7ZpEKsbYMNo5y
4ffVv5HZVxlgZkMxO8cSMivNEWbF2rqhBJiXmQowecmtuZaHSZj1ABNmlkYv
s7lV+QU+ztrVKCY3Y63N78Lih4DobX24eqYfsPSj5HK2ONOMySvU+9nO+iSY
BuyHGrBVbw9jC4HFENgRAos6Oows0zDYa6LjzHkBxr5/RKVXl3VUnI1KfI2q
2xPa+Ju3eYDJKpisU/yBvo4/HISSJ4LQ9SGN7Y5Wvuxy4LZLj2RXgSWuHH7f
xce/OY74NztRuteB0Wt0Vdwtngwj3KEjaaropUMYCroKl6EYrvxadBWDO7KT
O7yTybUbF1aUoTlhEGO5TozXjhKH+txCecAfER8a7PJUtRN73+9DXYIdk5e6
2C1mCEF+zQL1NTbta/Tn7jPY557TP+/gWOZAidEBV7nDH0/+vw/5K95fUt+u
hKV+KOC3rpxp2Xuvt/nVqKmjiqdllByrkNZygOnWzxlV2sZ+IVau9QP6Vknz
F2Tcw3isQxgTLYrUjgYMKWLGDVUo/CgHWGUgtWjUvhwgceanTWn3+EaaZ0VR
X+34xt3ibG5K0y+Iiv84jhVriF+7S8uzHOaZestcMpPpTEEjsuwavao0ZEY9
z7KYZ1nFhKYha01np3j1rtPZXzGm3Wv0G4aCDJNyZtUbRRVlOZ5GkcZMNJY7
P8ogUWaWe8pTGX9pmjNGWV6zd22+SppEIuNhWYuyTlUyob39XBsORPXz+Moo
yx/ghNY71yr+vRrOGgsGJMk80LDMF1mIF5mhrWgE6yJGcPrqCFA4gg5jGaGN
EtqoIDN0ibFuq4JmkxizybAge0m/yrAg7KSvK6z6V3aif2sw+o/u1YQRlzpu
O/iIBYc6wjsY0yNwYN1vLuHge72oPOiELdPJCGsTSthOZqZnEtC7JRWu5EK4
zLWwl9VqMjgt7VmUgdLADoxeJDE40VdSIaYWKCpf9vBSWw+14KWdKIl1YOJ8
P6avFfGnzs/wp26b+xrfrab1qwp1YqKTuB7G3meD1fZ3//uhuVa0Sh0YlDsZ
1uTf51WnlWomJbXnxMkaKrQfjBpV9XijuQWCTl6zpXPr9VSpJJ7OrXREIxcw
rKglbRvExc2tyP4EKP7ICKw8gdql4UJOZi9y+74nzrSu0XtqrPsucdZpiF+/
hxVviF+3ey7PTM2+zFgcynKYZzlklqPyTNGTd/dqz67UmBk5lBmFGfMsq4jU
CkiNbWO65FnO//X51O52Ta8WZ99RXWPxvK7RN844j5nILNdnEURjxvKJMwvn
MQ819b7IhMbvXOKsWm8Ztepk23gM69/qxYn9/SjIHECNpVtmsj62GbIQcl05
0xYVbzDMNGcpWKY720xn0crZiLxmfsTvXry1egT7To3AYhlFS0EX2g4f8DBT
64ry++9mlvVIlWqZ1ltmUxO6XaGzY/XDO3GAlffITrSt3InByEiCc4g0mcUc
fv8s2ISat0Yqndw6ZUt4WTi2ZgB13LXt2YRX3IT1j4Tg6qLd6Fh/Ac4j+XAZ
a+Asr58LI1LY9PhRXH2vBh1HRzGeT3z1Qz5yXNy6ZEsEfMR/hr3GiYDnGpEd
alft3PS1Kl3eAu3v1Tj1yPOau0ce4syzIQiht8us+heD/fyp7mHhym9m1FsO
T9Ipekqeao8dGjTFbkh1ldJASzM9AIk0m5w0lAZBPvQpcPwBe7H1SClwpMbf
M7EpaGHbhxG3YxjHAwZweXMzTJ+UofjDDFSuPIbaN4JRszhgbg1koc+JMs9p
6Hy5NWv8Jwmsfay9c4ManZr1K31z1TVUJrm8qN10Q5fmq42hlsNAy6nWQi1b
DzUetNuNVi3UshhqmQy1DIbaNdN/UZoWat82FKTnMNRyDVZqKzEy1LIl1DRt
5b6hprTNC7V52iotct0hrfFfSW3qgt4qtX5Pa9yfdWla8/igWb08/ELyAMpy
B1BprNa0fVtJu05lKtU0bVgq0h5uwEofaYdTRwytRSrV+NsYxVs/q8P2vaNI
zRpFXfEoOq/mqvPNipnVpqh1z1FTQ4Td19pGOjvLwvM70fdJMAb371ZpRmv+
yto/6dac3hJrI/K4Uvf223yc3jCCxmRaY1/oKKzHuUei0fTBGTgTzHCmV8FV
2sDdW/mRLT59PARHnjOjKqIHzqsujM/5Ult7jctfMfu6PNSe0p6WLQJ+V4GL
ATb0JtvJ7gZmDId9P2+w1bi+pP76l7GH2ApYQaxEVvFzIehdHYLxAyH43f95
GM4dIbIGWeVUJ9l0fJVajVR5w05WRyTuJN/vUT+SIb25HITSJ+fq+fFL3uay
X9/2lesde6986JH2spv+vi/+tKV+ibsNrUpgPAWe4HxxZfMN5H5SgpIPr6Lq
3aOoe30HqkWgz9p//MaDhvhPDxjiN+xnJag7AMzrKi3qEiuzNroJQD3qTE0a
PhOjzkR8JuIz6VHnBVilRV028WXrUWfU8LVnFSh8Lem5jDqj/nbH/0WB/6AL
1NtKY6EuUGsrJesqlEDqy9XaSswTeF0XyKyzaFlXSX2VedSX1yYCVdZV53fI
9NapT2+v/roOcUEDSD9PfHmDyDt1wRD56SH1OpV+OYs2wC8kPyx98BSW6vQ2
KXojQk9eEFYklzrp/Nj0j+KdLTYkXbShpNCGDssNVAcGKYAyvskvvFSmkt5S
u8hT1afKgQe+9xAe/N5DPPw/+P2HOMul/SIYHcmHqM7JHYu+Kpyql3LKXudU
TZaOr9Kpzvk6/b7FYCvDxa02tJxywZHHga4QqH03Bc64HDhTAVfJdV94skXA
4wZkf9yI3pNOjBUTX13vZ7G5+dg9t63xAiS+azi2bhjNRxyYSevATOrlhXcB
i8BnQ5HGuv5SKPWFIvK5UGRQX9MrIXCEhsB57Qj+iGH8MdMo0bdAIbwzBQWh
wqj+wfIzkBlQ+atUPTf9OfT0syuCTD7Vl/eX2zV75dJ+So/xT9RnE3yeUvy6
SkaEIGsYYZt7EUaCewOHkbKtF2mbr8O8vgilH6ai6p2DqHs1AJVLAhS9uctE
Pqfb9F7p2CYLKOqtz1Wz2eQRKEl4XUZCwWciPlOtVpJ+AjAHGr7sUi39jOwz
mVVtWewzM8xMv+y/Dd//ZyjkTGfNMmvrJsRXls3oy/FEn+DToy/XE321c9Fn
9kYfq/ku+Np9Gk0Z6rqorxvvvdyNw3EDyE0bRE3+oKE+v8/QwKJAvdOU/BvE
Gw+mKHzvqtwbQRTxHfLi+5rC16bhM3QU2/D2y/2ITLQhK9eGG0VD6Dp/ib9U
O/mxSu0awfs1fqUOoefld+G4AxdZD37/YXTvMOKH//Awrq+IQvGiYIGn5jmn
Wtb3xJ1L/cnldx82PlmNq0EOdJ2jvALKsxRhNCILzgvlcBY3yNKGSz642RV/
+ngYUpZY0bB7AG6jG+O1Tg8vaRlr3H5fmkfOUaM95lb79D0GR7UbsSv7UL3P
ianLfZhJN0tnyc99x0epW31dErWVUVv/qlBMh0QiiI8NLLwQioF1oRg/Fo76
PBdmK134Y3kP/nTxjPcAMaq2Tj+N433eTNQPPN6DkGxJcIE+94rCgQpP2RcI
Qmk/RWIvJfaWe/p8GpSL4UptcwJLRxYIQY5/HVYi3DqAMALcT4iG7d24trke
eesLUPbBRVS/s08hrFgSoK9e/vPnnSSQ/NPPfTP7zK1a/uUy/3KpL/cu+acI
MvtM5GcSfsy/HMk/Np/Zev4ZJf/YfDK4WtJz/O7WfX7n8/k95FlSSTfq3ae+
dEnZZdnMvpxSRVBln0nPvtzPLKmYrzODKs169glBi4efRrA6T2WfnxZ+/13r
Ph+4gI2rBnDq8CCKjCTIabhBEdRaz6hPDwtBxe8NxW+E2Ud+xyT7Rg0thcMC
kDVqaCsc1QgWCUGN4cfhNpy5ZkdlsR1dpkqVf3a5pyajr4fueuhO/PWW6QbL
xeDDNOhU/h6kvY7DA8pgT4QV3QFpaPvgMGqXhMH06xBKdHGnc92j+H2Z+6UL
2zh9GcNd6L3khqPIBqeJoWcohbOgAd3WajWH6bQQtigV+ZtbMXjWjbFyfn11
q0brPq82XdydW6/AGjeCXu1A4S4Xxs4PYyazXMPrL5/y+648RPizYchmtb4a
CvfmUNxK2INA0tvHymW1r+DzMaEYNJ3DhXNudFpJkGH5p5Ib+GPSHt+cJjv1
WCS61BWZWhiOzBPoXKCOVPdqAj1VoW37KxwqDZVEBVHz98+avzJPAo4aOpmI
egoaOlh7tyYa9mxJRNi2YUQEjeAgQZ7d1omMzbXIX29B+QdnUfP2boWx5JWA
zz+F4ElBL8JWdd1/s0yAHoi51/UiwlxPDtZoCE2VWg7m6DlIJe3ZkoP5zEE2
oRl3nQC/0OBXaDDbUEyDJcogJ0DyLiPz8pyyuQg0VfkLQHXWYH4CVpobPQRl
ALTIWQNvAqr3n6rO6+A/0jcBF//YitCNg7icMohy8xAq0svmCKoawOtsPd94
qAHvvKXxi0waxaHLo3I/jxG5FYFcjjXXftqEHo+aNrzzvh37DHbkFdjRVtSL
9sQjMmjIsVn0eeT1ljllZ3D6/YANkhMP6PDyzzpRecaJH/7gYbQdt6H7UDd6
42rRG2JG18azaF65G+Due+Y3oeJP9HHr5pZV5UbI4hZYdrkxeIWyiocxevUC
nOY62GSNRQs5JZGP8emivTj/JtB8YARuMzXWO7QgW0BHY3ykSoEbk3MD/LND
K2x7tgEZIU6M8B86k1EP56EIDd+3seOZMJwlvOoXwjD8YRhmo2JwKyUJt4xX
EPJcGC6xal8Kw8iWMIyfjlHHhJ07XMi55sYwjwd/4p//lF+BsZ2hfp7srnLJ
ZMhHI1Uq96s0dNIT+As9WXvhAWdQrwFp1clOwk9+7jzCiTs9/xQ9u8zlZb7R
p+jxP7c34BiDYe/WJMlAVe3WIf6Gh9iQ8iAcNIwjQUM4v60DWZuqUbg+FxV/
OI3at2KEoDq3oK3B/OMdGajnoEXnZ2YGmpmBZg+9Rp1ewxy/XJ8MZBC1E0M7
UbSzP2zPLtZaUA5trcTTnGG8Wweq8/vm53agf28o5PhnZYqWZOkdqJefJ/6E
X7UegbSX6zP6KXtS3vgTgq08Buv8BJ+hJq/Th18Xlj7ehD2hgzBeGkJV/pDe
gGrs/uUbPya9FC+9jcFeeobmwmHFT92QSg/AIvmd0Z/cxNUj8GfAtn0OXMl2
oL7Ege6MPAGohV+pUxYAnKobcgpAhVBW6Zyc//7hF37fpb1fIJvNZAmr9owL
LSkudLH37TvQhoFdFegLzETnumQ0Lo9E0aOhmj/aW/dIAmKWdaJojxuj6fRn
5Y5orIWz/Lrs5bJcSUeIf9KIkp1dGL08hrHKMfSWVnltcbtQHhBTrfbI79vy
ENuetuIMx8uuZCc7zjbMXkxRz+99Nhz5rM4V4ZjYEY6bhw/g1pVzuFVkYtyF
IZFV9HwYet6jtr1hag1UGuGYeDdKc9xw8/v+U9Uo/pRtkmMCqbn9tGZZxLnV
cxJ/vvoqVf5LycqnTISDGjhxOMChuV+VSj0e4xTB3nKHavx7SLBH1l+6pftU
9BK2HTfsCzhOfjyuSvf5DQbfiAq/dqunROAgu9ERxOwcRmLgIC5ua4NxE1C0
LhtYfRK1b0ai9pUA7apL+dApJ9R92VladXo6O7MMfuZGGfzMPqHHfbw9t1qX
V6nLK9fU5UjoFeqhx84z4+6D319h95Bn3fNqlqEoI0dLvawCrfPkbFnGbC3P
qZjrPIUeMxiK3l1iz+yJvXtEHovu+C/W7UnnyZ/EN/TOMwYfvtaLpPgh5KcP
cfgb9sQe/uXrP8FrD5zCv37jJ3hbuRtV7g5eHlVXf8krZFoEHTtOgafwFWvR
114snU2HVdYyO612vLPZgaRLDpQUO9BZ0IK6kBCBx1+8jm+hF19/uUtKFgxc
ft/jPuQyDFa4EHLQhaSTbqSxScw/70Ylq/GMGx0nHehN7MfAvkYMRBahL+Ay
2j/Yj9rF4ch8NAz7OJiVHxiDLWsMjpJeOMtucBceE3liy18RvBcbFx3D1dV1
aE9yYKyQDBtGPfy08ON3SF18NM6tKom3cfZr6o/q6TEN5jMncHjtMBqPuDFz
tQeBz4QjjSCvvxQO2ycEuXs3bp45gVumdNyClSjDEcVKfz4cN5aEwx4UjrFL
CXNHAO07xZFjbjQUuDHLXvbP6MOfU8/pML8sSD1YFdJRPh6p0qCOSCmZ4vMe
+nSJUU8uytbPX0tIMmUn0FfhVAHZ6y274cD2E/6G/duT/b6ihLI/9QQkgWr9
qfDsmOMpx2C5H5+6mKyYcyNzMpZSjwX249K2FuRsKkfxx5moXH0ctWy9ayUr
Pe2pvNOVLJJ+fc4p56h2i9epMNWQcu9vZ/i0m2u1eMxlNOZWygJOhVz8aSrV
jOawMc2mUaPZ0Jpl+puIfstQcM1oKM4wKaJaMhZpycg5tCLH25gqnhUmPRk/
Q7SJOs3N/OY8Ou8QKkC7CLQmr1tdPbb1gyGcTRxGSc4wqk0tKhgbJBgJ9F8U
zlFfnIZdG5MUUEnFFj0VW1UqtqlUVECtduGpqpOJ+M7v+/n3nTBanGgqGUX3
xSvSFMn0Qp46TpcqBbTCpXyKUrcc7d3sbobgxppoN+K5o54hzewLTJSLbtSR
aiv/3H3Cjv4jXRiMr8ZgmAm9Gw1ofTcGFU9zp88Zg7OkU+3sNk+ryceO6jF2
peE4/EI+KiP74Ugfxxix2WvGFyp/9/j4G/c89pO0HPf7V+/zzlrvFhHv9KFi
rxvH6LKM7npXhWMyJBo3jx3FzWuXcNNqwVRdjXw9AmnSwCp/IRz9a8MxfjTC
2wn7bBH8djdnxjF0lozhTzwG/LmsGX9O3qeiVRt171UmR6vmSnxKozCsApY2
pXEVpoM85KnDngemvLkKtBDt0+vgjpOsE4YDLC1B7URp13HaiFMWdKR/XeAD
VFbq2uUFJPTpoVmkrvVE2OYWhJFnPOtEYB9StzXBtKkE1o+voer9o6hbHoSa
V7fK/e/V21uzoWvPu4OmhTQtpGkhTYsvTWaouUbL0FzmZ66enyZ2ribJUHau
2dK5Wgytxr/N5vfZtWbfpWst1W1ink14bX4mOoUmq4XVOj8+1ct3q/PkjAV9
ajp/XonIrcNIOz0MmCk0NU+unM7vl7P0qnX9KT6lzKOvAP/j736G7OcSkPNI
kCF2Y5KS2aJk2gytxTYN59d8YDr4C3MITkMXga4Nd+JMhhNVJU50W2rEJov7
TK9kJV3K21NViEy3mJxzKYsQbu5ZqtSO5vb7HgL3j+FoyhiunB9D/sUxVF4a
ww0+7jztRl/yMIYOtmAothSDQdfQ/fFRNC6NRN7j4bRJe9XKn+DC1kXnYFzX
hB7+t8ZKaLN+QD63QClc4GtTM7lQCPr9y2dRPhOBbFbzaxFwbY7A7L4E3Lxw
GjfzjJitKkdHTbMOMgL7WCZW63J+bWQEHJnJ6n+if0/6VgvN4B1u5KSPYRhE
KTALKzERFi7n/MfUQqrb41LO21S5FyiO92g/LzFYqRfUwY4f75UDn+FwYIrh
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
qOKQ3QRN0NMvL1JTU5mKfOpI6ANaGHVDCjshhRC99NxF2mKU6cgQvwUXpDB9
ha9WcpcEfr7hX0nqPTqWotT/cWzHGX1V+pUOxrj0j9kt+otMvtBfYxV/uU5d
nwIlRT8VlNouc0H+uqtAXyGlPrkUdF5YCST4TloAPW6WeQzVfpdHv0fWUnSX
u63tZ5D+7y3Sf0deY6DeHpI638d1nkk3EsYg6jxTPnQAlNcryocbFOUjqs4D
8mM5jLWqzCvQnVUDNZlnC+qh2ncV6brcK9BXCehhCdUAcbFn0GO9BTltsCAV
n1edimgE7v6HAm3DdDmC6pZNocyTh4vJIC91DI1h4np3zUb62Wb1lgJ94DuK
KLZdoPGGJI1vaqXYU1zrx+2abiFbEc6nLgjjTLQmW72y/bomvES/+D5Pxcdo
4AU/RXZh+uj8mGYww09jKs7MlelZ9GENmKYJWOfbPqKTx8fojNFP0+s2MbL0
1B2t9MRdedqH6Tm4IUunjRE6v3e74FyiEnf0Jdtqeg89DPVhXAhwvzNJCx1H
6Bcvfkhb68p0FG1eXx6jRulcDcPMf6NZ2NUrDxMNwvnZErKx5ds0jJu9jW+M
Q67V4/FXV3psi9gWhXVs7Qy7sC7Ho7nKF8xLJOxV665gnkNa+vyXmPlaZl6m
YhkKmPkK9wlwnwgmFfa1QD5mxIB9FLU94g3d+D9OvDRCMhL/vry+wejdrup6
/+5KXR/kul6XMoaYdqnrGWOYaVfE2xTuN1Z1NhXkXZXOZgnyVU1/dc8f6OIG
B3WdA8hHOHo4CtzzFwR3flPV/gLjTnfc6qCHf3SG6tG7+AjAZxZlqbVo+xqQ
h8sOIReId9Zs0H3OGP0Svc+xDtDTCyC7F2m8eY7G93uo+HYd0X3CPqo7cs/h
5K0q5RUB/EG1AAT6x77noG3f20Ntjw6Rd32eMscXaAJD70xW3WqhI3MJFV9s
gB57ryyHkYcggDQvATXN0JkDRCff302eHztQ0920DsNx/1tjVNoVpHP7j8v3
lvj71ZbWPPUhHebrmvi+KOGPacEdoslNDjqG1/3Fcq0q4YC+FoTzNdcm3zqY
ca7VBe/YVYzzBamKbYR0NMWrarrdrOnqRggFs5VhgIP5G/WyT1ItAFlTrYac
P6EgT0gPD8TxfQndwcRR2BXhESPiC9+0DLLLvV3NZxD+R1ZN/0NNeNfWEPp3
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\
\>"]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Rotator", "Subsection",
 CellChangeTimes->{{3.523464739616723*^9, 3.523464740720786*^9}}],

Cell["\<\
1. rotator[pList_,n_] 
This performs \[OpenCurlyDoubleQuote]n\[CloseCurlyDoubleQuote] rotations of \
random degree on random vertices of the polygon specified by the list of \
points \[OpenCurlyDoubleQuote]pList\[CloseCurlyDoubleQuote] 
Limitations: 

2. rotatorF[pList_,n_] 
This performs \[OpenCurlyDoubleQuote]n\[CloseCurlyDoubleQuote] rotations of \
random degree on random vertices of the polygon specified by the list of \
points \[OpenCurlyDoubleQuote]pList\[CloseCurlyDoubleQuote] ignoring \
selfintersections, thus this changes the knot type.
Limitations:\
\>", "Text",
 CellChangeTimes->{
  3.5244835099320517`*^9, {3.524483802052012*^9, 3.524483866187385*^9}, {
   3.52468104560214*^9, 3.52468106803911*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"newtestpoly", "=", 
   RowBox[{"rotator", "[", 
    RowBox[{"testpoly", ",", "100"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Graphics3D", "[", 
      RowBox[{"prettyReturn", "[", 
       RowBox[{"testpoly", ",", ".1"}], "]"}], "]"}], ",", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"prettyReturn", "[", 
       RowBox[{"newtestpoly", ",", ".1"}], "]"}], "]"}]}], "}"}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.524483515491577*^9, 3.524483556559473*^9}, {
  3.5244835902098923`*^9, 3.524483601841234*^9}, {3.524483654060493*^9, 
  3.524483673315157*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     Graphics3DBox[{
       CylinderBox[{{0, 0, 0}, {0.2027316099671975, -0.2905715029254452, 
         0.9351299888292302}}, 0.1], 
       CylinderBox[{{0.2027316099671975, -0.2905715029254452, 
        0.9351299888292302}, {-0.5616704411469235, 0.3345915136954332, 
        1.0928027731073293`}}, 0.1], 
       CylinderBox[{{-0.5616704411469235, 0.3345915136954332, 
        1.0928027731073293`}, {0.22232405112195353`, 0.9428118334802961, 
        0.9686227477696574}}, 0.1], 
       CylinderBox[{{0.22232405112195353`, 0.9428118334802961, 
        0.9686227477696574}, {-0.5533803180081543, 1.00416279291412, 
        0.3405154388733104}}, 0.1], 
       CylinderBox[{{-0.5533803180081543, 1.00416279291412, 
        0.3405154388733104}, {-0.18894837887233992`, 0.14064716965803237`, 
        0.6891271571651092}}, 0.1], 
       CylinderBox[{{-0.18894837887233992`, 0.14064716965803237`, 
        0.6891271571651092}, {0.4635916034092878, 0.5626995549337546, 
        0.05979151094207398}}, 0.1], 
       CylinderBox[{{0.4635916034092878, 0.5626995549337546, 
        0.05979151094207398}, {0.728278068249634, 0.3198973531255371, 
        0.9930589785671926}}, 0.1], 
       CylinderBox[{{0.728278068249634, 0.3198973531255371, 
        0.9930589785671926}, {0.3391081312164841, 0.42431717250820095`, 
        0.07783044894756477}}, 0.1], 
       CylinderBox[{{0.3391081312164841, 0.42431717250820095`, 
        0.07783044894756477}, {-0.09633689457309336, 
        1.3190348940667622`, -0.02150649405034974}}, 0.1], 
       CylinderBox[{{-0.09633689457309336, 
        1.3190348940667622`, -0.02150649405034974}, {0.6140716947925511, 
        0.8940766705207293, -0.5825146440768137}}, 0.1], 
       CylinderBox[{{0.6140716947925511, 
        0.8940766705207293, -0.5825146440768137}, {-0.10432738519687473`, 
        0.2588412137379732, -0.8660259777415362}}, 0.1], 
       CylinderBox[{{-0.10432738519687473`, 
        0.2588412137379732, -0.8660259777415362}, {-0.6176062596953688, \
-0.5110123123294431, -0.48672353193459855`}}, 0.1], 
       CylinderBox[{{-0.6176062596953688, -0.5110123123294431, \
-0.48672353193459855`}, {-0.76009058655302, -0.16826973175714507`, 
        0.4418375807890409}}, 0.1], 
       CylinderBox[{{-0.76009058655302, -0.16826973175714507`, 
        0.4418375807890409}, {-1.3333030869235176`, 
        0.4638090457744234, -0.07960642235338677}}, 0.1], 
       CylinderBox[{{-1.3333030869235176`, 
        0.4638090457744234, -0.07960642235338677}, {-0.7063333316306877, 
        0.321441236742225, 0.6863180732069919}}, 0.1], 
       CylinderBox[{{-0.7063333316306877, 0.321441236742225, 
        0.6863180732069919}, {-0.12723721017122647`, 0.06818818456746756, 
        1.461244246254966}}, 0.1], 
       CylinderBox[{{-0.12723721017122647`, 0.06818818456746756, 
        1.461244246254966}, {-0.04596036464780813, -0.8790993312549511, 
        1.151340330905784}}, 0.1], 
       CylinderBox[{{-0.04596036464780813, -0.8790993312549511, 
        1.151340330905784}, {-0.7365552101881101, -1.052115223634055, 
        0.4490980220853672}}, 0.1], 
       CylinderBox[{{-0.7365552101881101, -1.052115223634055, 
        0.4490980220853672}, {-0.9444643085456277, -0.08279030451750868, 
        0.31801404899992586`}}, 0.1], 
       CylinderBox[{{-0.9444643085456277, -0.08279030451750868, 
         0.31801404899992586`}, {0, 0, 0}}, 0.1]}], {192., -189.}, 
     ImageScaled[{0.5, 0.5}], {360., 360.},
     ContentSelectable->True], InsetBox[
     Graphics3DBox[{
       CylinderBox[{{0., 0., 0.}, {-0.779881109342046, 
        0.6254868296529726, -0.02348789522492367}}, 0.1], 
       CylinderBox[{{-0.779881109342046, 
        0.6254868296529726, -0.02348789522492367}, {-0.4764574147149914, 
        0.7225188569226609, -0.9713902357763138}}, 0.1], 
       CylinderBox[{{-0.4764574147149914, 
        0.7225188569226609, -0.9713902357763138}, {0.5107733850399505, 
        0.6932222210347843, -0.8148110061803295}}, 0.1], 
       CylinderBox[{{0.5107733850399505, 
        0.6932222210347843, -0.8148110061803295}, {-0.23163322908323078`, 
        0.4192896066924259, -1.42619741599471}}, 0.1], 
       CylinderBox[{{-0.23163322908323078`, 
        0.4192896066924259, -1.42619741599471}, {0.23503197279829705`, 
        1.2714264237671375`, -1.6630231627763026`}}, 0.1], 
       CylinderBox[{{0.23503197279829705`, 
        1.2714264237671375`, -1.6630231627763026`}, {0.2200266520984467, 
        1.236803438875749, -0.663735371763168}}, 0.1], 
       CylinderBox[{{0.2200266520984467, 
        1.236803438875749, -0.663735371763168}, {-0.6219387981183097, 
        1.3085489585229237`, -0.12899547138929546`}}, 0.1], 
       CylinderBox[{{-0.6219387981183097, 
        1.3085489585229237`, -0.12899547138929546`}, {-0.17553728762425316`, 
        0.7455195848055561, -0.824497891054426}}, 0.1], 
       CylinderBox[{{-0.17553728762425316`, 
        0.7455195848055561, -0.824497891054426}, {-0.15869926659535602`, \
-0.03874083342181275, -1.4447011460037018`}}, 0.1], 
       CylinderBox[{{-0.15869926659535602`, -0.03874083342181275, \
-1.4447011460037018`}, {0.02484668382889669, 
        0.5445462596217417, -0.653444518118877}}, 0.1], 
       CylinderBox[{{0.02484668382889669, 
        0.5445462596217417, -0.653444518118877}, {-0.11313132340883465`, \
-0.025183533235938547`, 0.15672215155412916`}}, 0.1], 
       CylinderBox[{{-0.11313132340883465`, -0.025183533235938547`, 
        0.15672215155412916`}, {0.19994342223726475`, 
        0.37732858298948074`, -0.7034918915365236}}, 0.1], 
       CylinderBox[{{0.19994342223726475`, 
        0.37732858298948074`, -0.7034918915365236}, {
        0.22925346877502692`, -0.058272865174523375`, 0.19617043374412402`}}, 
        0.1], CylinderBox[{{0.22925346877502692`, -0.058272865174523375`, 
        0.19617043374412402`}, {-0.41473753193618984`, -0.2607122124182024, \
-0.541592334149816}}, 0.1], 
       CylinderBox[{{-0.41473753193618984`, -0.2607122124182024, \
-0.541592334149816}, {
        0.5052411435854064, -0.412389230498104, -0.9030246497663394}}, 0.1], 
       CylinderBox[{{
        0.5052411435854064, -0.412389230498104, -0.9030246497663394}, \
{-0.24265828042870888`, -1.0757367502968227`, -0.8781948383241145}}, 0.1], 
       CylinderBox[{{-0.24265828042870888`, -1.0757367502968227`, \
-0.8781948383241145}, {-0.3368624560748455, -0.7361609678626663, 
        0.057654434408983546`}}, 0.1], 
       CylinderBox[{{-0.3368624560748455, -0.7361609678626663, 
        0.057654434408983546`}, {3.447138272148896*^-17, 
        4.4060866229545354`*^-17, -0.5293640619629217}}, 0.1], 
       CylinderBox[{{3.447138272148896*^-17, 
        4.4060866229545354`*^-17, -0.5293640619629217}, {
        0.7771940746930633, -0.5708877234076075, -0.26468203098145854`}}, 
        0.1], CylinderBox[{{
        0.7771940746930633, -0.5708877234076075, -0.26468203098145854`}, {0., 
        0., 0.}}, 0.1]}], {576., -189.}, ImageScaled[{0.5, 0.5}], {360., 360.},
     ContentSelectable->True]}, {}},
  ContentSelectable->True,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.524483605643993*^9, {3.5244836559601717`*^9, 3.5244836749590693`*^9}, {
   3.524681345516931*^9, 3.524681367229225*^9}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJysfQV8VFe+//cPbXe36y7vrcvbfbKDtKWUUij1bruDFJcWG9xdAgSHJLi7
u7sGTwgQHALEQ5QYxBNI7v975N6ZhJM07Hvz4UzCzdx7z/3p9yfnzOedh/bs
3q/z0F5dO//uo8GdB/bs1XXI7z4cMJiHav4/4P/1BHDidxC/W/xVv1n8Z/US
b+LI//3vfcSPGvB4PLuc3/6h/tTLOYCa8oj4TfzcbvqDGJ+qE+WnaoojNZ1P
bjEc0x/v5hx4RR6o6dxI/NxY5V8/UZfo4nzom4YPra/w15ecv+pPfKyu8qUz
x1fNn1v9dR/QF+ro3PC78sDL5T5nT2tFtT71kbpkO+fW36/iw0srfKpmuU/V
MBx7X12+jTOXH1XzxAUvfIa+VSvnxJ9U88S5zlOZzqhpOPaeulUL58SfVfPE
Wc7kfm7460uGY03UrZo5J/6ymicGVHnGy4Zj76pbuZ0T/62at5ru0MF0RhW3
+sw58dfVPHGKM7nfGP5aUYXFaKxu9alz4u+qeaK/MznTGd8wHGukbvWRc+If
qnmr8c7k/vhit/rAOfHP1TxxjDM50xkVzZsY76hbvefc6j+qeeJI54y/Gv76
LcOxhupWjZ05/q2atxrmnPGfL3ard5w5/k81bzW4yjNeNRx7W92qgTNHVzVv
NdC5lemMbxuONVC3qu+cWKea5OjrTK72i92qnnOr16pJjl5VnvEdw7G31K1e
c+b4RjVv5anyjO8ajtVXt6rjzLF+NcnRtcozvmc49qa6VS3nxAbVJIcXR5jO
qOJW/+Oc2LCat/IijXcMfzWBgHrqVv/lnNi4mpRvV+UZPzAcUzzFX52nalJN
crSq8owqbvUXZ44fVPNWX1R5xg8Nx15Xt/qTc+JH1aR8U+epTGeYUJTSP/ze
OfGTat5q2Yvd4LfOs3xWTXp/7pzxqeGvPzYcq6tu9WvnxH9Wk94Vp+RxYH/5
z5mwobKu+JVDwKYvdNNK8H2172sCds2qyRoVhFUVE5T//E8Nx5SrwC8cmreo
JrNMTK0c0pc/ZoLatf4vJ2LC7aaJmCiiJ/JzM3ubV5O9JvEz4e73qkkel++s
zCw3iY3pAU2iYUK0JsNqCnn+7ju1rxcIk1JXd5omNPyu4dgvDMf+p/JpmsTl
82oy5kPDMRMQNHnEF5ymSX5M1th0rsl1mUBkI8Mxk43678qnaYr5TNM0UdM0
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
mOSiaYVj4qfbeVxTuFzD0SAaj0fEI1kE+4Vx6iHkBLOf1Pv6Cf6PcxPTtJo5
f21m+KspoeRTH6gpp3E7M0v+4U0ze/Q0TLGVKXD1Tqi54a+mnMs31BlqQjfS
/38rZ8wLQRTE8VXIKSQkIiIiITkJiYIEiThB5EShI1FpVBQqlUaj02hUKo1K
o1L5Rr4EO7P57Tm/lSsUl9u8mf+b2bn3dmf+7937RNDPk/YExR4gRv/ErxZN
xyI1Au0A/ytTqzSYgaOM5nfTKXrWrb1tq0ljlJ11cYipM5Eam93l7qt7sels
+8Ei645ReS5SW77Yw7nqpJt1wmEGdlC/EKmtfW2DyNjogol5tgXwCpfMwCZ6
OaxzPtTvwj71DUJ0LVKjw9dAZDGpdLWtV9Rnutw0jqKfbSsgsswtbPde40GV
AbwVqXFYyyCy/ik6hM0MLBGEO/Ss20W6zepRuUEjhRYA3ovUkrU2iHzGKX9m
SdA8wAeRWpI8ByInfQ/rZJ7NEqxHkVoBNQMip4fyDFZkTOPZEy6ZgSn0Omlg
H3XrdhL1Z5FayjcBYjcNGOtpSdU4t/4yIGIMU0lQa8Vo2c4owNcBEfVmyqww
8n0QYTP1EdTf/tRroZcJ/i+yoPweJjDvTdLoIjOcLK/zOOD6PwHlJ9o+yqZW
eXWS6uHI5f9eF0Nfm44yzA==\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"newlattice82knot", "=", 
   RowBox[{"rotator", "[", 
    RowBox[{"lattice82knot", ",", "100"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "[", "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Graphics3D", "[", 
      RowBox[{"prettyReturn", "[", 
       RowBox[{"lattice82knot", ",", ".1"}], "]"}], "]"}], ",", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"prettyReturn", "[", 
       RowBox[{"newlattice82knot", ",", ".1"}], "]"}], "]"}]}], "}"}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.525352102734645*^9, 3.5253521939928646`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Power", "::", "\<\"infy\"\>"}], ":", 
  " ", "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"Infinite expression \\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(1\\/0\\), \\\"MT\\\"]\\)\
\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" encountered.\\\\\\\"\\\", \
\\\"MT\\\"]\\) \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5253521953379416`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Infinity]", "::", "\<\"indet\"\>"}], ":", 
  " ", "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"Indeterminate expression \\\\\\\"\\\
\", \\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(0\\\\ ComplexInfinity\\), \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" encountered.\\\\\\\"\\\
\", \\\"MT\\\"]\\) \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\
\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.525352195342942*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"LinearFractionalTransform", "::", "\<\"inpf\"\>"}], ":", 
  " ", "\<\"\[NoBreak]\\!\\(\\*StyleBox[\\!\\({\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)}\\), \\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\
\" is not a matrix or a list containing a matrix, two vectors, and a \
scalar.\\\\\\\"\\\", \\\"MT\\\"]\\) \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/LinearFractionalTransform\\\", ButtonNote -> \
\\\"LinearFractionalTransform::inpf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.525352195518952*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Part", "::", "\<\"partw\"\>"}], ":", 
  " ", "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"Part \\\\\\\"\\\", \\\"MT\\\"]\\)\
\[NoBreak]\\!\\(\\*StyleBox[\\!\\(30\\), \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" of \\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(\\(\\(TransformationFunction[\
\\(\\((\\*TagBox[GridBox[{{\\\"1\\\", \\\"0\\\", \\\"0\\\", \\\"Indeterminate\
\\\"}, {\\\"0\\\", \\\"1\\\", \\\"0\\\", \\\"Indeterminate\\\"}, {\\\"0\\\", \
\\\"0\\\", \\\"1\\\", \\\"Indeterminate\\\"}, {\\\"0\\\", \\\"0\\\", \
\\\"0\\\", \\\"1\\\"}}, AutoDelete -> False, GridBoxDividers -> \
{\\\"Columns\\\" -> {{False}}, \\\"ColumnsIndexed\\\" -> {-2 -> True}, \
\\\"Rows\\\" -> {{False}}, \\\"RowsIndexed\\\" -> {-2 -> True}}, \
GridBoxItemSize -> {\\\"Columns\\\" -> {{Automatic}}, \\\"Rows\\\" -> \
{{Automatic}}}], \
Function[Slot[1]]])\\)\\)]\\)\\)[\\(\\({\\(\\({Indeterminate, Indeterminate, \
Indeterminate}\\)\\), \\(\\({Indeterminate, Indeterminate, \
Indeterminate}\\)\\), \\(\\({Indeterminate, Indeterminate, \
Indeterminate}\\)\\), \\(\\(\[LeftSkeleton] 45 \[RightSkeleton]\\)\\), \
\\(\\({Indeterminate, Indeterminate, Indeterminate}\\)\\), \
\\(\\({Indeterminate, Indeterminate, Indeterminate}\\)\\), \\(\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)}\\)\\)]\\), \\\"MT\\\"]\\)\[NoBreak]\
\\!\\(\\*StyleBox[\\\"\\\\\\\" does not exist.\\\\\\\"\\\", \\\"MT\\\"]\\) \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.525352195548954*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"RotateLeft", "::", "\<\"normal\"\>"}], ":", 
  " ", "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"Nonatomic expression expected at \
position \\\\\\\"\\\", \\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(1\\), \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" in \\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(RotateLeft[4]\\), \\\"MT\\\"]\
\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\".\\\\\\\"\\\", \\\"MT\\\"]\\) \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/normal\\\", \
ButtonNote -> \\\"RotateLeft::normal\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5253521956159573`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"newtestpoly", "=", 
   RowBox[{"rotatorF", "[", 
    RowBox[{"testpoly", ",", "100"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Graphics3D", "[", 
      RowBox[{"prettyReturn", "[", 
       RowBox[{"testpoly", ",", ".1"}], "]"}], "]"}], ",", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"prettyReturn", "[", 
       RowBox[{"newtestpoly", ",", ".1"}], "]"}], "]"}]}], "}"}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.524483515491577*^9, 3.524483556559473*^9}, {
   3.5244835902098923`*^9, 3.524483601841234*^9}, {3.524483654060493*^9, 
   3.524483673315157*^9}, 3.5244837474136877`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     Graphics3DBox[{
       CylinderBox[{{0, 0, 0}, {0.2027316099671975, -0.2905715029254452, 
         0.9351299888292302}}, 0.1], 
       CylinderBox[{{0.2027316099671975, -0.2905715029254452, 
        0.9351299888292302}, {-0.5616704411469235, 0.3345915136954332, 
        1.0928027731073293`}}, 0.1], 
       CylinderBox[{{-0.5616704411469235, 0.3345915136954332, 
        1.0928027731073293`}, {0.22232405112195353`, 0.9428118334802961, 
        0.9686227477696574}}, 0.1], 
       CylinderBox[{{0.22232405112195353`, 0.9428118334802961, 
        0.9686227477696574}, {-0.5533803180081543, 1.00416279291412, 
        0.3405154388733104}}, 0.1], 
       CylinderBox[{{-0.5533803180081543, 1.00416279291412, 
        0.3405154388733104}, {-0.18894837887233992`, 0.14064716965803237`, 
        0.6891271571651092}}, 0.1], 
       CylinderBox[{{-0.18894837887233992`, 0.14064716965803237`, 
        0.6891271571651092}, {0.4635916034092878, 0.5626995549337546, 
        0.05979151094207398}}, 0.1], 
       CylinderBox[{{0.4635916034092878, 0.5626995549337546, 
        0.05979151094207398}, {0.728278068249634, 0.3198973531255371, 
        0.9930589785671926}}, 0.1], 
       CylinderBox[{{0.728278068249634, 0.3198973531255371, 
        0.9930589785671926}, {0.3391081312164841, 0.42431717250820095`, 
        0.07783044894756477}}, 0.1], 
       CylinderBox[{{0.3391081312164841, 0.42431717250820095`, 
        0.07783044894756477}, {-0.09633689457309336, 
        1.3190348940667622`, -0.02150649405034974}}, 0.1], 
       CylinderBox[{{-0.09633689457309336, 
        1.3190348940667622`, -0.02150649405034974}, {0.6140716947925511, 
        0.8940766705207293, -0.5825146440768137}}, 0.1], 
       CylinderBox[{{0.6140716947925511, 
        0.8940766705207293, -0.5825146440768137}, {-0.10432738519687473`, 
        0.2588412137379732, -0.8660259777415362}}, 0.1], 
       CylinderBox[{{-0.10432738519687473`, 
        0.2588412137379732, -0.8660259777415362}, {-0.6176062596953688, \
-0.5110123123294431, -0.48672353193459855`}}, 0.1], 
       CylinderBox[{{-0.6176062596953688, -0.5110123123294431, \
-0.48672353193459855`}, {-0.76009058655302, -0.16826973175714507`, 
        0.4418375807890409}}, 0.1], 
       CylinderBox[{{-0.76009058655302, -0.16826973175714507`, 
        0.4418375807890409}, {-1.3333030869235176`, 
        0.4638090457744234, -0.07960642235338677}}, 0.1], 
       CylinderBox[{{-1.3333030869235176`, 
        0.4638090457744234, -0.07960642235338677}, {-0.7063333316306877, 
        0.321441236742225, 0.6863180732069919}}, 0.1], 
       CylinderBox[{{-0.7063333316306877, 0.321441236742225, 
        0.6863180732069919}, {-0.12723721017122647`, 0.06818818456746756, 
        1.461244246254966}}, 0.1], 
       CylinderBox[{{-0.12723721017122647`, 0.06818818456746756, 
        1.461244246254966}, {-0.04596036464780813, -0.8790993312549511, 
        1.151340330905784}}, 0.1], 
       CylinderBox[{{-0.04596036464780813, -0.8790993312549511, 
        1.151340330905784}, {-0.7365552101881101, -1.052115223634055, 
        0.4490980220853672}}, 0.1], 
       CylinderBox[{{-0.7365552101881101, -1.052115223634055, 
        0.4490980220853672}, {-0.9444643085456277, -0.08279030451750868, 
        0.31801404899992586`}}, 0.1], 
       CylinderBox[{{-0.9444643085456277, -0.08279030451750868, 
         0.31801404899992586`}, {0, 0, 0}}, 0.1]}], {192., -189.}, 
     ImageScaled[{0.5, 0.5}], {360., 360.},
     ContentSelectable->True], InsetBox[
     Graphics3DBox[{
       CylinderBox[{{-0.5337417159956881, -0.684189837202064, 
        1.0093037788406338`}, {0.02499155987595114, 0.14405781182598876`, 
        0.9666076629370645}}, 0.1], 
       CylinderBox[{{0.02499155987595114, 0.14405781182598876`, 
        0.9666076629370645}, {-0.6700772286554514, -0.5675016103555842, 
        1.0693820172970794`}}, 0.1], 
       CylinderBox[{{-0.6700772286554514, -0.5675016103555842, 
        1.0693820172970794`}, {-0.007263138001804892, -0.1147934370504764, 
        0.4729486253296867}}, 0.1], 
       CylinderBox[{{-0.007263138001804892, -0.1147934370504764, 
        0.4729486253296867}, {0.1865622853622496, 0.4574975118939743, 
        1.2697640211485683`}}, 0.1], 
       CylinderBox[{{0.1865622853622496, 0.4574975118939743, 
        1.2697640211485683`}, {-0.034437424071147804`, -0.40840412636387957`, 
        0.8210174542617372}}, 0.1], 
       CylinderBox[{{-0.034437424071147804`, -0.40840412636387957`, 
        0.8210174542617372}, {0.542303861798625, 0.1976046915961187, 
        1.3688521024248543`}}, 0.1], 
       CylinderBox[{{0.542303861798625, 0.1976046915961187, 
        1.3688521024248543`}, {-0.4274560855368301, 0.4031971889785195, 
        1.2373326378426028`}}, 0.1], 
       CylinderBox[{{-0.4274560855368301, 0.4031971889785195, 
        1.2373326378426028`}, {-0.38581792934484516`, 0.6155634578374356, 
        0.2610300045367837}}, 0.1], 
       CylinderBox[{{-0.38581792934484516`, 0.6155634578374356, 
        0.2610300045367837}, {0.16375936617485093`, 1.0062138200651198`, 
        0.9995129703123236}}, 0.1], 
       CylinderBox[{{0.16375936617485093`, 1.0062138200651198`, 
        0.9995129703123236}, {-0.4620527128815046, 1.2273551928767974`, 
        0.25154523375002175`}}, 0.1], 
       CylinderBox[{{-0.4620527128815046, 1.2273551928767974`, 
        0.25154523375002175`}, {0.43110565454319627`, 0.7832438284454567, 
        0.32249047095573435`}}, 0.1], 
       CylinderBox[{{0.43110565454319627`, 0.7832438284454567, 
        0.32249047095573435`}, {0.43070613342024155`, 
        0.23551412433715013`, -0.5141647815947401}}, 0.1], 
       CylinderBox[{{0.43070613342024155`, 
        0.23551412433715013`, -0.5141647815947401}, {-0.49014994656677474`, 
        0.49963985442621306`, -0.22735181351995915`}}, 0.1], 
       CylinderBox[{{-0.49014994656677474`, 
        0.49963985442621306`, -0.22735181351995915`}, {-1.1368625141099113`, \
-0.26286589588762255`, -0.2087014590970644}}, 0.1], 
       CylinderBox[{{-1.1368625141099113`, -0.26286589588762255`, \
-0.2087014590970644}, {-0.5577772111243788, -0.18775063308533008`, 
        0.6030977212180535}}, 0.1], 
       CylinderBox[{{-0.5577772111243788, -0.18775063308533008`, 
        0.6030977212180535}, {-0.585374660423884, 
        0.29958045429587016`, -0.26968334644096403`}}, 0.1], 
       CylinderBox[{{-0.585374660423884, 
        0.29958045429587016`, -0.26968334644096403`}, {-0.9220993902529907, 
        1.228666645809175, -0.4227039498276212}}, 0.1], 
       CylinderBox[{{-0.9220993902529907, 
        1.228666645809175, -0.4227039498276212}, {-0.7927023269642821, 
        0.933768550163322, 0.5240227864573059}}, 0.1], 
       CylinderBox[{{-0.7927023269642821, 0.933768550163322, 
        0.5240227864573059}, {-0.3003605995372096, 0.28368906758059714`, 
        1.1028114264279802`}}, 0.1], 
       CylinderBox[{{-0.3003605995372096, 0.28368906758059714`, 
        1.1028114264279802`}, {-0.5337417159956881, -0.684189837202064, 
        1.0093037788406338`}}, 0.1]}], {576., -189.}, 
     ImageScaled[{0.5, 0.5}], {360., 360.},
     ContentSelectable->True]}, {}},
  ContentSelectable->True,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.524483790399737*^9, 3.524681375031804*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reducer", "Subsection",
 CellChangeTimes->{{3.523464739616723*^9, 3.523464740720786*^9}, {
  3.524681412425008*^9, 3.5246814134222*^9}}],

Cell["\<\
1. reduce[lst_]
This function tries to reduce a polygon by picking a random vertex v.  v and \
its two neighbors x and y form a triangle. If no other edges of the polygon \
intersect the triangle xyv then the edges xv and yv can be replaced by a \
single egde xy. If there is an intersection then it might be possible to make \
the edges xv and yv shorter. 

The code works as follows

if fullReduce=False:
\ta) each iteration we cycle through all vertices in a random order
\tb) for each vertex randomly decide if we want to attempt to remove the vertex
\tc) if yes : if we can we do if we can't we skip said vertex
\t    if no : randomly pick an amount to reduce between 0.2 and 0.8 of \
complete colinearity and see if such a \t\treduction is possible
\td) if the number of vertices isn't lowered for 8 consecutive iterations or \
the segment number drops below 6 \t\twe stop and return
if fullReduce=True same except change the c) if no : reduce to 0.9 of the \
maximum possible move towards colinearity
\t    
Limitations:
Repeated use of the reudce can create polygon that are extremly tight with \
almost intersection.

2. ReduceFile[name_]
Same as reduce except assumes the polygon resides in a file
\
\>", "Text",
 CellChangeTimes->{
  3.5244839571148252`*^9, {3.524488664161545*^9, 3.524488672686646*^9}, {
   3.524488736065835*^9, 3.524488769073357*^9}, {3.52448894822047*^9, 
   3.5244889543233967`*^9}, {3.524774927856545*^9, 3.52477507187929*^9}, {
   3.524775154824936*^9, 3.524775201321104*^9}, {3.524775249146497*^9, 
   3.5247754655418377`*^9}, {3.524775500222598*^9, 3.5247755353348513`*^9}, {
   3.524882215898306*^9, 3.5248826147291183`*^9}, {3.524883016022071*^9, 
   3.5248830391213923`*^9}, {3.524883152851897*^9, 3.5248831982914963`*^9}, {
   3.5248833333692217`*^9, 3.5248833640279756`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"newtestpoly", "=", 
   RowBox[{"reduce", "[", "testpoly", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newtestpoly2", "=", 
   RowBox[{"reduce", "[", 
    RowBox[{"reduce", "[", "testpoly", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Graphics3D", "[", 
      RowBox[{"prettyReturn", "[", 
       RowBox[{"testpoly", ",", ".1"}], "]"}], "]"}], ",", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"prettyReturn", "[", 
       RowBox[{"newtestpoly", ",", ".1"}], "]"}], "]"}], ",", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"prettyReturn", "[", 
       RowBox[{"newtestpoly2", ",", ".1"}], "]"}], "]"}]}], "}"}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.524483515491577*^9, 3.524483556559473*^9}, {
  3.5244835902098923`*^9, 3.524483601841234*^9}, {3.524483654060493*^9, 
  3.524483673315157*^9}, {3.524484938537755*^9, 3.5244849393057623`*^9}, {
  3.524484980634453*^9, 3.5244850045139713`*^9}, {3.524485101452581*^9, 
  3.524485124110243*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     Graphics3DBox[{
       CylinderBox[{{0, 0, 0}, {0.2027316099671975, -0.2905715029254452, 
         0.9351299888292302}}, 0.1], 
       CylinderBox[{{0.2027316099671975, -0.2905715029254452, 
        0.9351299888292302}, {-0.5616704411469235, 0.3345915136954332, 
        1.0928027731073293`}}, 0.1], 
       CylinderBox[{{-0.5616704411469235, 0.3345915136954332, 
        1.0928027731073293`}, {0.22232405112195353`, 0.9428118334802961, 
        0.9686227477696574}}, 0.1], 
       CylinderBox[{{0.22232405112195353`, 0.9428118334802961, 
        0.9686227477696574}, {-0.5533803180081543, 1.00416279291412, 
        0.3405154388733104}}, 0.1], 
       CylinderBox[{{-0.5533803180081543, 1.00416279291412, 
        0.3405154388733104}, {-0.18894837887233992`, 0.14064716965803237`, 
        0.6891271571651092}}, 0.1], 
       CylinderBox[{{-0.18894837887233992`, 0.14064716965803237`, 
        0.6891271571651092}, {0.4635916034092878, 0.5626995549337546, 
        0.05979151094207398}}, 0.1], 
       CylinderBox[{{0.4635916034092878, 0.5626995549337546, 
        0.05979151094207398}, {0.728278068249634, 0.3198973531255371, 
        0.9930589785671926}}, 0.1], 
       CylinderBox[{{0.728278068249634, 0.3198973531255371, 
        0.9930589785671926}, {0.3391081312164841, 0.42431717250820095`, 
        0.07783044894756477}}, 0.1], 
       CylinderBox[{{0.3391081312164841, 0.42431717250820095`, 
        0.07783044894756477}, {-0.09633689457309336, 
        1.3190348940667622`, -0.02150649405034974}}, 0.1], 
       CylinderBox[{{-0.09633689457309336, 
        1.3190348940667622`, -0.02150649405034974}, {0.6140716947925511, 
        0.8940766705207293, -0.5825146440768137}}, 0.1], 
       CylinderBox[{{0.6140716947925511, 
        0.8940766705207293, -0.5825146440768137}, {-0.10432738519687473`, 
        0.2588412137379732, -0.8660259777415362}}, 0.1], 
       CylinderBox[{{-0.10432738519687473`, 
        0.2588412137379732, -0.8660259777415362}, {-0.6176062596953688, \
-0.5110123123294431, -0.48672353193459855`}}, 0.1], 
       CylinderBox[{{-0.6176062596953688, -0.5110123123294431, \
-0.48672353193459855`}, {-0.76009058655302, -0.16826973175714507`, 
        0.4418375807890409}}, 0.1], 
       CylinderBox[{{-0.76009058655302, -0.16826973175714507`, 
        0.4418375807890409}, {-1.3333030869235176`, 
        0.4638090457744234, -0.07960642235338677}}, 0.1], 
       CylinderBox[{{-1.3333030869235176`, 
        0.4638090457744234, -0.07960642235338677}, {-0.7063333316306877, 
        0.321441236742225, 0.6863180732069919}}, 0.1], 
       CylinderBox[{{-0.7063333316306877, 0.321441236742225, 
        0.6863180732069919}, {-0.12723721017122647`, 0.06818818456746756, 
        1.461244246254966}}, 0.1], 
       CylinderBox[{{-0.12723721017122647`, 0.06818818456746756, 
        1.461244246254966}, {-0.04596036464780813, -0.8790993312549511, 
        1.151340330905784}}, 0.1], 
       CylinderBox[{{-0.04596036464780813, -0.8790993312549511, 
        1.151340330905784}, {-0.7365552101881101, -1.052115223634055, 
        0.4490980220853672}}, 0.1], 
       CylinderBox[{{-0.7365552101881101, -1.052115223634055, 
        0.4490980220853672}, {-0.9444643085456277, -0.08279030451750868, 
        0.31801404899992586`}}, 0.1], 
       CylinderBox[{{-0.9444643085456277, -0.08279030451750868, 
         0.31801404899992586`}, {0, 0, 0}}, 0.1]},
      AutomaticImageSize->True,
      ImageSize->{102.9042931476628, 97.72828633156735},
      ViewPoint->{1.6762384020043013`, -2.7099178723590573`, 
       1.1386702528454078`},
      ViewVertical->{0.1262766382372631, -0.2674845450398172, 
       0.9731411184736889}], {193.5, -189.}, ImageScaled[{0.5, 0.5}], {360., 360.},
     ContentSelectable->True], InsetBox[
     Graphics3DBox[{
       CylinderBox[{{0, 0, 0}, {0.3391081312164841, 0.42431717250820095`, 
         0.07783044894756477}}, 0.1], 
       CylinderBox[{{0.3391081312164841, 0.42431717250820095`, 
        0.07783044894756477}, {-0.3918752481515575, -0.08108702531900787, \
-0.09836109926283992}}, 0.1], 
       CylinderBox[{{-0.3918752481515575, -0.08108702531900787, \
-0.09836109926283992}, {-0.9444643085456277, -0.08279030451750868, 
        0.31801404899992586`}}, 0.1], 
       CylinderBox[{{-0.9444643085456277, -0.08279030451750868, 
         0.31801404899992586`}, {0, 0, 0}}, 0.1]},
      AutomaticImageSize->True,
      ImageSize->{104.240928739572, 113.96676689027463`},
      ViewPoint->{1.3417681716125234`, 2.117929833333408, 2.272450526353414},
      ViewVertical->{-0.33549767259426827`, 1.8850344942579127`, 
       0.5271709798311476}], {580.5, -189.}, ImageScaled[{0.5, 0.5}], {360., 360.},
     ContentSelectable->True], InsetBox[
     Graphics3DBox[{
       CylinderBox[{{-0.15863794414123017`, 0.862258200865085, 
        0.5349379168457603}, {0.08921337819122828, 0.6868011353971839, 
        0.30523925136489416`}}, 0.1], 
       CylinderBox[{{0.08921337819122828, 0.6868011353971839, 
        0.30523925136489416`}, {0.26648070405206614`, 0.4341054270337419, 
        0.019021641726845152`}}, 0.1], 
       CylinderBox[{{0.26648070405206614`, 0.4341054270337419, 
        0.019021641726845152`}, {-0.12723721017122647`, 0.06818818456746756, 
        1.461244246254966}}, 0.1], 
       CylinderBox[{{-0.12723721017122647`, 0.06818818456746756, 
        1.461244246254966}, {-0.15863794414123017`, 0.862258200865085, 
        0.5349379168457603}}, 0.1]},
      AutomaticImageSize->True,
      ImageSize->{146.87424640404868`, 201.64944644259108`},
      ViewPoint->{-1.3649698898871478`, -2.066413709628032, 2.305816900875432},
      ViewVertical->{-0.6162953379441594, 0.38861706030781507`, 
       0.939779428361862}], {967.5, -189.}, ImageScaled[{0.5, 0.5}], {360., 360.},
     ContentSelectable->True]}, {}},
  ContentSelectable->True,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.524484940471179*^9, 3.524484981560882*^9, 
  3.5244851266243763`*^9, 3.52448872323106*^9, 3.5247748699111*^9, 
  3.524774908900442*^9, 3.5248803180467553`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Path Calculations", "Subsection",
 CellChangeTimes->{{3.5234655364432993`*^9, 3.523465539016446*^9}}],

Cell[TextData[{
 "1. acn[lst_] calculates the acn of a polygon using the projection into the \
x-y plane based on the Gauss integral formula.\nLimitations: Problems are \
very likely if there are very tight almost intersections.\nReturns: \
{a,b,c,d,e}\na = acn computed\nb = acn computed where in the sum the the \
cases where convergence gives problems are omitted\nc,d and e are flags \
indicating various problems\nc = the number of times the integral did not \
converge that is even after increase in presicion NIntegrate still gives a \
warning about convergence\nd = minimum value of the acn of a pair of edges \
where slow convergence happened (the default value of this is one)\ne= the \
number of times happens the acn of a pair of edges was greater than one, \
default is zero.\[LineSeparator]\n2. wri[lst_] calculates the acn of a \
polygon using the projection into the x-y plane based on the Gauss integral \
formula.\nLimitations: Problems could arise if there are very tight almost \
intersections.\nReturns: {a,b,c,d,e}\na = acn computed\nb = acn computed \
where in the sum the the cases where convergence gives problems are omitted\n\
c,d and e are flags indicating various problems\nc = the number of times the \
integral did not converge that is even after increase in presicion NIntegrate \
still gives a warning about convergence\nd = minimum value of the acn of a \
pair of edges where slow convergence happened (the default value of this is \
one)\ne= the number of times happens the acn of a pair of edges was greater \
than one, default is zero.\n\n3. curv[lst_] returns the total curvature of a \
polygon\nLimitations: None\n\n4. tors[lst_] returns the total torsion of a \
polygon\nLimitations: None\n\n5. pathDist[lst_] returns the spacial distance \
from ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "1"], TraditionalForm]]],
 " to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "mid"], TraditionalForm]]],
 " of a polygon where the middle is the floor of the length/2 \n\n6. \
meanpathDist[lst_] returns the spacial distance from ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", "i"], TraditionalForm]]],
 " to ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", 
    RowBox[{"i", "+", "mid"}]], TraditionalForm]]],
 " of a polygon where the middle is the floor of the length/2 \n\n7. \
radgyr[lst_] computes the radius of gyration of the polygon lst.\n\n8. \
allCalc[lst_] returns the combined output of 1 through 7 as list of seven \
elements for a polygon.\n\n9. allCalcFileCount[name_,count_]\n\n10. \
allCalcFile[name_]\n\n11. allCalcFileStartStop[name_,start_,stop_]"
}], "Text",
 CellChangeTimes->{{3.5244825271812763`*^9, 3.5244825988056602`*^9}, {
   3.524482639736308*^9, 3.524482681663003*^9}, 3.5244827180399027`*^9, {
   3.52448275009723*^9, 3.524482803297312*^9}, {3.5244828608290033`*^9, 
   3.524482935873302*^9}, {3.524482992847395*^9, 3.524483039101186*^9}, {
   3.5244830739607162`*^9, 3.524483128690362*^9}, {3.524489472097065*^9, 
   3.524489622559588*^9}, {3.524489671026125*^9, 3.5244898443747473`*^9}, {
   3.5244898770379343`*^9, 3.5244899495644283`*^9}, {3.524490003005577*^9, 
   3.524490035086286*^9}, {3.524505515314212*^9, 3.5245057229373407`*^9}, {
   3.524684890927943*^9, 3.524684912083995*^9}, {3.5246880021582413`*^9, 
   3.524688013144998*^9}, {3.524688054955429*^9, 3.524688075801449*^9}, {
   3.524688157509454*^9, 3.524688180324127*^9}, {3.524882171694778*^9, 
   3.5248821762930408`*^9}, {3.525048122753188*^9, 3.525048174594201*^9}, {
   3.5250487002150497`*^9, 3.525048702287486*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Directory", "[", "]"}]], "Input",
 CellChangeTimes->{{3.525048178161022*^9, 3.525048191761073*^9}, 
   3.525048227095769*^9}],

Cell[BoxData["\<\"/Users/clausernst\"\>"], "Output",
 CellChangeTimes->{3.5250482277508507`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"acn", "[", "testpoly", "]"}]], "Input",
 CellChangeTimes->{{3.524482623026351*^9, 3.5244826278713293`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "13.493210927623872`", ",", "13.493210927623872`", ",", "0", ",", "1", ",", 
   "0"}], "}"}]], "Output",
 CellChangeTimes->{3.524482633952281*^9, 3.524684633874407*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wri", "[", "testpoly", "]"}]], "Input",
 CellChangeTimes->{{3.524482623026351*^9, 3.5244826278713293`*^9}, {
   3.524482688937738*^9, 3.524482689160245*^9}, 3.524482721573544*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.1892512101094337`"}], ",", 
   RowBox[{"-", "1.1892512101094337`"}], ",", "0", ",", "1", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.524482728184906*^9, 3.52468464266775*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"curv", "[", "testpoly", "]"}]], "Input",
 CellChangeTimes->{{3.524482777387104*^9, 3.5244827787456703`*^9}}],

Cell[BoxData[
 RowBox[{"{", "32.43493585116606`", "}"}]], "Output",
 CellChangeTimes->{3.524482779409725*^9, 3.524684645007863*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tors", "[", "testpoly", "]"}]], "Input",
 CellChangeTimes->{{3.524482777387104*^9, 3.5244827787456703`*^9}, {
  3.524482811467969*^9, 3.5244828120583687`*^9}}],

Cell[BoxData[
 RowBox[{"{", "20.97283153706653`", "}"}]], "Output",
 CellChangeTimes->{3.524482812789433*^9, 3.5246846478475723`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pathDist", "[", "testpoly", "]"}]], "Input",
 CellChangeTimes->{{3.524482777387104*^9, 3.5244827787456703`*^9}, {
  3.524482832804496*^9, 3.524482852411055*^9}}],

Cell[BoxData[
 RowBox[{"{", "1.3227230920748454`", "}"}]], "Output",
 CellChangeTimes->{3.5244828530715723`*^9, 3.524684653787922*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"meanpathDist", "[", "testpoly", "]"}]], "Input",
 CellChangeTimes->{{3.524482777387104*^9, 3.5244827787456703`*^9}, {
  3.524482832804496*^9, 3.524482852411055*^9}, {3.524508031749531*^9, 
  3.5245080323396063`*^9}}],

Cell[BoxData[
 RowBox[{"{", "1.466384722300377`", "}"}]], "Output",
 CellChangeTimes->{3.524508033379326*^9, 3.524508095510641*^9, 
  3.5246847883206873`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"radgyr", "[", "testpoly", "]"}]], "Input",
 CellChangeTimes->{{3.524687500274725*^9, 3.524687518081462*^9}, {
  3.524687651007245*^9, 3.524687670376863*^9}, {3.524688034413412*^9, 
  3.524688037611219*^9}}],

Cell[BoxData[
 RowBox[{"{", "1.0061235860237505`", "}"}]], "Output",
 CellChangeTimes->{
  3.524687519429541*^9, {3.524687572740652*^9, 3.524687585291812*^9}, 
   3.524687632276257*^9, {3.5246876715718203`*^9, 3.524687691000985*^9}, 
   3.524687769310773*^9, {3.524687849133554*^9, 3.524687861898015*^9}, 
   3.524687945391294*^9, 3.524688039212503*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"allCalc", "[", "testpoly", "]"}]], "Input",
 CellChangeTimes->{3.524482968022897*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "13.493210927623872`", ",", "13.493210927623872`", ",", "0", ",", "1", 
     ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.1892512101094337`"}], ",", 
     RowBox[{"-", "1.1892512101094337`"}], ",", "0", ",", "1", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", "32.43493585116606`", "}"}], ",", 
   RowBox[{"{", "20.97283153706653`", "}"}], ",", 
   RowBox[{"{", "1.3227230920748454`", "}"}], ",", 
   RowBox[{"{", "1.466384722300377`", "}"}], ",", 
   RowBox[{"{", "1.0061235860237505`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.524482979864049*^9, 3.524688140244656*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Dowker", "Subsection",
 CellChangeTimes->{{3.5234655364432993`*^9, 3.523465539016446*^9}, {
  3.5246894070421057`*^9, 3.5246894084794703`*^9}}],

Cell["\<\
1. getD[v_]
For a polygon this give the Dowkercode of a projection of the polygon into \
the x-y plane. 
Limitations: Dowker is not reduced by RM1 and RMII moves. There could be \
problems if polygon has very tight almost intersections or projection is not \
regular.
Limitation: If edges are two tight then it might fail!

2. reduceD[v_, r1_,r2_]
Reduces Dowker code by RMI and RMII moves, r1 and r2 are booleans that \
specify if to attempt r1 and r2 moves

3. nicerD[v_, n_]
Makes n tries to first randomly project the polygon given by the list v into \
a plane, then to get the DT code and then to reduce it by RMI and RMII moves. \
It will return the shortest DT code that is found. If it returns the empty \
set then the polygon reduced to the unknot.

4. completedt[lst_]
From a abriviated DTcode of pairs generates the complete unabreviated dowker \
code of pairs. Negative signs are always given to even number in a pair.

5. shortdt[lst_]
From a unabriviated DTcode generates the abreviated dowker code. Assumes that \
the negative sign goes with the even number in a pair.

6. decomposedt[v_]
Given unabriviated DTcode v this returns a list of DT codes that are the \
diagrammatically prime summands of the original, this is returned as a list \
of DTcodes.
\
\>", "Text",
 CellChangeTimes->{{3.524689523323082*^9, 3.524689619945796*^9}, {
  3.524689974582696*^9, 3.524690018135051*^9}, {3.524690053114902*^9, 
  3.5246901787688026`*^9}, {3.524690255775133*^9, 3.524690276826264*^9}, {
  3.524690332966127*^9, 3.524690347218945*^9}, {3.524690486375396*^9, 
  3.5246905164199038`*^9}, {3.52476195644282*^9, 3.524762004505179*^9}, {
  3.524858842425868*^9, 3.5248588606033487`*^9}, {3.5248806606403503`*^9, 
  3.5248806770942917`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getD", "[", "testpoly", "]"}]], "Input",
 CellChangeTimes->{{3.524443481588826*^9, 3.524443485116699*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "24"}], ",", "18", ",", "8", ",", "14", ",", "16", ",", 
   RowBox[{"-", "10"}], ",", 
   RowBox[{"-", "6"}], ",", 
   RowBox[{"-", "12"}], ",", 
   RowBox[{"-", "22"}], ",", 
   RowBox[{"-", "26"}], ",", "4", ",", "28", ",", 
   RowBox[{"-", "20"}], ",", 
   RowBox[{"-", "2"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.524443486365328*^9, {3.524443519229768*^9, 3.524443521060217*^9}, 
   3.5244771451601973`*^9, 3.524689497131525*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"reduceD", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "24"}], ",", "18", ",", "8", ",", "14", ",", "16", ",", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"-", "6"}], ",", 
     RowBox[{"-", "12"}], ",", 
     RowBox[{"-", "22"}], ",", 
     RowBox[{"-", "26"}], ",", "4", ",", "28", ",", 
     RowBox[{"-", "20"}], ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", " ", "0", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.524477645585431*^9, 3.524477646186001*^9}, {
  3.524477749579584*^9, 3.5244777508668337`*^9}, {3.5246899256917543`*^9, 
  3.524689962642346*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "22"}], ",", "16", ",", "8", ",", "12", ",", "14", ",", 
   RowBox[{"-", "6"}], ",", 
   RowBox[{"-", "10"}], ",", 
   RowBox[{"-", "20"}], ",", 
   RowBox[{"-", "24"}], ",", "4", ",", "26", ",", 
   RowBox[{"-", "18"}], ",", 
   RowBox[{"-", "2"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.524689926786254*^9, 3.5246899636540728`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"reduceD", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "24"}], ",", "18", ",", "8", ",", "14", ",", "16", ",", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"-", "6"}], ",", 
     RowBox[{"-", "12"}], ",", 
     RowBox[{"-", "22"}], ",", 
     RowBox[{"-", "26"}], ",", "4", ",", "28", ",", 
     RowBox[{"-", "20"}], ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", " ", "4", ",", "7"}], "]"}]], "Input",
 CellChangeTimes->{{3.524477645585431*^9, 3.524477646186001*^9}, {
  3.524477749579584*^9, 3.5244777508668337`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "22"}], ",", "16", ",", "8", ",", "12", ",", "14", ",", 
   RowBox[{"-", "6"}], ",", 
   RowBox[{"-", "10"}], ",", 
   RowBox[{"-", "20"}], ",", 
   RowBox[{"-", "24"}], ",", "4", ",", "26", ",", 
   RowBox[{"-", "18"}], ",", 
   RowBox[{"-", "2"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5244776472399473`*^9, 3.524477752003524*^9, 
  3.5246899162710733`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nicerD", "[", 
  RowBox[{"testpoly", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.5244438356320353`*^9, 3.524443865589373*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.52444386324835*^9, 3.524443866457387*^9}, 
   3.524443910931013*^9, 3.524477147676775*^9, 3.5244777362061768`*^9, 
   3.524690039855043*^9}]
}, Open  ]],

Cell[TextData[{
 "Below is an example where getD and nicerD works for the knot ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["7", "1"], TraditionalForm]]],
 " (comes from Rawdons homepage)."
}], "Text",
 CellChangeTimes->{{3.524858738461378*^9, 3.5248587719891376`*^9}, {
  3.5248605007481728`*^9, 3.524860518345203*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"getD", "[", "stick9knot71", "]"}], "\[IndentingNewLine]", 
 RowBox[{"nicerD", "[", 
  RowBox[{"stick9knot71", ",", "10"}], "]"}]}], "Input",
 CellChangeTimes->{{3.524858652938571*^9, 3.52485871920783*^9}, {
  3.524858810009295*^9, 3.524858819720044*^9}, {3.524860388014978*^9, 
  3.5248603882365017`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", 
   RowBox[{"-", "8"}], ",", "14", ",", 
   RowBox[{"-", "16"}], ",", "18", ",", 
   RowBox[{"-", "6"}], ",", "4", ",", "12", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{
  3.524858656804667*^9, {3.524858691702216*^9, 3.5248587244842653`*^9}, {
   3.524858812092111*^9, 3.524858821258881*^9}, {3.524860370254469*^9, 
   3.524860392775738*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "8"}], ",", 
   RowBox[{"-", "10"}], ",", 
   RowBox[{"-", "12"}], ",", 
   RowBox[{"-", "14"}], ",", 
   RowBox[{"-", "2"}], ",", 
   RowBox[{"-", "4"}], ",", 
   RowBox[{"-", "6"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.524858656804667*^9, {3.524858691702216*^9, 3.5248587244842653`*^9}, {
   3.524858812092111*^9, 3.524858821258881*^9}, {3.524860370254469*^9, 
   3.524860392859623*^9}}]
}, Open  ]],

Cell[TextData[{
 "Below is an example where getD fails initially because for a lattice knot \
the projection along the z-axis will not get a nice projection.\nNicerD works \
for the knot ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["8", "2"], TraditionalForm]]],
 " and identifies with a minimal DT code correctly."
}], "Text",
 CellChangeTimes->{{3.524858738461378*^9, 3.5248587719891376`*^9}, {
  3.5248605007481728`*^9, 3.524860518345203*^9}, {3.5248605882015247`*^9, 
  3.524860614319113*^9}, {3.524860728664489*^9, 3.5248607569917717`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"getD", "[", "lattice82knot", "]"}], "\[IndentingNewLine]", 
 RowBox[{"nicerD", "[", 
  RowBox[{"lattice82knot", ",", "20"}], "]"}]}], "Input",
 CellChangeTimes->{{3.52485867051059*^9, 3.5248586745836487`*^9}, {
  3.524860528787156*^9, 3.5248605745073147`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Triple\"\>"], "Print",
 CellChangeTimes->{{3.524860551326825*^9, 3.524860575871825*^9}}],

Cell[BoxData["\<\"Perpendicular\"\>"], "Print",
 CellChangeTimes->{{3.524860551326825*^9, 3.524860575874587*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "40"}], ",", "90", ",", "89", ",", "62", ",", 
   RowBox[{"-", "52"}], ",", 
   RowBox[{"-", "30"}], ",", "58", ",", 
   RowBox[{"-", "48"}], ",", 
   RowBox[{"-", "74"}], ",", 
   RowBox[{"-", "73"}], ",", "72", ",", "71", ",", "60", ",", "50", ",", "16",
    ",", 
   RowBox[{"-", "84"}], ",", 
   RowBox[{"-", "83"}], ",", "36", ",", "100", ",", "2", ",", "99", ",", 
   RowBox[{"-", "96"}], ",", 
   RowBox[{"-", "95"}], ",", "64", ",", 
   RowBox[{"-", "28"}], ",", "10", ",", "14", ",", 
   RowBox[{"-", "82"}], ",", 
   RowBox[{"-", "81"}], ",", 
   RowBox[{"-", "26"}], ",", 
   RowBox[{"-", "8"}], ",", 
   RowBox[{"-", "12"}], ",", 
   RowBox[{"-", "46"}], ",", 
   RowBox[{"-", "66"}], ",", 
   RowBox[{"-", "24"}], ",", 
   RowBox[{"-", "22"}], ",", "20", ",", "18", ",", 
   RowBox[{"-", "76"}], ",", "56", ",", "54", ",", "34", ",", "32", ",", "86",
    ",", 
   RowBox[{"-", "6"}], ",", 
   RowBox[{"-", "4"}], ",", 
   RowBox[{"-", "92"}], ",", "44", ",", "42", ",", "98"}], "}"}]], "Output",
 CellChangeTimes->{{3.524860551339119*^9, 3.524860575878408*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"Triple\"\>"], "Print",
 CellChangeTimes->{{3.524860551326825*^9, 3.524860575979508*^9}}],

Cell[BoxData["\<\"Perpendicular\"\>"], "Print",
 CellChangeTimes->{{3.524860551326825*^9, 3.524860575982362*^9}}],

Cell[BoxData["\<\"Triple\"\>"], "Print",
 CellChangeTimes->{{3.524860551326825*^9, 3.524860576252001*^9}}],

Cell[BoxData["\<\"Triple\"\>"], "Print",
 CellChangeTimes->{{3.524860551326825*^9, 3.524860576431223*^9}}],

Cell[BoxData["\<\"Triple\"\>"], "Print",
 CellChangeTimes->{{3.524860551326825*^9, 3.5248605766058683`*^9}}],

Cell[BoxData["\<\"Triple\"\>"], "Print",
 CellChangeTimes->{{3.524860551326825*^9, 3.524860576771449*^9}}],

Cell[BoxData["\<\"Triple\"\>"], "Print",
 CellChangeTimes->{{3.524860551326825*^9, 3.524860576930016*^9}}],

Cell[BoxData["\<\"Triple\"\>"], "Print",
 CellChangeTimes->{{3.524860551326825*^9, 3.524860577106619*^9}}],

Cell[BoxData["\<\"Triple\"\>"], "Print",
 CellChangeTimes->{{3.524860551326825*^9, 3.5248605772646437`*^9}}],

Cell[BoxData["\<\"Triple\"\>"], "Print",
 CellChangeTimes->{{3.524860551326825*^9, 3.524860577445936*^9}}],

Cell[BoxData["\<\"Triple\"\>"], "Print",
 CellChangeTimes->{{3.524860551326825*^9, 3.52486057763029*^9}}],

Cell[BoxData["\<\"Triple\"\>"], "Print",
 CellChangeTimes->{{3.524860551326825*^9, 3.524860577806122*^9}}],

Cell[BoxData["\<\"Triple\"\>"], "Print",
 CellChangeTimes->{{3.524860551326825*^9, 3.5248605779864883`*^9}}],

Cell[BoxData["\<\"Triple\"\>"], "Print",
 CellChangeTimes->{{3.524860551326825*^9, 3.524860578159834*^9}}],

Cell[BoxData["\<\"Triple\"\>"], "Print",
 CellChangeTimes->{{3.524860551326825*^9, 3.5248605783437138`*^9}}],

Cell[BoxData["\<\"Triple\"\>"], "Print",
 CellChangeTimes->{{3.524860551326825*^9, 3.524860578512735*^9}}],

Cell[BoxData["\<\"Triple\"\>"], "Print",
 CellChangeTimes->{{3.524860551326825*^9, 3.524860578682507*^9}}],

Cell[BoxData["\<\"Triple\"\>"], "Print",
 CellChangeTimes->{{3.524860551326825*^9, 3.524860578855296*^9}}],

Cell[BoxData["\<\"Triple\"\>"], "Print",
 CellChangeTimes->{{3.524860551326825*^9, 3.524860579030918*^9}}],

Cell[BoxData["\<\"Triple\"\>"], "Print",
 CellChangeTimes->{{3.524860551326825*^9, 3.524860579199521*^9}}],

Cell[BoxData["\<\"Triple\"\>"], "Print",
 CellChangeTimes->{{3.524860551326825*^9, 3.524860579359906*^9}}],

Cell[BoxData["\<\"Triple\"\>"], "Print",
 CellChangeTimes->{{3.524860551326825*^9, 3.524860579534603*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "14"}], ",", 
   RowBox[{"-", "10"}], ",", 
   RowBox[{"-", "12"}], ",", 
   RowBox[{"-", "16"}], ",", 
   RowBox[{"-", "2"}], ",", 
   RowBox[{"-", "4"}], ",", 
   RowBox[{"-", "6"}], ",", 
   RowBox[{"-", "8"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.524860551339119*^9, 3.524860579559359*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nicerD", "[", 
  RowBox[{"testpoly", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.5244438356320353`*^9, 3.524443847425084*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.524443848726514*^9, 3.524477151086452*^9, 
  3.524477739095172*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"completedt", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "22"}], ",", "16", ",", "8", ",", "12", ",", "14", ",", 
    RowBox[{"-", "6"}], ",", 
    RowBox[{"-", "10"}], ",", 
    RowBox[{"-", "20"}], ",", 
    RowBox[{"-", "24"}], ",", "4", ",", "26", ",", 
    RowBox[{"-", "18"}], ",", 
    RowBox[{"-", "2"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.524690298994034*^9, 3.524690307033304*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "21"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.524690308160223*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"completedt", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "22"}], ",", "16", ",", "8", ",", "12", ",", "14", ",", 
    RowBox[{"-", "6"}], ",", 
    RowBox[{"-", "10"}], ",", 
    RowBox[{"-", "20"}], ",", 
    RowBox[{"-", "24"}], ",", "4", ",", "26", ",", 
    RowBox[{"-", "18"}], ",", 
    RowBox[{"-", "2"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.524690298994034*^9, 3.524690307033304*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "22"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6"}], ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "10"}], ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", 
     RowBox[{"-", "6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", 
     RowBox[{"-", "10"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", 
     RowBox[{"-", "20"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", 
     RowBox[{"-", "24"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "18"}], ",", "23"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "20"}], ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "22"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", 
     RowBox[{"-", "18"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "24"}], ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "21"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.524690871934946*^9, 3.524690932652505*^9, 
  3.5246910045398607`*^9, 3.524757727061504*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"shortdt", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "22"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "25"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "16"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "19"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "8"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "6"}], ",", "11"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", "12"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"9", ",", "14"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "10"}], ",", "13"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"11", ",", 
      RowBox[{"-", "6"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"12", ",", "7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"13", ",", 
      RowBox[{"-", "10"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"14", ",", "9"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"15", ",", 
      RowBox[{"-", "20"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"16", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"17", ",", 
      RowBox[{"-", "24"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "18"}], ",", "23"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"19", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "20"}], ",", "15"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"21", ",", "26"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "22"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"23", ",", 
      RowBox[{"-", "18"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "24"}], ",", "17"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"25", ",", 
      RowBox[{"-", "2"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"26", ",", "21"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.524690360031509*^9, 3.5246903691951313`*^9}, {
   3.524690756835216*^9, 3.524690777325457*^9}, 3.524757814285079*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "22"}], ",", "16", ",", "8", ",", "12", ",", "14", ",", 
   RowBox[{"-", "6"}], ",", 
   RowBox[{"-", "10"}], ",", 
   RowBox[{"-", "20"}], ",", 
   RowBox[{"-", "24"}], ",", "4", ",", "26", ",", 
   RowBox[{"-", "18"}], ",", 
   RowBox[{"-", "2"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.524690370324479*^9, {3.524690757978855*^9, 3.5246907714352503`*^9}, 
   3.524757816045334*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"decomposedt", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "22"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "25"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "16"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "19"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "8"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "6"}], ",", "11"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", "12"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"9", ",", "14"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "10"}], ",", "13"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"11", ",", 
      RowBox[{"-", "6"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"12", ",", "7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"13", ",", 
      RowBox[{"-", "10"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"14", ",", "9"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"15", ",", 
      RowBox[{"-", "20"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"16", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"17", ",", 
      RowBox[{"-", "24"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "18"}], ",", "23"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"19", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "20"}], ",", "15"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"21", ",", "26"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "22"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"23", ",", 
      RowBox[{"-", "18"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "24"}], ",", "17"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"25", ",", 
      RowBox[{"-", "2"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"26", ",", "21"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.524690560031329*^9, 3.524690573478285*^9}, 
   3.5247578251258593`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "22"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "25"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "16"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "19"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "8"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "6"}], ",", "11"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", "12"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"9", ",", "14"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "10"}], ",", "13"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"11", ",", 
      RowBox[{"-", "6"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"12", ",", "7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"13", ",", 
      RowBox[{"-", "10"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"14", ",", "9"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"15", ",", 
      RowBox[{"-", "20"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"16", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"17", ",", 
      RowBox[{"-", "24"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "18"}], ",", "23"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"19", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "20"}], ",", "15"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"21", ",", "26"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "22"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"23", ",", 
      RowBox[{"-", "18"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "24"}], ",", "17"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"25", ",", 
      RowBox[{"-", "2"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"26", ",", "21"}], "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.5246905746931143`*^9, 3.5247578265284147`*^9}]
}, Open  ]],

Cell["\<\
Below is the example of a connected sum of a trefoil +figure eight + two five \
crossing knots.\
\>", "Text",
 CellChangeTimes->{{3.524690532893148*^9, 3.524690538163622*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"decomposedt", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "32"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "31"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "9"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"6", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", "22"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", "21"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"9", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"10", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"11", ",", "14"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"12", ",", "17"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"13", ",", "18"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"14", ",", "11"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"15", ",", "20"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"16", ",", "19"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"17", ",", "12"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"18", ",", "13"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"19", ",", "16"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"20", ",", "15"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"21", ",", "8"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"22", ",", "7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"23", ",", "26"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"24", ",", "27"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"25", ",", "28"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"26", ",", "23"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"27", ",", "24"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"28", ",", "25"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"29", ",", "34"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"30", ",", "33"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"31", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"32", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"33", ",", "30"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"34", ",", "29"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.52415178453902*^9, 3.524151787403915*^9}, 
   3.5241521824592457`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "5"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5246906668171663`*^9, 3.524763297167635*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"decomposedt", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "32"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "31"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "9"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"6", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", "22"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", "21"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"9", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"10", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"11", ",", "14"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"12", ",", "17"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"13", ",", 
      RowBox[{"-", "18"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"14", ",", "11"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"15", ",", "20"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "16"}], ",", "19"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"17", ",", "12"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"18", ",", "13"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"19", ",", 
      RowBox[{"-", "16"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"20", ",", "15"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"21", ",", "8"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"22", ",", "7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"23", ",", "26"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "24"}], ",", "27"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"25", ",", "28"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"26", ",", "23"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"27", ",", 
      RowBox[{"-", "24"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"28", ",", "25"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"29", ",", "34"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"30", ",", "33"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"31", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "32"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"33", ",", "30"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"34", ",", "29"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.52415178453902*^9, 3.524151787403915*^9}, 
   3.5241521824592457`*^9, {3.524757858717616*^9, 3.524757865140038*^9}, {
   3.5247698858971252`*^9, 3.5247699050011883`*^9}, {3.524769944017583*^9, 
   3.524769952792985*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "6"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "6"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", 
       RowBox[{"-", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"-", "8"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "6"}], ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", 
       RowBox[{"-", "6"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "5"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.52475786579515*^9, 3.5247605615889997`*^9, 
  3.524769906629393*^9, 3.524769953841132*^9, 3.524773466989441*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Planar Diagram", "Subsection",
 CellChangeTimes->{{3.524341432760991*^9, 3.5243414378872843`*^9}}],

Cell["\<\
1. getPD[lst_]
For a polygon this will generated PD code.
Returns: {true/false, PD code} where true= valid projection not triple pts \
etc; false = invalid projection so PD is aborted. Projection Direction: z- \
axis 
Limitations: .
Tight Intersections: Tight intersections have unknown effects. For an actual \
intersection Abort[ ] is called.

getReducedPD[lst_]
For a polygon this will generated PD code with reduction by RMI-III moves.
Returns: {true/false, PD code} where true = valid projection, and \
false=invalid projection
Limitations: . 
Projection Direction: z-axis    Tight Intersections??  (as in getPD)\t

2. nicerPD[lst_, tries_]
For a polygon this will generated an abriviated PD code where reduction by \
RMI-III moves have been carried out. tries is the number of different random \
projection directions, code return the shortest DT code that was found with \
tries many attempts. As reduction is a longer but more thorough process tries \
should be kept small (maybe 1 is best). tries is taken over only valid \
projections. So an invalid projection will cause the selection of a new \
projection angle without counting toward tries.
Limitations:    Tight Intersections?? (as above)\t\t


3. IdentifyWithin[PD_, AllKnots[]]
KnotTheory 
mappd []   converts pd output to the pd code needed for knotheory
unmappd[] other way

4. polygonFromPD\
\>", "Text",
 CellChangeTimes->{{3.5244786402597313`*^9, 3.524478736786707*^9}, {
   3.524478798934988*^9, 3.5244788310357113`*^9}, 3.524478862172792*^9, {
   3.524478951673971*^9, 3.524478986150505*^9}, {3.524479189540625*^9, 
   3.5244791916925907`*^9}, {3.524489102753744*^9, 3.524489326561697*^9}, {
   3.524860803529929*^9, 3.5248608072457867`*^9}, 3.524861307331501*^9, {
   3.5248808339042606`*^9, 3.5248809284896708`*^9}, {3.5248809954815025`*^9, 
   3.5248811682263827`*^9}, {3.5248814499324956`*^9, 
   3.5248815183954115`*^9}, {3.524914907670823*^9, 3.5249149386721697`*^9}, {
   3.524916559657168*^9, 3.524916561569982*^9}, {3.524921740647047*^9, 
   3.5249217816316032`*^9}, {3.5249218840680017`*^9, 3.524921935258513*^9}}],

Cell["This is a twenty step polygon that is unknotted.", "Text",
 CellChangeTimes->{{3.524443431329809*^9, 3.52444343707475*^9}, {
  3.524861325144003*^9, 3.524861337063299*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getPD", "[", "testpoly", "]"}]], "Input",
 CellChangeTimes->{{3.524478774715756*^9, 3.524478778604162*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "24", ",", "2", ",", "25"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"27", ",", "2", ",", "28", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", "4", ",", "19", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "22", ",", "5", ",", "21"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "5", ",", "9", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "7", ",", "14", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "7", ",", "15", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "9", ",", "17", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "11", ",", "12", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "13", ",", "16", ",", "12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "22", ",", "18", ",", "23"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"19", ",", "26", ",", "20", ",", "27"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"25", ",", "20", ",", "26", ",", "21"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"28", ",", "24", ",", "1", ",", "23"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.524478779412916*^9, 3.524775636807868*^9, 
  3.524860822057269*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getReducedPD", "[", "testpoly", "]"}]], "Input",
 CellChangeTimes->{{3.5244789945749693`*^9, 3.524478999242251*^9}, {
  3.524479111925982*^9, 3.524479122535643*^9}, {3.524479158312211*^9, 
  3.524479159211287*^9}, {3.524881202432339*^9, 3.5248812279477987`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   RowBox[{"{", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.524479000166395*^9, {3.524479113247802*^9, 3.5244791244292727`*^9}, 
   3.5244791610450087`*^9, 3.5248608241374407`*^9, {3.524881207663638*^9, 
   3.524881228950856*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testpolypd", "=", 
  RowBox[{
   RowBox[{"getReducedPD", "[", "testpoly", "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5248812312329865`*^9, 3.524881243510689*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.5248812446067514`*^9}]
}, Open  ]],

Cell[TextData[{
 "This is 9 stick knot ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["7", "1"], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.524443431329809*^9, 3.52444343707475*^9}, {
  3.524861325144003*^9, 3.524861354096798*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getReducedPD", "[", "stick9knot71", "]"}]], "Input",
 CellChangeTimes->{{3.5248608198890553`*^9, 3.524860844143792*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"10", ",", "2", ",", "11", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "18", ",", "3", ",", "17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "9", ",", "4", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "14", ",", "5", ",", "13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "6", ",", "15", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "7", ",", "12", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "17", ",", "8", ",", "16"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", "10", ",", "1", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "16", ",", "13", ",", "15"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.524860845146185*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stick9knot71pd", "=", 
  RowBox[{"nicerPD", "[", 
   RowBox[{"stick9knot71", ",", "20"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.524860877431801*^9, 3.524860911869334*^9}, {
  3.524881250396083*^9, 3.5248812570614643`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"7", ",", "1", ",", "8", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "7", ",", "14", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "3", ",", "10", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "13", ",", "6", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "2", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "5", ",", "12", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "11", ",", "4", ",", "10"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.52486087930249*^9, 3.524860912985341*^9}, 
   3.5248812598376226`*^9}]
}, Open  ]],

Cell["\<\
For a lattice knot the initial projection into the x-y plane fails, but nicer \
PD works.\
\>", "Text",
 CellChangeTimes->{{3.524861032068606*^9, 3.5248610680101547`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getPD", "[", "lattice82knot", "]"}]], "Input",
 CellChangeTimes->{{3.52486101808532*^9, 3.5248610227902308`*^9}}],

Cell[BoxData[
 RowBox[{"{", "False", "}"}]], "Output",
 CellChangeTimes->{3.524861023619671*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getReducedPD", "[", "lattice82knot", "]"}]], "Input",
 CellChangeTimes->{{3.5248608198890553`*^9, 3.524860844143792*^9}, 
   3.524860942671379*^9}],

Cell[BoxData[
 RowBox[{"{", "False", "}"}]], "Output",
 CellChangeTimes->{3.5248609435719967`*^9}]
}, Open  ]],

Cell[TextData[{
 "This shows that nicerPD identifies the knot ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["8", "2"], TraditionalForm]]],
 " correctly."
}], "Text",
 CellChangeTimes->{{3.5248613691506767`*^9, 3.5248613903743763`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lattice82knotpd", "=", 
  RowBox[{"nicerPD", "[", 
   RowBox[{"lattice82knot", ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.5248609633518143`*^9, {3.524881272516348*^9, 3.524881284316023*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "9", ",", "2", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "2", ",", "16", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "4", ",", "12", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "12", ",", "6", ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "6", ",", "14", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "14", ",", "8", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "1", ",", "10", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "10", ",", "4", ",", "11"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.524860970445272*^9, {3.5248812817698774`*^9, 3.5248812859381156`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"DrawPD", "[", 
   RowBox[{"mappd", "[", "lattice82knotpd", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.524861125358658*^9, 3.524861134178041*^9}, {
  3.5248611723138742`*^9, 3.524861245790752*^9}, {3.524881304108155*^9, 
  3.524881322835226*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"KnotTheory", "::", "\<\"credits\"\>"}], ":", 
  " ", "\<\"\[NoBreak]\\!\\(\\*StyleBox[\\!\\(\\\"DrawPD was written by Emily \
Redelmeier at the University of Toronto in the summers of 2003 and \
2004.\\\"\\), \\\"MT\\\"]\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.524881323272251*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0, 0, 0], 
    CircleBox[{0.5012236012747164, 0.4580058567481673}, 
     0.2358898120444621, {-0.5651386782984084, 0.06821338216810857}], 
    CircleBox[{0.5012236012747164, 0.4580058567481673}, 
     0.2358898120444621, {-1.3460613220121052`, -0.7562904299133465}]}, 
   {RGBColor[0, 0, 0], 
    CircleBox[{0.18220316588265073`, -0.03970802531544598}, 
     0.6163372079899297, {0.18704453338164564`, 0.819242834602058}]}, 
   {RGBColor[0, 0, 0], 
    CircleBox[{1.055061915010168, 0.11573289318018254`}, 0.7752717101076746, {
     3.0386111268200997`, 3.253186510621048}], 
    CircleBox[{1.055061915010168, 0.11573289318018254`}, 0.7752717101076746, {
     2.8132018308966336`, 2.9804499038932954`}]}, 
   {RGBColor[0, 0, 0], 
    CircleBox[{0.39378712266203986`, 0.9856375850669417}, 
     0.7752717101086941, {-1.9532310699337638`, -1.5132463902099091`}]}, 
   {RGBColor[0, 0, 0], 
    CircleBox[{-0.2595237343921458, -0.3598279590579496}, 
     0.5947006193799113, {2.1135166297715244`, 2.4351116194291773`}], 
    CircleBox[{-0.2595237343921458, -0.3598279590579496}, 
     0.5947006193799113, {2.5109325439263355`, 2.860756180569213}]}, 
   {RGBColor[0, 0, 0], 
    CircleBox[{0.05715735416518086, 0.26906470602339366`}, 
     0.8254503066186237, {-3.1332060941042883`, -2.5826611812169142`}]}, 
   {RGBColor[0, 0, 0], 
    CircleBox[{0.07170629267213768, -0.35775369762900044`}, 
     0.691329068800577, {-3.2468504141058316`, -3.018894489394795}], 
    CircleBox[{0.07170629267213768, -0.35775369762900044`}, 
     0.691329068800577, {-2.9536712074653253`, -2.6834282978123825`}]}, 
   {RGBColor[0, 0, 0], 
    CircleBox[{-0.325527811082832, 0.16480638576131595`}, 
     0.6913290688006534, {-2.299801568679822, -1.736379452386431}]}, 
   {RGBColor[0, 0, 0], 
    CircleBox[{0.2745482718545904, -0.016912290921902384`}, 
     0.8254503066185547, {-2.4005686852753962`, -2.189715291039273}], 
    CircleBox[{0.2745482718545904, -0.016912290921902384`}, 
     0.8254503066185547, {-2.1350896516774913`, -1.8500237723880675`}]}, 
   {RGBColor[0, 0, 0], 
    CircleBox[{-0.41614432361582543`, -0.15379411807673904`}, 
     0.5947006193799421, {-1.5608007398818748`, -0.8135611890843367}]}, 
   {RGBColor[0, 0, 0], 
    CircleBox[{-0.028136174078856047`, 0.47606121397423323`}, 
     1.0083846935624017`, {-1.4171595871705966`, -1.1829600146433037`}], 
    CircleBox[{-0.028136174078856047`, 0.47606121397423323`}, 
     1.0083846935624017`, {-1.1382441923502047`, -0.7645560645846633}]}, 
   {RGBColor[0, 0, 0], 
    CircleBox[{-0.21580741542073695`, -0.3819628852382533}, 
     0.5935628711254302, {-0.6480833291750131, 0.3954248310443344}]}, 
   {RGBColor[0, 0, 0], 
    CircleBox[{0.010486436900100649`, 0.18618473507055155`}, 
     0.6163372079899188, {0.4807126060847299, 0.6536267853369436}], 
    CircleBox[{0.010486436900100649`, 0.18618473507055155`}, 
     0.6163372079899188, {0.7267860075547187, 1.1129109073051882`}]}, 
   {RGBColor[0, 0, 0], 
    CircleBox[{0.575408078938603, 0.3604164341182262}, 0.23588981204455992`, {
     1.2317420585187202`, 2.646016762698583}]}, 
   {RGBColor[0, 0, 0], 
    CircleBox[{-0.42577640797400296`, -0.10574940502384422`}, 
     0.5935628711254646, {0.9045306096427083, 1.3745966876087814`}], 
    CircleBox[{-0.42577640797400296`, -0.10574940502384422`}, 
     0.5935628711254646, {1.4505629465409147`, 1.9480387698622648`}]}, 
   {RGBColor[0, 0, 0], 
    CircleBox[{0.45117940294563696`, -0.15447676232891927`}, 
     1.0083846935620038`, {2.064511505271524, 2.7171150278578793`}]}, 
   {RGBColor[0, 0, 0], 
    CircleBox[{0.6125065463620497, 0.4656086385503787}, 
     0.12434746063280107`, {0.06821338216810845, 1.23174205851872}]}, 
   {RGBColor[0, 0, 0], 
    CircleBox[{0.3982276140415565, 0.9085638598019186}, 
     0.6980701745674899, {-1.5132463902099085`, -1.3460613220121045`}]}, 
   {RGBColor[0, 0, 0], 
    CircleBox[{0.35347657409650945`, 0.8854220782871955}, 
     0.6672527852632054, {-2.2370620439470845`, -1.9532310699337636`}]}, 
   {RGBColor[0, 0, 0], 
    CircleBox[{-0.5721934636562311, 0.2637864942053174}, 
     0.19607735564878997`, {1.9480387698622645`, 3.1499792130752975`}]}, 
   {RGBColor[0, 0, 0], 
    CircleBox[{-0.7980917178715973, -0.26586109060741303`}, 
     0.18330961681255273`, {-0.10525776051603848`, 0.5589314723728787}]}, 
   {RGBColor[0, 0, 0], 
    CircleBox[{-0.4117224334004848, -0.5961636344005519}, 
     0.15230900317814233`, {-2.6834282978123825`, -1.5608007398818744`}]}, 
   {RGBColor[0, 0, 0], 
    CircleBox[{0.16453723060305778`, -0.7681401662269752}, 
     0.2506467259686254, {1.724433066419196, 2.3280314645054565`}]}, 
   {RGBColor[0, 0, 0], 
    CircleBox[{0.45564016975355653`, 0.012041784149174395`}, 
     0.3380462849156723, {-0.7645560645846634, 0.18704453338164562`}]}, 
   {RGBColor[0, 0, 0], 
    CircleBox[{0.7572349751172169, 0.5756267388833055}, 
     0.22586137528073313`, {-2.660880047505063, -2.322349818987735}]}, 
   {RGBColor[0, 0, 0], 
    CircleBox[{0.1335055908362827, 0.4358087035317396}, 0.3380462849157259, {
     1.1129109073051886`, 2.0645115052715246`}]}, 
   {RGBColor[0, 0, 0], 
    CircleBox[{-0.696118007190629, 0.3640488089401476}, 
     0.25064672596861914`, {-1.0280760238182687`, -0.4244776257319138}]}, 
   {RGBColor[0, 0, 0], 
    CircleBox[{-0.6845841892423025, -0.2372149425866831}, 
     0.15230900317815144`, {-3.4224291266103726`, -2.2998015686798214`}]}, 
   {RGBColor[0, 0, 0], 
    CircleBox[{-0.46969232674920885`, -0.6978693486799787}, 
     0.18330961681252494`, {0.7410239683143968, 1.405213201203362}]}, 
   {RGBColor[0, 0, 0], 
    CircleBox[{0.10108484269185222`, -0.6219087786435805}, 
     0.19607735564873194`, {-1.8500237723880677`, -0.6480833291750131}]}, 
   {RGBColor[0, 0, 0], 
    CircleBox[{0.9477148825044053, 0.10370364812288327`}, 
     0.6672527852637294, {-3.029998796558538, -2.7461678225454587`}]}, 
   {RGBColor[0, 0, 0], 
    CircleBox[{0.981985831805519, 0.1406319524670953}, 0.69807017456656, {
     2.646016762698582, 2.8132018308966327`}]}, 
   {RGBColor[0, 0, 0]}},
  AspectRatio->1]], "Output",
 CellChangeTimes->{3.5248813382151055`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"drawpd", "[", "lattice82knotpd", "]"}]], "Input",
 CellChangeTimes->{{3.5248804349274406`*^9, 3.524880442722886*^9}, {
  3.524880521126371*^9, 3.524880522946475*^9}, {3.524881346197562*^9, 
  3.5248813529429483`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0., 0., 0.], 
    CircleBox[NCache[{2, Rational[1, 2]}, {2, 0.5}], 
     NCache[{0.6, Rational[1, 2]}, {0.6, 0.5}], 
     NCache[{Rational[1, 2] Pi, Rational[3, 2] Pi}, {1.5707963267948966`, 
      4.71238898038469}]], 
    LineBox[NCache[{{1.15, 0.375}, {1.4, Rational[1, 2]}, {1.65, 0.375}}, {{
      1.15, 0.375}, {1.4, 0.5}, {1.65, 0.375}}]]}, 
   {RGBColor[0., 0., 0.], 
    CircleBox[NCache[{2, Rational[7, 2]}, {2, 3.5}], 
     NCache[{0.6, Rational[3, 2]}, {0.6, 1.5}], 
     NCache[{Rational[1, 2] Pi, Rational[3, 2] Pi}, {1.5707963267948966`, 
      4.71238898038469}]], 
    LineBox[NCache[{{1.15, 3.375}, {1.4, Rational[7, 2]}, {1.65, 3.375}}, {{
      1.15, 3.375}, {1.4, 3.5}, {1.65, 3.375}}]]}, 
   {RGBColor[0., 0., 0.], LineBox[{{2, 2}, {3, 1}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{2, 1}, {2.4, 1.4}}], 
    LineBox[{{2.6, 1.6}, {3, 2}}]}, 
   {RGBColor[0., 0., 0.], 
    CircleBox[NCache[{3, Rational[7, 2]}, {3, 3.5}], 
     NCache[{0.6, Rational[1, 2]}, {0.6, 0.5}], 
     NCache[{Rational[1, 2] Pi, Rational[3, 2] Pi}, {1.5707963267948966`, 
      4.71238898038469}]], 
    LineBox[NCache[{{2.15, 3.375}, {2.4, Rational[7, 2]}, {2.65, 3.375}}, {{
      2.15, 3.375}, {2.4, 3.5}, {2.65, 3.375}}]]}, 
   {RGBColor[0., 0., 0.], LineBox[{{3, 2}, {4, 3}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{4, 2}, {3.6, 2.4}}], 
    LineBox[{{3.4, 2.6}, {3, 3}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{3, 4}, {4, 5}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{4, 4}, {3.6, 4.4}}], 
    LineBox[{{3.4, 4.6}, {3, 5}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{4, 2}, {5, 1}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{4, 1}, {4.4, 1.4}}], 
    LineBox[{{4.6, 1.6}, {5, 2}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{4, 4}, {5, 3}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{4, 3}, {4.4, 3.4}}], 
    LineBox[{{4.6, 3.6}, {5, 4}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{5, 2}, {6, 1}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{5, 1}, {5.4, 1.4}}], 
    LineBox[{{5.6, 1.6}, {6, 2}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{6, 2}, {7, 1}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{6, 1}, {6.4, 1.4}}], 
    LineBox[{{6.6, 1.6}, {7, 2}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{7, 2}, {8, 1}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{7, 1}, {7.4, 1.4}}], 
    LineBox[{{7.6, 1.6}, {8, 2}}]}, 
   {RGBColor[0., 0., 0.], 
    CircleBox[NCache[{8, Rational[5, 2]}, {8, 2.5}], 
     NCache[{0.6, Rational[1, 2]}, {0.6, 0.5}], 
     NCache[{Rational[-1, 2] Pi, Rational[1, 2] Pi}, {-1.5707963267948966`, 
      1.5707963267948966`}]], 
    LineBox[NCache[{{8.35, 2.625}, {8.6, Rational[5, 2]}, {8.85, 2.625}}, {{
      8.35, 2.625}, {8.6, 2.5}, {8.85, 2.625}}]]}, 
   {RGBColor[0., 0., 0.], 
    CircleBox[NCache[{9, Rational[5, 2]}, {9, 2.5}], 
     NCache[{0.6, Rational[3, 2]}, {0.6, 1.5}], 
     NCache[{Rational[-1, 2] Pi, Rational[1, 2] Pi}, {-1.5707963267948966`, 
      1.5707963267948966`}]], 
    LineBox[NCache[{{9.35, 2.625}, {9.6, Rational[5, 2]}, {9.85, 2.625}}, {{
      9.35, 2.625}, {9.6, 2.5}, {9.85, 2.625}}]]}, 
   {RGBColor[0., 0., 0.], 
    CircleBox[NCache[{10, Rational[5, 2]}, {10, 2.5}], 
     NCache[{0.6, Rational[5, 2]}, {0.6, 2.5}], 
     NCache[{Rational[-1, 2] Pi, Rational[1, 2] Pi}, {-1.5707963267948966`, 
      1.5707963267948966`}]], 
    LineBox[NCache[{{10.35, 2.625}, {10.6, Rational[5, 2]}, {10.85, 
       2.625}}, {{10.35, 2.625}, {10.6, 2.5}, {10.85, 2.625}}]]}, 
   {RGBColor[0., 0., 0.], LineBox[{{2, 0}, {3, 0}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{2, 5}, {3, 5}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{3, 0}, {4, 0}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{3, 1}, {4, 1}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{4, 0}, {5, 0}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{4, 5}, {5, 5}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{5, 0}, {6, 0}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{5, 3}, {6, 3}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{5, 4}, {6, 4}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{5, 5}, {6, 5}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{6, 0}, {7, 0}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{6, 3}, {7, 3}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{6, 4}, {7, 4}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{6, 5}, {7, 5}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{7, 0}, {8, 0}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{7, 3}, {8, 3}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{7, 4}, {8, 4}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{7, 5}, {8, 5}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{8, 0}, {9, 0}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{8, 1}, {9, 1}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{8, 4}, {9, 4}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{8, 5}, {9, 5}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{9, 0}, {10, 0}}]}, 
   {RGBColor[0., 0., 0.], LineBox[{{9, 5}, {10, 5}}]}}]], "Output",
 CellChangeTimes->{3.52488052792976*^9, 3.5248813543360276`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"Graphics3D", "[", 
   RowBox[{"prettyReturn", "[", 
    RowBox[{
     RowBox[{"polygonFromPD", "[", "lattice82knotpd", "]"}], ",", "0.1"}], 
    "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5248815926236567`*^9, 3.5248816367291794`*^9}}],

Cell[BoxData[
 Graphics3DBox[{CylinderBox[{{1, 1, 0}, {1, 2, 0}}, 0.1], 
   CylinderBox[
    NCache[{{1, 2, 0}, {Rational[9, 4], Rational[9, 4], 0}}, {{1, 2, 0}, {
      2.25, 2.25, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[9, 4], Rational[9, 4], 0}, {
      Rational[11, 4], Rational[11, 4], 0}}, {{2.25, 2.25, 0}, {
      2.75, 2.75, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[11, 4], Rational[11, 4], 0}, {
      Rational[17, 4], Rational[13, 4], 0}}, {{2.75, 2.75, 0}, {
      4.25, 3.25, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[17, 4], Rational[13, 4], 0}, {
      Rational[17, 4], Rational[13, 4], Rational[-1, 2]}}, {{4.25, 3.25, 0}, {
      4.25, 3.25, -0.5}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[17, 4], Rational[13, 4], Rational[-1, 2]}, {
      Rational[19, 4], Rational[15, 4], Rational[-1, 2]}}, {{4.25, 
     3.25, -0.5}, {4.75, 3.75, -0.5}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[19, 4], Rational[15, 4], Rational[-1, 2]}, {
      Rational[19, 4], Rational[15, 4], 0}}, {{4.75, 3.75, -0.5}, {
      4.75, 3.75, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[19, 4], Rational[15, 4], 0}, {
      Rational[41, 4], Rational[17, 4], 0}}, {{4.75, 3.75, 0}, {
      10.25, 4.25, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[41, 4], Rational[17, 4], 0}, {
      Rational[43, 4], Rational[19, 4], 0}}, {{10.25, 4.25, 0}, {
      10.75, 4.75, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[43, 4], Rational[19, 4], 0}, {11, 5, 0}}, {{
      10.75, 4.75, 0}, {11, 5, 0}}], 0.1], 
   CylinderBox[{{11, 5, 0}, {12, 3, 0}}, 0.1], 
   CylinderBox[{{12, 3, 0}, {12, 2, 0}}, 0.1], 
   CylinderBox[
    NCache[{{12, 2, 0}, {Rational[35, 4], Rational[9, 4], 0}}, {{12, 2, 0}, {
      8.75, 2.25, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[35, 4], Rational[9, 4], 0}, {
      Rational[35, 4], Rational[9, 4], Rational[-1, 2]}}, {{8.75, 2.25, 0}, {
      8.75, 2.25, -0.5}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[35, 4], Rational[9, 4], Rational[-1, 2]}, {
      Rational[33, 4], Rational[11, 4], Rational[-1, 2]}}, {{8.75, 
     2.25, -0.5}, {8.25, 2.75, -0.5}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[33, 4], Rational[11, 4], Rational[-1, 2]}, {
      Rational[33, 4], Rational[11, 4], 0}}, {{8.25, 2.75, -0.5}, {
      8.25, 2.75, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[33, 4], Rational[11, 4], 0}, {
      Rational[31, 4], Rational[11, 4], 0}}, {{8.25, 2.75, 0}, {
      7.75, 2.75, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[31, 4], Rational[11, 4], 0}, {
      Rational[29, 4], Rational[9, 4], 0}}, {{7.75, 2.75, 0}, {
      7.25, 2.25, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[29, 4], Rational[9, 4], 0}, {
      Rational[27, 4], Rational[9, 4], 0}}, {{7.25, 2.25, 0}, {
      6.75, 2.25, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[27, 4], Rational[9, 4], 0}, {
      Rational[27, 4], Rational[9, 4], Rational[-1, 2]}}, {{6.75, 2.25, 0}, {
      6.75, 2.25, -0.5}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[27, 4], Rational[9, 4], Rational[-1, 2]}, {
      Rational[25, 4], Rational[11, 4], Rational[-1, 2]}}, {{6.75, 
     2.25, -0.5}, {6.25, 2.75, -0.5}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[25, 4], Rational[11, 4], Rational[-1, 2]}, {
      Rational[25, 4], Rational[11, 4], 0}}, {{6.25, 2.75, -0.5}, {
      6.25, 2.75, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[25, 4], Rational[11, 4], 0}, {
      Rational[23, 4], Rational[11, 4], 0}}, {{6.25, 2.75, 0}, {
      5.75, 2.75, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[23, 4], Rational[11, 4], 0}, {
      Rational[21, 4], Rational[9, 4], 0}}, {{5.75, 2.75, 0}, {
      5.25, 2.25, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[21, 4], Rational[9, 4], 0}, {
      Rational[11, 4], Rational[9, 4], 0}}, {{5.25, 2.25, 0}, {
      2.75, 2.25, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[11, 4], Rational[9, 4], 0}, {
      Rational[11, 4], Rational[9, 4], Rational[-1, 2]}}, {{2.75, 2.25, 0}, {
      2.75, 2.25, -0.5}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[11, 4], Rational[9, 4], Rational[-1, 2]}, {
      Rational[9, 4], Rational[11, 4], Rational[-1, 2]}}, {{2.75, 
     2.25, -0.5}, {2.25, 2.75, -0.5}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[9, 4], Rational[11, 4], Rational[-1, 2]}, {
      Rational[9, 4], Rational[11, 4], 0}}, {{2.25, 2.75, -0.5}, {
      2.25, 2.75, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[9, 4], Rational[11, 4], 0}, {2, 3, 0}}, {{
      2.25, 2.75, 0}, {2, 3, 0}}], 0.1], 
   CylinderBox[{{2, 3, 0}, {2, 4, 0}}, 0.1], 
   CylinderBox[{{2, 4, 0}, {3, 4, 0}}, 0.1], 
   CylinderBox[{{3, 4, 0}, {4, 6, 0}}, 0.1], 
   CylinderBox[
    NCache[{{4, 6, 0}, {Rational[37, 4], Rational[23, 4], 0}}, {{4, 6, 0}, {
      9.25, 5.75, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[37, 4], Rational[23, 4], 0}, {
      Rational[39, 4], Rational[21, 4], 0}}, {{9.25, 5.75, 0}, {
      9.75, 5.25, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[39, 4], Rational[21, 4], 0}, {
      Rational[41, 4], Rational[19, 4], 0}}, {{9.75, 5.25, 0}, {
      10.25, 4.75, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[41, 4], Rational[19, 4], 0}, {
      Rational[41, 4], Rational[19, 4], Rational[-1, 2]}}, {{
      10.25, 4.75, 0}, {10.25, 4.75, -0.5}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[41, 4], Rational[19, 4], Rational[-1, 2]}, {
      Rational[43, 4], Rational[17, 4], Rational[-1, 2]}}, {{10.25, 
     4.75, -0.5}, {10.75, 4.25, -0.5}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[43, 4], Rational[17, 4], Rational[-1, 2]}, {
      Rational[43, 4], Rational[17, 4], 0}}, {{10.75, 4.25, -0.5}, {
      10.75, 4.25, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[43, 4], Rational[17, 4], 0}, {11, 4, 0}}, {{
      10.75, 4.25, 0}, {11, 4, 0}}], 0.1], 
   CylinderBox[{{11, 4, 0}, {11, 3, 0}}, 0.1], 
   CylinderBox[
    NCache[{{11, 3, 0}, {Rational[35, 4], Rational[11, 4], 0}}, {{11, 3, 0}, {
      8.75, 2.75, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[35, 4], Rational[11, 4], 0}, {
      Rational[33, 4], Rational[9, 4], 0}}, {{8.75, 2.75, 0}, {
      8.25, 2.25, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[33, 4], Rational[9, 4], 0}, {
      Rational[31, 4], Rational[9, 4], 0}}, {{8.25, 2.25, 0}, {
      7.75, 2.25, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[31, 4], Rational[9, 4], 0}, {
      Rational[31, 4], Rational[9, 4], Rational[-1, 2]}}, {{7.75, 2.25, 0}, {
      7.75, 2.25, -0.5}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[31, 4], Rational[9, 4], Rational[-1, 2]}, {
      Rational[29, 4], Rational[11, 4], Rational[-1, 2]}}, {{7.75, 
     2.25, -0.5}, {7.25, 2.75, -0.5}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[29, 4], Rational[11, 4], Rational[-1, 2]}, {
      Rational[29, 4], Rational[11, 4], 0}}, {{7.25, 2.75, -0.5}, {
      7.25, 2.75, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[29, 4], Rational[11, 4], 0}, {
      Rational[27, 4], Rational[11, 4], 0}}, {{7.25, 2.75, 0}, {
      6.75, 2.75, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[27, 4], Rational[11, 4], 0}, {
      Rational[25, 4], Rational[9, 4], 0}}, {{6.75, 2.75, 0}, {
      6.25, 2.25, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[25, 4], Rational[9, 4], 0}, {
      Rational[23, 4], Rational[9, 4], 0}}, {{6.25, 2.25, 0}, {
      5.75, 2.25, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[23, 4], Rational[9, 4], 0}, {
      Rational[23, 4], Rational[9, 4], Rational[-1, 2]}}, {{5.75, 2.25, 0}, {
      5.75, 2.25, -0.5}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[23, 4], Rational[9, 4], Rational[-1, 2]}, {
      Rational[21, 4], Rational[11, 4], Rational[-1, 2]}}, {{5.75, 
     2.25, -0.5}, {5.25, 2.75, -0.5}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[21, 4], Rational[11, 4], Rational[-1, 2]}, {
      Rational[21, 4], Rational[11, 4], 0}}, {{5.25, 2.75, -0.5}, {
      5.25, 2.75, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[21, 4], Rational[11, 4], 0}, {
      Rational[19, 4], Rational[13, 4], 0}}, {{5.25, 2.75, 0}, {
      4.75, 3.25, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[19, 4], Rational[13, 4], 0}, {
      Rational[17, 4], Rational[15, 4], 0}}, {{4.75, 3.25, 0}, {
      4.25, 3.75, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[17, 4], Rational[15, 4], 0}, {4, 4, 0}}, {{
      4.25, 3.75, 0}, {4, 4, 0}}], 0.1], 
   CylinderBox[{{4, 4, 0}, {4, 5, 0}}, 0.1], 
   CylinderBox[
    NCache[{{4, 5, 0}, {Rational[37, 4], Rational[21, 4], 0}}, {{4, 5, 0}, {
      9.25, 5.25, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[37, 4], Rational[21, 4], 0}, {
      Rational[37, 4], Rational[21, 4], Rational[-1, 2]}}, {{9.25, 5.25, 0}, {
      9.25, 5.25, -0.5}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[37, 4], Rational[21, 4], Rational[-1, 2]}, {
      Rational[39, 4], Rational[23, 4], Rational[-1, 2]}}, {{9.25, 
     5.25, -0.5}, {9.75, 5.75, -0.5}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[39, 4], Rational[23, 4], Rational[-1, 2]}, {
      Rational[39, 4], Rational[23, 4], 0}}, {{9.75, 5.75, -0.5}, {
      9.75, 5.75, 0}}], 0.1], 
   CylinderBox[
    NCache[{{Rational[39, 4], Rational[23, 4], 0}, {11, 6, 0}}, {{
      9.75, 5.75, 0}, {11, 6, 0}}], 0.1], 
   CylinderBox[{{11, 6, 0}, {12, 4, 0}}, 0.1], 
   CylinderBox[{{12, 4, 0}, {13, 2, 0}}, 0.1], 
   CylinderBox[{{13, 2, 0}, {13, 1, 0}}, 0.1], 
   CylinderBox[{{13, 1, 0}, {1, 1, 0}}, 0.1]},
  AutomaticImageSize->True,
  ImageSize->{357.59062800901745`, 167.8882120792277},
  ViewPoint->{-0.32338852585740896`, -0.3613734136915276, 3.3488548964117126`},
  ViewVertical->{-0.012777683323791318`, 1.7296568571638273`, 
   11.773656632178323`}]], "Output",
 CellChangeTimes->{{3.524881607395502*^9, 3.5248816372002068`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"trefcomposite", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.522206`", ",", "0.316536`", ",", "0.009893`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.926117`", ",", 
       RowBox[{"-", "0.798583`"}], ",", "0.028876`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.693196`", ",", 
       RowBox[{"-", "1.704427`"}], ",", "0.083108`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.732734`", ",", 
       RowBox[{"-", "2.278795`"}], ",", "0.189816`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.908075`", ",", 
       RowBox[{"-", "2.440639`"}], ",", "0.367796`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5.065424`", ",", 
       RowBox[{"-", "2.188501`"}], ",", "0.635896`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6.112322`", ",", 
       RowBox[{"-", "1.628738`"}], ",", "1.008334`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7.093021`", ",", 
       RowBox[{"-", "0.95125`"}], ",", "1.44281`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8.095791`", ",", 
       RowBox[{"-", "0.279627`"}], ",", "1.759965`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9.110248`", ",", "0.391885`", ",", "1.753832`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10.018056`", ",", "1.062116`", ",", "1.345489`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10.681102`", ",", "1.68931`", ",", "0.578511`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11.003092`", ",", "2.221021`", ",", 
       RowBox[{"-", "0.433214`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10.944182`", ",", "2.614531`", ",", 
       RowBox[{"-", "1.549486`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10.514748`", ",", "2.841604`", ",", 
       RowBox[{"-", "2.6289`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9.765472`", ",", "2.891129`", ",", 
       RowBox[{"-", "3.54358`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8.778624`", ",", "2.769313`", ",", 
       RowBox[{"-", "4.186978`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7.661397`", ",", "2.500782`", ",", 
       RowBox[{"-", "4.479791`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6.53712`", ",", "2.128506`", ",", 
       RowBox[{"-", "4.377513`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5.535854`", ",", "1.714007`", ",", 
       RowBox[{"-", "3.87876`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4.772917`", ",", "1.333069`", ",", 
       RowBox[{"-", "3.034181`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4.313907`", ",", "1.06026`", ",", 
       RowBox[{"-", "1.944359`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4.124056`", ",", "0.929653`", ",", 
       RowBox[{"-", "0.726737`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4.071296`", ",", "0.86842`", ",", "0.533362`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4.087943`", ",", "0.684687`", ",", "1.768715`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4.246746`", ",", "0.220207`", ",", "2.889414`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4.615878`", ",", 
       RowBox[{"-", "0.526694`"}], ",", "3.76585`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5.192608`", ",", 
       RowBox[{"-", "1.447463`"}], ",", "4.281242`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5.920839`", ",", 
       RowBox[{"-", "2.394766`"}], ",", "4.37606`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6.718348`", ",", 
       RowBox[{"-", "3.226413`"}], ",", "4.053571`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7.495731`", ",", 
       RowBox[{"-", "3.824036`"}], ",", "3.36923`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8.167327`", ",", 
       RowBox[{"-", "4.102219`"}], ",", "2.419993`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8.66083`", ",", 
       RowBox[{"-", "4.014031`"}], ",", "1.333496`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8.924518`", ",", 
       RowBox[{"-", "3.555454`"}], ",", "0.258338`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8.937159`", ",", 
       RowBox[{"-", "2.769502`"}], ",", 
       RowBox[{"-", "0.650911`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8.718566`", ",", 
       RowBox[{"-", "1.746668`"}], ",", 
       RowBox[{"-", "1.254879`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8.336386`", ",", 
       RowBox[{"-", "0.608836`"}], ",", 
       RowBox[{"-", "1.470404`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7.888372`", ",", "0.54094`", ",", 
       RowBox[{"-", "1.326308`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7.426258`", ",", "1.666132`", ",", 
       RowBox[{"-", "0.989257`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6.863438`", ",", "2.725673`", ",", 
       RowBox[{"-", "0.650875`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6.067469`", ",", "3.611144`", ",", 
       RowBox[{"-", "0.387681`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5.029669`", ",", "4.192747`", ",", 
       RowBox[{"-", "0.203399`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.854553`", ",", "4.380533`", ",", 
       RowBox[{"-", "0.085351`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2.68771`", ",", "4.150405`", ",", 
       RowBox[{"-", "0.019378`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.670775`", ",", "3.536851`", ",", "0.009136`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.920802`", ",", "2.617932`", ",", "0.0143`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.522206`", ",", "1.501665`", ",", "0.009893`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.431777`"}], ",", "1.489862`", ",", "0.009893`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.827084`"}], ",", "2.605301`", ",", "0.004041`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.571218`"}], ",", "3.526676`", ",", "0.005326`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.581247`"}], ",", "4.147504`", ",", "0.026763`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.743521`"}], ",", "4.390701`", ",", "0.081741`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4.919639`"}], ",", "4.219621`", ",", "0.184572`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5.964644`"}], ",", "3.653153`", ",", "0.350648`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "6.764459`"}], ",", "2.773525`", ",", "0.594321`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7.304836`"}], ",", "1.706986`", ",", "0.92019`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7.708334`"}], ",", "0.565284`", ",", "1.278085`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "8.093809`"}], ",", 
       RowBox[{"-", "0.602533`"}], ",", "1.496591`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "8.437513`"}], ",", 
       RowBox[{"-", "1.771226`"}], ",", "1.382791`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "8.646162`"}], ",", 
       RowBox[{"-", "2.847658`"}], ",", "0.87287`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "8.647603`"}], ",", 
       RowBox[{"-", "3.70352`"}], ",", "0.028145`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "8.415944`"}], ",", 
       RowBox[{"-", "4.23591`"}], ",", 
       RowBox[{"-", "1.020468`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7.966841`"}], ",", 
       RowBox[{"-", "4.390701`"}], ",", 
       RowBox[{"-", "2.118649`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7.34561`"}], ",", 
       RowBox[{"-", "4.163319`"}], ",", 
       RowBox[{"-", "3.114727`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "6.618512`"}], ",", 
       RowBox[{"-", "3.594717`"}], ",", 
       RowBox[{"-", "3.87466`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5.863704`"}], ",", 
       RowBox[{"-", "2.766052`"}], ",", 
       RowBox[{"-", "4.293441`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5.164119`"}], ",", 
       RowBox[{"-", "1.793298`"}], ",", 
       RowBox[{"-", "4.304399`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4.59649`"}], ",", 
       RowBox[{"-", "0.817958`"}], ",", 
       RowBox[{"-", "3.890732`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4.216683`"}], ",", "0.008328`", ",", 
       RowBox[{"-", "3.095905`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4.036457`"}], ",", "0.561796`", ",", 
       RowBox[{"-", "2.024288`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4.004036`"}], ",", "0.813499`", ",", 
       RowBox[{"-", "0.808121`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4.044804`"}], ",", "0.889643`", ",", "0.451144`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4.200627`"}], ",", "0.988515`", ",", "1.683962`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4.611051`"}], ",", "1.207145`", ",", "2.811193`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5.334982`"}], ",", "1.527177`", ",", "3.718251`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "6.320396`"}], ",", "1.881876`", ",", "4.295524`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7.45314`"}], ",", "2.200892`", ",", "4.479791`"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "8.599049`"}], ",", "2.426126`", ",", "4.261662`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "9.627818`"}], ",", "2.517221`", ",", "3.678366`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "10.425595`"}], ",", "2.451708`", ",", "2.804175`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "10.902935`"}], ",", "2.224358`", ",", "1.74352`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "11.003092`"}], ",", "1.846591`", ",", "0.623584`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "10.709976`"}], ",", "1.345071`", ",", 
       RowBox[{"-", "0.412981`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "10.058413`"}], ",", "0.76044`", ",", 
       RowBox[{"-", "1.222669`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "9.140487`"}], ",", "0.140684`", ",", 
       RowBox[{"-", "1.683768`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "8.095375`"}], ",", 
       RowBox[{"-", "0.47531`"}], ",", 
       RowBox[{"-", "1.740347`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7.050701`"}], ",", 
       RowBox[{"-", "1.087366`"}], ",", 
       RowBox[{"-", "1.453847`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "6.033001`"}], ",", 
       RowBox[{"-", "1.709393`"}], ",", 
       RowBox[{"-", "1.021529`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4.967355`"}], ",", 
       RowBox[{"-", "2.233568`"}], ",", 
       RowBox[{"-", "0.638316`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.806181`"}], ",", 
       RowBox[{"-", "2.467194`"}], ",", 
       RowBox[{"-", "0.360499`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.632831`"}], ",", 
       RowBox[{"-", "2.295596`"}], ",", 
       RowBox[{"-", "0.176451`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.596671`"}], ",", 
       RowBox[{"-", "1.716411`"}], ",", 
       RowBox[{"-", "0.066116`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.833275`"}], ",", 
       RowBox[{"-", "0.808624`"}], ",", 
       RowBox[{"-", "0.010149`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.431777`"}], ",", "0.306176`", ",", "0.009893`"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.522206`", ",", "0.316536`", ",", "0.009893`"}], "}"}]}], 
    "}"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotlist", "[", "trefcomposite", "]"}]], "Input",
 CellChangeTimes->{{3.524882000983014*^9, 3.524882008311433*^9}}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[{
     Line3DBox[CompressedData["
1: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
/pl/AXmbUiE=
      "]], {
      RGBColor[1, 0, 0], 
      PointSize[Large], 
      Point3DBox[CompressedData["
1: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
       "]]}, {
      RGBColor[0, 0, 1], 
      PointSize[Large], 
      Point3DBox[{0.522206, 0.316536, 0.009893}]}, 
     Arrow3DBox[{{0.522206, 0.316536, 0.009893}, {0.926117, -0.798583, 
      0.028876}}]}, AutomaticImageSize -> True, 
    ImageSize -> {360.26641171626073`, 255.25982717079032`}, 
    ViewPoint -> {0.1975250520848072, -2.879766146867474, 
     1.7657663472710532`}, 
    ViewVertical -> {-0.16920331696162, -0.2637304700430064, 
     2.4069068983806363`}],"95"},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2}], "]"}]& )]], "Output",
 CellChangeTimes->{3.5248820092764883`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trefcompositepd", "=", 
  RowBox[{"nicerPD", "[", 
   RowBox[{"trefcomposite", ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.524881918258282*^9, 3.5248819325520997`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "5", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "6", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "7", ",", "4", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "11", ",", "8", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "9", ",", "12", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "1", ",", "10", ",", "12"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5248819383324304`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"decomposePD", "[", "trefcompositepd", "]"}]], "Input",
 CellChangeTimes->{{3.5248819406445627`*^9, 3.5248819508511467`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"6", ",", "4", ",", "1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "2", ",", "5", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6", ",", "3", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "5", ",", "2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", "4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "3", ",", "6", ",", "2"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.5248819513331738`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lookuppd", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"6", ",", "4", ",", "1", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "2", ",", "5", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "6", ",", "3", ",", "5"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5248820178529787`*^9, 3.5248820303196917`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["3", "1"], ",", 
   RowBox[{"{", 
    RowBox[{"{", "2", "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"6", ",", "4", ",", "1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "2", ",", "5", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "6", ",", "3", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", 
      SuperscriptBox["v", "4"]]}], "+", 
    FractionBox["2", 
     SuperscriptBox["v", "2"]], "+", 
    FractionBox[
     SuperscriptBox["z", "2"], 
     SuperscriptBox["v", "2"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.5248820313127484`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lookuppd", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "5", ",", "2", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "1", ",", "4", ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "3", ",", "6", ",", "2"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5248820330568485`*^9, 3.5248820417153435`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["3", "1"], ",", 
   RowBox[{"{", 
    RowBox[{"{", "2", "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "5", ",", "2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", "4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "3", ",", "6", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", 
      SuperscriptBox["v", "4"]]}], "+", 
    FractionBox["2", 
     SuperscriptBox["v", "2"]], "+", 
    FractionBox[
     SuperscriptBox["z", "2"], 
     SuperscriptBox["v", "2"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.5248820424223843`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lookuppd", "[", "trefcompositepd", "]"}]], "Input",
 CellChangeTimes->{{3.5248820438474655`*^9, 3.5248820553911257`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(3\\), \
\\(1\\)]\\)!\\!\\(\\*SubscriptBox[\\(#3\\), \\(1\\)]\\)!\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"{", "10", "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "5", ",", "2", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "3", ",", "6", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "7", ",", "4", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "11", ",", "8", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "9", ",", "12", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "1", ",", "10", ",", "12"}], "}"}]}], "}"}], ",", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["v", "8"]], "-", 
    FractionBox["4", 
     SuperscriptBox["v", "6"]], "+", 
    FractionBox["4", 
     SuperscriptBox["v", "4"]], "-", 
    FractionBox[
     RowBox[{"2", " ", 
      SuperscriptBox["z", "2"]}], 
     SuperscriptBox["v", "6"]], "+", 
    FractionBox[
     RowBox[{"4", " ", 
      SuperscriptBox["z", "2"]}], 
     SuperscriptBox["v", "4"]], "+", 
    FractionBox[
     SuperscriptBox["z", "4"], 
     SuperscriptBox["v", "4"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.5248820559361567`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IdentifyWithin", "[", 
  RowBox[{
   RowBox[{"mappd", "[", "trefcompositepd", "]"}], ",", 
   RowBox[{"AllKnots", "[", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.524883411677701*^9, 3.524883428693674*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"KnotTheory", "::", "\<\"loading\"\>"}], ":", 
  " ", "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"Loading precomputed data in \
\\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(\\\"Jones4Knots`\\\"\\), \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\".\\\\\\\"\\\", \\\"MT\\\
\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.524883430445774*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"KnotTheory", "::", "\<\"loading\"\>"}], ":", 
  " ", "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"Loading precomputed data in \
\\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(\\\"Jones4Knots11`\\\"\\), \\\
\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\".\\\\\\\"\\\", \
\\\"MT\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5248834305627813`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"KnotTheory", "::", "\<\"credits\"\>"}], ":", 
  " ", "\<\"\[NoBreak]\\!\\(\\*StyleBox[\\!\\(\\\"The Kauffman polynomial \
program was written by Scott Morrison.\\\"\\), \
\\\"MT\\\"]\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5248834307807937`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"ConnectedSum", "[", 
   RowBox[{
    RowBox[{"Mirror", "[", 
     RowBox[{"Knot", "[", 
      RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
    RowBox[{"Mirror", "[", 
     RowBox[{"Knot", "[", 
      RowBox[{"3", ",", "1"}], "]"}], "]"}]}], "]"}], "}"}]], "Output",
 CellChangeTimes->{3.5248834340149784`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.524881972755399*^9, 3.5248819799958134`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Display Tools", "Subsection",
 CellChangeTimes->{{3.5234669286249275`*^9, 3.5234669335012064`*^9}}],

Cell["\<\
1. plotlist[lst] generated a 3D plot of the polygon with red vertices, \
start/edn vertex in blue and an arrow for the direction. Also lists the \
length+1 of the polygon.

2. project[lst_] projects into the x-y plane by deleting the z-coordinate.

3. prettyReturn[lst_, rad_] makes a list of cylinders of radius rad to \
created a pretty plot.
Limitations: If rad is big cylinders intersect, need to run Graphics3D on the \
output to creat the plot.

3. prettyReturn[lst_,n,  rad_] makes a list of cylinders of radius rad to \
created a pretty plot. n is the vertix that is highlighted in red by making \
the two adjacent cylinders red.
Limitations: If rad is big cylinders intersect, need to run Graphics3D on the \
output to creat the plot.

4. PolyinSphere[v_,rad_,confinmentR,offset] plots the polygon using the \
pretty return cylinders to gether with a sphere of radius confinmentR and \
center {0,0,offset}.
\
\>", "Text",
 CellChangeTimes->{
  3.5244809280457373`*^9, {3.524481032283682*^9, 3.524481116185107*^9}, {
   3.524481148189188*^9, 3.5244811848223658`*^9}, {3.524482251569743*^9, 
   3.52448243709223*^9}, {3.5249143217825003`*^9, 3.524914419993989*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotlist", "[", "testpoly", "]"}]], "Input",
 CellChangeTimes->{{3.524480982603724*^9, 3.524480988491263*^9}}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[{
     Line3DBox[{{0, 0, 0}, {0.2027316099671975, -0.2905715029254452, 
       0.9351299888292302}, {-0.5616704411469235, 0.3345915136954332, 
       1.0928027731073293`}, {0.22232405112195353`, 0.9428118334802961, 
       0.9686227477696574}, {-0.5533803180081543, 1.00416279291412, 
       0.3405154388733104}, {-0.18894837887233992`, 0.14064716965803237`, 
       0.6891271571651092}, {0.4635916034092878, 0.5626995549337546, 
       0.05979151094207398}, {0.728278068249634, 0.3198973531255371, 
       0.9930589785671926}, {0.3391081312164841, 0.42431717250820095`, 
       0.07783044894756477}, {-0.09633689457309336, 
       1.3190348940667622`, -0.02150649405034974}, {0.6140716947925511, 
       0.8940766705207293, -0.5825146440768137}, {-0.10432738519687473`, 
       0.2588412137379732, -0.8660259777415362}, {-0.6176062596953688, \
-0.5110123123294431, -0.48672353193459855`}, {-0.76009058655302, \
-0.16826973175714507`, 0.4418375807890409}, {-1.3333030869235176`, 
       0.4638090457744234, -0.07960642235338677}, {-0.7063333316306877, 
       0.321441236742225, 0.6863180732069919}, {-0.12723721017122647`, 
       0.06818818456746756, 
       1.461244246254966}, {-0.04596036464780813, -0.8790993312549511, 
       1.151340330905784}, {-0.7365552101881101, -1.052115223634055, 
       0.4490980220853672}, {-0.9444643085456277, -0.08279030451750868, 
       0.31801404899992586`}, {0, 0, 0}}], {
      RGBColor[1, 0, 0], 
      PointSize[Large], 
      Point3DBox[CompressedData["
1:eJwB2QEm/iFib1JlAgAAABMAAAADAAAAW1dWARzzyT8AuI03uZjSv/L48LmV
7O0/xmP7STT54b9N0zWG8mnVP92Vt8IefPE/SG1XUB11zD+njOK4gyvuP36i
+iH1/u4/FQsDpEq14b+T0TYBDRHwP/ecb0QBy9U/C8jx4XUvyL8sZfr4uQDC
PzboWWVUDeY/PfXVHXyr3T9iQT1/ogHiP2o2JjD+nK4/6dawzg1O5z/DEnC/
MnnUP4w/fp8jx+8/fHpYl/Kz1T9Rc8M2AyjbP7Lf3ECy7LM/YPKW44ipuL8I
y0RVxBr1Pzg4ZGLMBZa/zBDRrnmm4z9kGYCtRpzsPycIOMD1o+K/9G1/EzO1
ur98I/e82pDQP8BcfBx8tuu/qUnmM27D47+P3Sl+Nlrgv9eS9nR6Jt+/BcRn
fqlS6L9f3WbR3InFv/h96CERR9w/ruAfnjVV9b/aKswiDK/dPzAyjyQWYbS/
fLbtW0ia5r+QMdlDfpLUPwt94lFR9uU/aIVCFE9JwL/Y3bDmx3SxP8ohkqVB
Yfc/Gi4m7h2Ip7+UnbXrlCHsvwjmvNbja/I/VJpuO9yR57+kHNLFdtXwvxqE
Y6EFvtw/zCquNg057r/gHVTSvjG1v+PiB5lXWtQ/R8r1SQ==
       "]]}, {
      RGBColor[0, 0, 1], 
      PointSize[Large], 
      Point3DBox[{0, 0, 0}]}, 
     Arrow3DBox[{{0, 0, 0}, {0.2027316099671975, -0.2905715029254452, 
       0.9351299888292302}}]}],"21"},
  "Labeled",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, 
    GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
    BaselinePosition -> {1, 1}]& ),
  InterpretationFunction->(RowBox[{"Labeled", "[", 
     RowBox[{#, ",", #2}], "]"}]& )]], "Output",
 CellChangeTimes->{3.524481004511601*^9, 3.524681542553851*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"project", "[", "testpoly", "]"}]], "Input",
 CellChangeTimes->{{3.524480982603724*^9, 3.524480988491263*^9}, {
  3.5244811247265882`*^9, 3.5244811260452642`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2027316099671975`", ",", 
     RowBox[{"-", "0.2905715029254452`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5616704411469235`"}], ",", "0.3345915136954332`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.22232405112195353`", ",", "0.9428118334802961`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5533803180081543`"}], ",", "1.00416279291412`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.18894837887233992`"}], ",", "0.14064716965803237`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4635916034092878`", ",", "0.5626995549337546`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.728278068249634`", ",", "0.3198973531255371`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3391081312164841`", ",", "0.42431717250820095`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.09633689457309336`"}], ",", "1.3190348940667622`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6140716947925511`", ",", "0.8940766705207293`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.10432738519687473`"}], ",", "0.2588412137379732`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.6176062596953688`"}], ",", 
     RowBox[{"-", "0.5110123123294431`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.76009058655302`"}], ",", 
     RowBox[{"-", "0.16826973175714507`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.3333030869235176`"}], ",", "0.4638090457744234`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7063333316306877`"}], ",", "0.321441236742225`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.12723721017122647`"}], ",", "0.06818818456746756`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.04596036464780813`"}], ",", 
     RowBox[{"-", "0.8790993312549511`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7365552101881101`"}], ",", 
     RowBox[{"-", "1.052115223634055`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.9444643085456277`"}], ",", 
     RowBox[{"-", "0.08279030451750868`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.524481126817041*^9, 3.52468154991184*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"prettyReturn", "[", 
   RowBox[{"testpoly", ",", ".1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{
  3.52448124033709*^9, {3.524481277952393*^9, 3.5244813004163303`*^9}, {
   3.524481375202029*^9, 3.5244813997381887`*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   CylinderBox[{{0, 0, 0}, {0.2027316099671975, -0.2905715029254452, 
     0.9351299888292302}}, 0.1], 
   CylinderBox[{{0.2027316099671975, -0.2905715029254452, 
    0.9351299888292302}, {-0.5616704411469235, 0.3345915136954332, 
    1.0928027731073293`}}, 0.1], 
   CylinderBox[{{-0.5616704411469235, 0.3345915136954332, 
    1.0928027731073293`}, {0.22232405112195353`, 0.9428118334802961, 
    0.9686227477696574}}, 0.1], 
   CylinderBox[{{0.22232405112195353`, 0.9428118334802961, 
    0.9686227477696574}, {-0.5533803180081543, 1.00416279291412, 
    0.3405154388733104}}, 0.1], 
   CylinderBox[{{-0.5533803180081543, 1.00416279291412, 
    0.3405154388733104}, {-0.18894837887233992`, 0.14064716965803237`, 
    0.6891271571651092}}, 0.1], 
   CylinderBox[{{-0.18894837887233992`, 0.14064716965803237`, 
    0.6891271571651092}, {0.4635916034092878, 0.5626995549337546, 
    0.05979151094207398}}, 0.1], 
   CylinderBox[{{0.4635916034092878, 0.5626995549337546, 
    0.05979151094207398}, {0.728278068249634, 0.3198973531255371, 
    0.9930589785671926}}, 0.1], 
   CylinderBox[{{0.728278068249634, 0.3198973531255371, 0.9930589785671926}, {
    0.3391081312164841, 0.42431717250820095`, 0.07783044894756477}}, 0.1], 
   CylinderBox[{{0.3391081312164841, 0.42431717250820095`, 
    0.07783044894756477}, {-0.09633689457309336, 
    1.3190348940667622`, -0.02150649405034974}}, 0.1], 
   CylinderBox[{{-0.09633689457309336, 
    1.3190348940667622`, -0.02150649405034974}, {0.6140716947925511, 
    0.8940766705207293, -0.5825146440768137}}, 0.1], 
   CylinderBox[{{0.6140716947925511, 
    0.8940766705207293, -0.5825146440768137}, {-0.10432738519687473`, 
    0.2588412137379732, -0.8660259777415362}}, 0.1], 
   CylinderBox[{{-0.10432738519687473`, 
    0.2588412137379732, -0.8660259777415362}, {-0.6176062596953688, \
-0.5110123123294431, -0.48672353193459855`}}, 0.1], 
   CylinderBox[{{-0.6176062596953688, -0.5110123123294431, \
-0.48672353193459855`}, {-0.76009058655302, -0.16826973175714507`, 
    0.4418375807890409}}, 0.1], 
   CylinderBox[{{-0.76009058655302, -0.16826973175714507`, 
    0.4418375807890409}, {-1.3333030869235176`, 
    0.4638090457744234, -0.07960642235338677}}, 0.1], 
   CylinderBox[{{-1.3333030869235176`, 
    0.4638090457744234, -0.07960642235338677}, {-0.7063333316306877, 
    0.321441236742225, 0.6863180732069919}}, 0.1], 
   CylinderBox[{{-0.7063333316306877, 0.321441236742225, 
    0.6863180732069919}, {-0.12723721017122647`, 0.06818818456746756, 
    1.461244246254966}}, 0.1], 
   CylinderBox[{{-0.12723721017122647`, 0.06818818456746756, 
    1.461244246254966}, {-0.04596036464780813, -0.8790993312549511, 
    1.151340330905784}}, 0.1], 
   CylinderBox[{{-0.04596036464780813, -0.8790993312549511, 
    1.151340330905784}, {-0.7365552101881101, -1.052115223634055, 
    0.4490980220853672}}, 0.1], 
   CylinderBox[{{-0.7365552101881101, -1.052115223634055, 
    0.4490980220853672}, {-0.9444643085456277, -0.08279030451750868, 
    0.31801404899992586`}}, 0.1], 
   CylinderBox[{{-0.9444643085456277, -0.08279030451750868, 
     0.31801404899992586`}, {0, 0, 0}}, 0.1]}]], "Output",
 CellChangeTimes->{{3.524481240877185*^9, 3.5244813012664413`*^9}, 
   3.5244813436386223`*^9, {3.524481375965867*^9, 3.524481400144137*^9}, 
   3.524681557734313*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics3D", "[", 
  RowBox[{"prettyReturn", "[", 
   RowBox[{"testpoly", ",", "5", ",", ".1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{
  3.52448124033709*^9, {3.524481277952393*^9, 3.5244813004163303`*^9}, {
   3.524481375202029*^9, 3.5244813997381887`*^9}, {3.524482342204152*^9, 
   3.524482342690651*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 1, 0], 
    CylinderBox[{{0, 0, 0}, {0.2027316099671975, -0.2905715029254452, 
      0.9351299888292302}}, 0.1], 
    CylinderBox[{{0.2027316099671975, -0.2905715029254452, 
     0.9351299888292302}, {-0.5616704411469235, 0.3345915136954332, 
     1.0928027731073293`}}, 0.1], 
    CylinderBox[{{-0.5616704411469235, 0.3345915136954332, 
     1.0928027731073293`}, {0.22232405112195353`, 0.9428118334802961, 
     0.9686227477696574}}, 0.1], 
    CylinderBox[{{-0.18894837887233992`, 0.14064716965803237`, 
     0.6891271571651092}, {0.4635916034092878, 0.5626995549337546, 
     0.05979151094207398}}, 0.1], 
    CylinderBox[{{0.4635916034092878, 0.5626995549337546, 
     0.05979151094207398}, {0.728278068249634, 0.3198973531255371, 
     0.9930589785671926}}, 0.1], 
    CylinderBox[{{0.728278068249634, 0.3198973531255371, 
     0.9930589785671926}, {0.3391081312164841, 0.42431717250820095`, 
     0.07783044894756477}}, 0.1], 
    CylinderBox[{{0.3391081312164841, 0.42431717250820095`, 
     0.07783044894756477}, {-0.09633689457309336, 
     1.3190348940667622`, -0.02150649405034974}}, 0.1], 
    CylinderBox[{{-0.09633689457309336, 
     1.3190348940667622`, -0.02150649405034974}, {0.6140716947925511, 
     0.8940766705207293, -0.5825146440768137}}, 0.1], 
    CylinderBox[{{0.6140716947925511, 
     0.8940766705207293, -0.5825146440768137}, {-0.10432738519687473`, 
     0.2588412137379732, -0.8660259777415362}}, 0.1], 
    CylinderBox[{{-0.10432738519687473`, 
     0.2588412137379732, -0.8660259777415362}, {-0.6176062596953688, \
-0.5110123123294431, -0.48672353193459855`}}, 0.1], 
    CylinderBox[{{-0.6176062596953688, -0.5110123123294431, \
-0.48672353193459855`}, {-0.76009058655302, -0.16826973175714507`, 
     0.4418375807890409}}, 0.1], 
    CylinderBox[{{-0.76009058655302, -0.16826973175714507`, 
     0.4418375807890409}, {-1.3333030869235176`, 
     0.4638090457744234, -0.07960642235338677}}, 0.1], 
    CylinderBox[{{-1.3333030869235176`, 
     0.4638090457744234, -0.07960642235338677}, {-0.7063333316306877, 
     0.321441236742225, 0.6863180732069919}}, 0.1], 
    CylinderBox[{{-0.7063333316306877, 0.321441236742225, 
     0.6863180732069919}, {-0.12723721017122647`, 0.06818818456746756, 
     1.461244246254966}}, 0.1], 
    CylinderBox[{{-0.12723721017122647`, 0.06818818456746756, 
     1.461244246254966}, {-0.04596036464780813, -0.8790993312549511, 
     1.151340330905784}}, 0.1], 
    CylinderBox[{{-0.04596036464780813, -0.8790993312549511, 
     1.151340330905784}, {-0.7365552101881101, -1.052115223634055, 
     0.4490980220853672}}, 0.1], 
    CylinderBox[{{-0.7365552101881101, -1.052115223634055, 
     0.4490980220853672}, {-0.9444643085456277, -0.08279030451750868, 
     0.31801404899992586`}}, 0.1], 
    CylinderBox[{{-0.9444643085456277, -0.08279030451750868, 
      0.31801404899992586`}, {0, 0, 0}}, 0.1]}, 
   {RGBColor[1, 0, 0], 
    CylinderBox[{{0.22232405112195353`, 0.9428118334802961, 
     0.9686227477696574}, {-0.5533803180081543, 1.00416279291412, 
     0.3405154388733104}}, 0.1], 
    CylinderBox[{{-0.5533803180081543, 1.00416279291412, 
     0.3405154388733104}, {-0.18894837887233992`, 0.14064716965803237`, 
     0.6891271571651092}}, 0.1]}},
  AutomaticImageSize->True,
  ImageSize->{398.32655800351563`, 423.4565596097738},
  ViewPoint->{2.2020529105734554`, -1.1769315062853165`, 2.2838115527661094`},
  ViewVertical->{0.0678908209861502, 0.27429392828172083`, 
   0.9757869069182292}]], "Output",
 CellChangeTimes->{3.52448234346672*^9, 3.524681565447248*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"v", "=", 
  RowBox[{"generateConfinedPolygon", "[", 
   RowBox[{"20", ",", "0", ",", "1", ",", 
    RowBox[{"10", "^", 
     RowBox[{"-", "10"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5248736177362843`*^9, 3.524873631051262*^9}, {
   3.5248747276809063`*^9, 3.524874732039227*^9}, {3.52487515315795*^9, 
   3.524875189850801*^9}, 3.524912172920169*^9, {3.525081884600507*^9, 
   3.5250818879807*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5745484552400457`"}], ",", 
     RowBox[{"-", "0.6859112795555764`"}], ",", 
     RowBox[{"-", "0.44656442890103676`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3042519327046383`", ",", 
     RowBox[{"-", "0.39017633157553605`"}], ",", 
     RowBox[{"-", "0.07206380314519645`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.31788098524965425`", ",", "0.38475431819086414`", ",", 
     "0.5598355060642298`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3195446269179635`"}], ",", 
     RowBox[{"-", "0.3672503472671864`"}], ",", "0.3919737412633538`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1692772171034198`", ",", 
     RowBox[{"-", "0.4677071378088141`"}], ",", 
     RowBox[{"-", "0.4746066866494914`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.44837190442992664`"}], ",", 
     RowBox[{"-", "0.36907003782352293`"}], ",", "0.305637047817872`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.305824659036229`"}], ",", "0.036812273772561514`", ",", 
     RowBox[{"-", "0.5971031318374307`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5376705896374033`", ",", 
     RowBox[{"-", "0.3310318967745138`"}], ",", 
     RowBox[{"-", "0.20568720004678187`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.27910468630955976`", ",", "0.6062047669919475`", ",", 
     "0.02825960956636543`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5170799383814754`"}], ",", "0.12851450777454926`", ",", 
     "0.3996112753151689`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.06851702811281032`", ",", "0.6150802200881804`", ",", 
     RowBox[{"-", "0.24871734539613244`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5906429302619661`"}], ",", "0.0945299812502276`", ",", 
     "0.2939939941952872`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.23128394801367572`"}], ",", 
     RowBox[{"-", "0.2480194096155196`"}], ",", 
     RowBox[{"-", "0.5740619007187322`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.005901153432544`", ",", 
     RowBox[{"-", "0.572390923177129`"}], ",", "0.3416489427475323`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"0.660691009892907`", ",", "0.07628668259550989`", ",", 
     RowBox[{"-", "0.04625260100512325`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.1694228279875422`"}], ",", "0.606533677719335`", ",", 
     RowBox[{"-", "0.2187319920103839`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.30739619157486325`"}], ",", 
     RowBox[{"-", "0.3495712055926234`"}], ",", 
     RowBox[{"-", "0.47724079852851237`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3016584687075711`", ",", 
     RowBox[{"-", "0.5140575865231248`"}], ",", "0.2986436331213532`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.6646041478272833`"}], ",", 
     RowBox[{"-", "0.4994037083954229`"}], ",", "0.555785266745773`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.524873633616544*^9, 3.524874734975319*^9, {3.524875155630176*^9, 
   3.524875190825097*^9}, 3.5249120126965523`*^9, 3.524912173601516*^9, 
   3.524913119547855*^9, 3.524914039847293*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolyinSphere", "[", 
  RowBox[{"v", ",", ".05", ",", "1", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.524874745928334*^9, 3.524874757542355*^9}, 
   3.524875201809948*^9, {3.524914028645364*^9, 3.52491402940449*^9}}],

Cell[BoxData[
 Graphics3DBox[{{
    CylinderBox[{{0, 0, 
      0}, {-0.5745484552400457, -0.6859112795555764, -0.44656442890103676`}}, 
     0.05], CylinderBox[{{-0.5745484552400457, -0.6859112795555764, \
-0.44656442890103676`}, {
     0.3042519327046383, -0.39017633157553605`, -0.07206380314519645}}, 0.05],
     CylinderBox[{{
     0.3042519327046383, -0.39017633157553605`, -0.07206380314519645}, {
     0.31788098524965425`, 0.38475431819086414`, 0.5598355060642298}}, 0.05], 
    CylinderBox[{{0.31788098524965425`, 0.38475431819086414`, 
     0.5598355060642298}, {-0.3195446269179635, -0.3672503472671864, 
     0.3919737412633538}}, 0.05], 
    CylinderBox[{{-0.3195446269179635, -0.3672503472671864, 
     0.3919737412633538}, {
     0.1692772171034198, -0.4677071378088141, -0.4746066866494914}}, 0.05], 
    CylinderBox[{{
     0.1692772171034198, -0.4677071378088141, -0.4746066866494914}, \
{-0.44837190442992664`, -0.36907003782352293`, 0.305637047817872}}, 0.05], 
    CylinderBox[{{-0.44837190442992664`, -0.36907003782352293`, 
     0.305637047817872}, {-0.305824659036229, 
     0.036812273772561514`, -0.5971031318374307}}, 0.05], 
    CylinderBox[{{-0.305824659036229, 
     0.036812273772561514`, -0.5971031318374307}, {
     0.5376705896374033, -0.3310318967745138, -0.20568720004678187`}}, 0.05], 
    CylinderBox[{{
     0.5376705896374033, -0.3310318967745138, -0.20568720004678187`}, {
     0.27910468630955976`, 0.6062047669919475, 0.02825960956636543}}, 0.05], 
    CylinderBox[{{0.27910468630955976`, 0.6062047669919475, 
     0.02825960956636543}, {-0.5170799383814754, 0.12851450777454926`, 
     0.3996112753151689}}, 0.05], 
    CylinderBox[{{-0.5170799383814754, 0.12851450777454926`, 
     0.3996112753151689}, {0.06851702811281032, 
     0.6150802200881804, -0.24871734539613244`}}, 0.05], 
    CylinderBox[{{0.06851702811281032, 
     0.6150802200881804, -0.24871734539613244`}, {-0.5906429302619661, 
     0.0945299812502276, 0.2939939941952872}}, 0.05], 
    CylinderBox[{{-0.5906429302619661, 0.0945299812502276, 
     0.2939939941952872}, {-0.23128394801367572`, -0.2480194096155196, \
-0.5740619007187322}}, 0.05], 
    CylinderBox[{{-0.23128394801367572`, -0.2480194096155196, \
-0.5740619007187322}, {0.005901153432544, -0.572390923177129, 
     0.3416489427475323}}, 0.05], 
    CylinderBox[{{0.005901153432544, -0.572390923177129, 
     0.3416489427475323}, {0.660691009892907, 
     0.07628668259550989, -0.04625260100512325}}, 0.05], 
    CylinderBox[{{0.660691009892907, 
     0.07628668259550989, -0.04625260100512325}, {-0.1694228279875422, 
     0.606533677719335, -0.2187319920103839}}, 0.05], 
    CylinderBox[{{-0.1694228279875422, 
     0.606533677719335, -0.2187319920103839}, {-0.30739619157486325`, \
-0.3495712055926234, -0.47724079852851237`}}, 0.05], 
    CylinderBox[{{-0.30739619157486325`, -0.3495712055926234, \
-0.47724079852851237`}, {0.3016584687075711, -0.5140575865231248, 
     0.2986436331213532}}, 0.05], 
    CylinderBox[{{0.3016584687075711, -0.5140575865231248, 
     0.2986436331213532}, {-0.6646041478272833, -0.4994037083954229, 
     0.555785266745773}}, 0.05], 
    CylinderBox[{{-0.6646041478272833, -0.4994037083954229, 
      0.555785266745773}, {0, 0, 0}}, 0.05]}, {
    {PointSize[0.05], Point3DBox[{{0, 0, 0}}]}, 
    {Opacity[0.3], SphereBox[{0, 0, 0}, 1]}}},
  AutomaticImageSize->True,
  ImageSize->{380.8136643645434, 351.60949191086576`},
  ViewPoint->{2.2719580644913897`, -2.121008986059073, 1.3377321982553918`},
  ViewVertical->{0.32601885110085127`, 0.0067724033671607425`, 
   0.9453390097100159}]], "Output",
 CellChangeTimes->{
  3.524874758363562*^9, 3.524874905853487*^9, {3.5248749735976267`*^9, 
   3.524874991089368*^9}, {3.524875040565681*^9, 3.52487504450384*^9}, 
   3.524875202743926*^9, 3.524912024833289*^9, 3.52491207025345*^9, {
   3.524912175938324*^9, 3.524912178716219*^9}, {3.524913043679929*^9, 
   3.524913051346098*^9}, {3.524913093960849*^9, 3.5249131220448503`*^9}, {
   3.524914029844014*^9, 3.5249140413199883`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"v", "=", 
  RowBox[{"generateConfinedPolygon", "[", 
   RowBox[{"30", ",", "0.7", ",", "1", ",", 
    RowBox[{"10", "^", 
     RowBox[{"-", "10"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"PolyinSphere", "[", 
  RowBox[{"v", ",", ".02", ",", "1", ",", "0.7"}], "]"}]}], "Input",
 CellChangeTimes->{{3.5248736177362843`*^9, 3.524873631051262*^9}, {
   3.5248747276809063`*^9, 3.524874732039227*^9}, {3.52487515315795*^9, 
   3.524875189850801*^9}, 3.524912172920169*^9, {3.5249137539468803`*^9, 
   3.524913773513628*^9}, {3.524913919252811*^9, 3.524913942131844*^9}, 
   3.524913993348817*^9, 3.524914105129105*^9, 3.52491414574422*^9, {
   3.5250819026765404`*^9, 3.525081905024675*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1558161392855914`", ",", 
     RowBox[{"-", "0.4835024987790406`"}], ",", "0.8613632592655418`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7291309938089929`"}], ",", 
     RowBox[{"-", "0.5231715513577815`"}], ",", "0.39736440377645643`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.47540293033620945`"}], ",", "0.30927911139736236`", ",", 
     "0.8899575055195409`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.25474083936248076`", ",", "0.9038468243550432`", ",", 
     "0.5532390618927341`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3549022857613733`", ",", 
     RowBox[{"-", "0.023643646174103417`"}], ",", "0.9134183391046589`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.10227165879637048`"}], ",", "0.7185914254325476`", ",", 
     "0.4234396835546619`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.4061287718926281`"}], ",", 
     RowBox[{"-", "0.10114744870752201`"}], ",", 
     RowBox[{"-", "0.0620487643453665`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7396616030360905`"}], ",", "0.34976862613535886`", ",", 
     "0.7658585638005535`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.03971640447722102`"}], ",", 
     RowBox[{"-", "0.07308864214013028`"}], ",", "1.341417813297055`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.11904316412440846`"}], ",", 
     RowBox[{"-", "0.784932557096786`"}], ",", "0.6435743452162394`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.6203047316116767`"}], ",", "0.07881804206917636`", ",", 
     "0.5918854353743009`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.274959809864859`"}], ",", 
     RowBox[{"-", "0.8183492703997944`"}], ",", "0.3165171393399017`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.394277866106866`", ",", 
     RowBox[{"-", "0.22624551147866784`"}], ",", "0.7654426027872728`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.5786491171063786`"}], ",", 
     RowBox[{"-", "0.3732216386092563`"}], ",", "0.5870859281455088`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.1765332493060062`", ",", "0.2271680833583108`", ",", 
     "0.8502052455957837`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7432326465697036`"}], ",", "0.22420167431599403`", ",", 
     "0.45774900956258396`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.18219608999164547`"}], ",", 
     RowBox[{"-", "0.5771513930437768`"}], ",", "0.6652851356132599`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7069448295375803`"}], ",", "0.25685427069635164`", ",", 
     "0.4947761528752803`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.22963841023965792`", ",", "0.5650441375239529`", ",", 
     "0.6616019331166982`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.54986943102402`", ",", 
     RowBox[{"-", "0.3804515547894589`"}], ",", "0.6025258030455098`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.13281492621964167`"}], ",", "0.3128587703521722`", ",", 
     "0.8333132841332285`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.0017309044217200253`"}], ",", 
     RowBox[{"-", "0.6547435110569289`"}], ",", "0.6175291228952325`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.807681731481945`", ",", 
     RowBox[{"-", "0.11810349573729989`"}], ",", "0.3790575757512821`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.07438697083380522`", ",", 
     RowBox[{"-", "0.7972683437156323`"}], ",", "0.41089942363352233`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7718997563419046`"}], ",", 
     RowBox[{"-", "0.26549352868199927`"}], ",", "0.37905100919620216`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.08476499025394296`", ",", 
     RowBox[{"-", "0.7769729026327968`"}], ",", "0.44624001099540594`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.6835738636580605`", ",", "0.011752348440011884`", ",", 
     "0.5853098188353036`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.07463578288906808`", ",", "0.7889357829091739`", ",", 
     "0.42662672907431665`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.8249979635191558`"}], ",", "0.3525502478419835`", ",", 
     "0.4416861815087739`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.524913969792185*^9, 3.524913994416531*^9}, {
  3.524914106479045*^9, 3.524914167053561*^9}}],

Cell[BoxData[
 Graphics3DBox[{{
    CylinderBox[{{0, 0, 0}, {0.1558161392855914, -0.4835024987790406, 
      0.8613632592655418}}, 0.02], 
    CylinderBox[{{0.1558161392855914, -0.4835024987790406, 
     0.8613632592655418}, {-0.7291309938089929, -0.5231715513577815, 
     0.39736440377645643`}}, 0.02], 
    CylinderBox[{{-0.7291309938089929, -0.5231715513577815, 
     0.39736440377645643`}, {-0.47540293033620945`, 0.30927911139736236`, 
     0.8899575055195409}}, 0.02], 
    CylinderBox[{{-0.47540293033620945`, 0.30927911139736236`, 
     0.8899575055195409}, {0.25474083936248076`, 0.9038468243550432, 
     0.5532390618927341}}, 0.02], 
    CylinderBox[{{0.25474083936248076`, 0.9038468243550432, 
     0.5532390618927341}, {0.3549022857613733, -0.023643646174103417`, 
     0.9134183391046589}}, 0.02], 
    CylinderBox[{{0.3549022857613733, -0.023643646174103417`, 
     0.9134183391046589}, {-0.10227165879637048`, 0.7185914254325476, 
     0.4234396835546619}}, 0.02], 
    CylinderBox[{{-0.10227165879637048`, 0.7185914254325476, 
     0.4234396835546619}, {-0.4061287718926281, -0.10114744870752201`, \
-0.0620487643453665}}, 0.02], 
    CylinderBox[{{-0.4061287718926281, -0.10114744870752201`, \
-0.0620487643453665}, {-0.7396616030360905, 0.34976862613535886`, 
     0.7658585638005535}}, 0.02], 
    CylinderBox[{{-0.7396616030360905, 0.34976862613535886`, 
     0.7658585638005535}, {-0.03971640447722102, -0.07308864214013028, 
     1.341417813297055}}, 0.02], 
    CylinderBox[{{-0.03971640447722102, -0.07308864214013028, 
     1.341417813297055}, {-0.11904316412440846`, -0.784932557096786, 
     0.6435743452162394}}, 0.02], 
    CylinderBox[{{-0.11904316412440846`, -0.784932557096786, 
     0.6435743452162394}, {-0.6203047316116767, 0.07881804206917636, 
     0.5918854353743009}}, 0.02], 
    CylinderBox[{{-0.6203047316116767, 0.07881804206917636, 
     0.5918854353743009}, {-0.274959809864859, -0.8183492703997944, 
     0.3165171393399017}}, 0.02], 
    CylinderBox[{{-0.274959809864859, -0.8183492703997944, 
     0.3165171393399017}, {0.394277866106866, -0.22624551147866784`, 
     0.7654426027872728}}, 0.02], 
    CylinderBox[{{0.394277866106866, -0.22624551147866784`, 
     0.7654426027872728}, {-0.5786491171063786, -0.3732216386092563, 
     0.5870859281455088}}, 0.02], 
    CylinderBox[{{-0.5786491171063786, -0.3732216386092563, 
     0.5870859281455088}, {0.1765332493060062, 0.2271680833583108, 
     0.8502052455957837}}, 0.02], 
    CylinderBox[{{0.1765332493060062, 0.2271680833583108, 
     0.8502052455957837}, {-0.7432326465697036, 0.22420167431599403`, 
     0.45774900956258396`}}, 0.02], 
    CylinderBox[{{-0.7432326465697036, 0.22420167431599403`, 
     0.45774900956258396`}, {-0.18219608999164547`, -0.5771513930437768, 
     0.6652851356132599}}, 0.02], 
    CylinderBox[{{-0.18219608999164547`, -0.5771513930437768, 
     0.6652851356132599}, {-0.7069448295375803, 0.25685427069635164`, 
     0.4947761528752803}}, 0.02], 
    CylinderBox[{{-0.7069448295375803, 0.25685427069635164`, 
     0.4947761528752803}, {0.22963841023965792`, 0.5650441375239529, 
     0.6616019331166982}}, 0.02], 
    CylinderBox[{{0.22963841023965792`, 0.5650441375239529, 
     0.6616019331166982}, {0.54986943102402, -0.3804515547894589, 
     0.6025258030455098}}, 0.02], 
    CylinderBox[{{0.54986943102402, -0.3804515547894589, 
     0.6025258030455098}, {-0.13281492621964167`, 0.3128587703521722, 
     0.8333132841332285}}, 0.02], 
    CylinderBox[{{-0.13281492621964167`, 0.3128587703521722, 
     0.8333132841332285}, {-0.0017309044217200253`, -0.6547435110569289, 
     0.6175291228952325}}, 0.02], 
    CylinderBox[{{-0.0017309044217200253`, -0.6547435110569289, 
     0.6175291228952325}, {0.807681731481945, -0.11810349573729989`, 
     0.3790575757512821}}, 0.02], 
    CylinderBox[{{0.807681731481945, -0.11810349573729989`, 
     0.3790575757512821}, {0.07438697083380522, -0.7972683437156323, 
     0.41089942363352233`}}, 0.02], 
    CylinderBox[{{0.07438697083380522, -0.7972683437156323, 
     0.41089942363352233`}, {-0.7718997563419046, -0.26549352868199927`, 
     0.37905100919620216`}}, 0.02], 
    CylinderBox[{{-0.7718997563419046, -0.26549352868199927`, 
     0.37905100919620216`}, {0.08476499025394296, -0.7769729026327968, 
     0.44624001099540594`}}, 0.02], 
    CylinderBox[{{0.08476499025394296, -0.7769729026327968, 
     0.44624001099540594`}, {0.6835738636580605, 0.011752348440011884`, 
     0.5853098188353036}}, 0.02], 
    CylinderBox[{{0.6835738636580605, 0.011752348440011884`, 
     0.5853098188353036}, {0.07463578288906808, 0.7889357829091739, 
     0.42662672907431665`}}, 0.02], 
    CylinderBox[{{0.07463578288906808, 0.7889357829091739, 
     0.42662672907431665`}, {-0.8249979635191558, 0.3525502478419835, 
     0.4416861815087739}}, 0.02], 
    CylinderBox[{{-0.8249979635191558, 0.3525502478419835, 
      0.4416861815087739}, {0, 0, 0}}, 0.02]}, {
    {PointSize[0.02], Point3DBox[{{0, 0, 0}}]}, 
    {Opacity[0.3], SphereBox[{0, 0, 0.7}, 1]}}},
  AutomaticImageSize->True,
  ImageSize->{345.2880743650189, 343.51545186505683`},
  ViewPoint->{3.3679944164215425`, 0.24925295316573237`, 0.21091841145685564`},
  ViewVertical->{0.5177426357497201, 0.33252427882306124`, 
   0.7882703642279948}]], "Output",
 CellChangeTimes->{{3.524913969792185*^9, 3.524913994416531*^9}, {
  3.524914106479045*^9, 3.524914167109515*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"v", "=", 
  RowBox[{"generateConfinedPolygon", "[", 
   RowBox[{"50", ",", "0.7", ",", "1", ",", 
    RowBox[{"10", "^", 
     RowBox[{"-", "10"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"PolyinSphere", "[", 
  RowBox[{"v", ",", ".02", ",", "1", ",", "0.7"}], "]"}]}], "Input",
 CellChangeTimes->{{3.5248736177362843`*^9, 3.524873631051262*^9}, {
   3.5248747276809063`*^9, 3.524874732039227*^9}, {3.52487515315795*^9, 
   3.524875189850801*^9}, 3.524912172920169*^9, {3.5249137539468803`*^9, 
   3.524913773513628*^9}, {3.524913919252811*^9, 3.524913942131844*^9}, 
   3.524913993348817*^9, 3.524914105129105*^9, 3.52491414574422*^9, 
   3.524914183474894*^9, {3.525081916147311*^9, 3.525081919027476*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7456129044797497`", ",", 
     RowBox[{"-", "0.024991814125835284`"}], ",", "0.6659105089274169`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.035548673506924144`", ",", 
     RowBox[{"-", "0.09805353999765715`"}], ",", "1.3662466939882778`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0463530778903718`", ",", "0.8149039090488455`", ",", 
     "0.9583349865362614`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.43948985232981214`", ",", "0.034090367901238317`", ",", 
     "0.4727696556652375`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.4489723679124411`"}], ",", 
     RowBox[{"-", "0.17853155979832833`"}], ",", "0.879496589938745`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5462440924845877`", ",", 
     RowBox[{"-", "0.24558783284881383`"}], ",", "0.9505434280062282`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.09539234174817607`"}], ",", "0.44680981560468847`", ",", 
     "1.2805255224918595`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.7744691057337643`", ",", "0.18075847090257194`", ",", 
     "0.8651248193547327`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.13721542087264263`"}], ",", 
     RowBox[{"-", "0.10316023779738989`"}], ",", "0.5681037918220032`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7673903958188082`", ",", 
     RowBox[{"-", "0.4556441167546002`"}], ",", "0.8077773854514881`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.21697711962909905`", ",", 
     RowBox[{"-", "0.18339186716584382`"}], ",", "0.01852207949024698`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.07180116994960214`", ",", 
     RowBox[{"-", "0.29127455883666975`"}], ",", "1.0020286979085034`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.2622034714853955`"}], ",", 
     RowBox[{"-", "0.4169037557645949`"}], ",", "0.06786693227092239`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.019279301740362208`", ",", "0.23846889931743143`", ",", 
     "0.7687621679145045`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.2047946393614028`"}], ",", 
     RowBox[{"-", "0.18036148992258222`"}], ",", "1.6487462438887128`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.8806773561555625`"}], ",", 
     RowBox[{"-", "0.2711862652787111`"}], ",", "0.9173548211057736`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.20983482915233062`"}], ",", 
     RowBox[{"-", "0.5073322466288493`"}], ",", "0.21435739617727623`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.13064406314027055`"}], ",", "0.4855954840133066`", ",", 
     "0.30280706717859596`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.6775896729265823`"}], ",", 
     RowBox[{"-", "0.3433617392251413`"}], ",", "0.1858437311442661`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.24901146981356487`", ",", "0.0015032612869924633`", ",", 
     "0.03591556936530161`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3588482207409313`"}], ",", "0.39379451752008665`", ",", 
     "0.7262880535229865`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.46740084244183105`", ",", "0.44852089787399907`", ",", 
     "0.16564778661115775`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.16292964213698938`"}], ",", 
     RowBox[{"-", "0.25912010215689674`"}], ",", 
     RowBox[{"-", "0.15361338435377953`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.015384560884045412`", ",", 
     RowBox[{"-", "0.8032385326739924`"}], ",", "0.6662275627649804`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7111810780278787`", ",", 
     RowBox[{"-", "0.0961046881318107`"}], ",", "0.5404144766669732`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2834456928444852`", ",", 
     RowBox[{"-", "0.12242452428110416`"}], ",", "1.4439352049776681`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.22461494725270287`", ",", 
     RowBox[{"-", "0.18923675377817617`"}], ",", "0.4479055521245285`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.14503703112056449`"}], ",", "0.26012198211943943`", ",", 
     "1.2611915666097318`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.4689090791314019`", ",", 
     RowBox[{"-", "0.48861259992732464`"}], ",", "1.0112581767760846`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.356424157149625`"}], ",", 
     RowBox[{"-", "0.734136908093836`"}], ",", "0.5027870731829281`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.654730882311046`"}], ",", "0.2199389517708898`", ",", 
     "0.5302160969871395`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.14826710484690414`"}], ",", 
     RowBox[{"-", "0.6351477305646895`"}], ",", "0.6412170330601484`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7462884401350742`"}], ",", "0.14721072860492015`", ",", 
     "0.46718909304502293`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.14567223867676943`", ",", 
     RowBox[{"-", "0.008059557670633731`"}], ",", "0.8918033717185296`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7058473069653697`"}], ",", "0.2999315618293655`", ",", 
     "0.46747338963083696`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.2469170865955153`"}], ",", 
     RowBox[{"-", "0.5688416532474572`"}], ",", "0.6535275580774427`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.6691766401016901`"}], ",", "0.3254536134237072`", ",", 
     "0.5054301391859668`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.10318422534309368`", ",", 
     RowBox[{"-", "0.19230669956158541`"}], ",", "0.87337436298457`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3497364215508406`"}], ",", "0.6328330539186268`", ",", 
     "0.5357247297198583`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.27816159100625343`", ",", 
     RowBox[{"-", "0.07811380844281907`"}], ",", "0.8524243424844884`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.6842875767857027`"}], ",", 
     RowBox[{"-", "0.05579443610607288`"}], ",", "0.5818814715100986`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.27809593986106407`", ",", 
     RowBox[{"-", "0.06702873966214648`"}], ",", "0.8533437291265348`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3415717606883607`"}], ",", 
     RowBox[{"-", "0.7201126691359586`"}], ",", "0.4180354223383078`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.05167897742163047`"}], ",", "0.11159330981722199`", ",", 
     "0.8915619145046912`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.6407537785765793`"}], ",", "0.585786998227539`", ",", 
     "0.23724454157617425`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.33400726894811317`", ",", "0.7291569267668373`", ",", 
     "0.4083759642290607`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.6882707646624624`", ",", 
     RowBox[{"-", "0.19583128511914488`"}], ",", "0.5458320789574448`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.30424879066621235`", ",", "0.7217766245758502`", ",", 
     "0.4432511472342203`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2763873445716517`", ",", 
     RowBox[{"-", "0.13934209826395688`"}], ",", "0.9508910639037623`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.524914185903737*^9}],

Cell[BoxData[
 Graphics3DBox[{{
    CylinderBox[{{0, 0, 0}, {0.7456129044797497, -0.024991814125835284`, 
      0.6659105089274169}}, 0.02], 
    CylinderBox[{{0.7456129044797497, -0.024991814125835284`, 
     0.6659105089274169}, {0.035548673506924144`, -0.09805353999765715, 
     1.3662466939882778`}}, 0.02], 
    CylinderBox[{{0.035548673506924144`, -0.09805353999765715, 
     1.3662466939882778`}, {0.0463530778903718, 0.8149039090488455, 
     0.9583349865362614}}, 0.02], 
    CylinderBox[{{0.0463530778903718, 0.8149039090488455, 
     0.9583349865362614}, {0.43948985232981214`, 0.034090367901238317`, 
     0.4727696556652375}}, 0.02], 
    CylinderBox[{{0.43948985232981214`, 0.034090367901238317`, 
     0.4727696556652375}, {-0.4489723679124411, -0.17853155979832833`, 
     0.879496589938745}}, 0.02], 
    CylinderBox[{{-0.4489723679124411, -0.17853155979832833`, 
     0.879496589938745}, {0.5462440924845877, -0.24558783284881383`, 
     0.9505434280062282}}, 0.02], 
    CylinderBox[{{0.5462440924845877, -0.24558783284881383`, 
     0.9505434280062282}, {-0.09539234174817607, 0.44680981560468847`, 
     1.2805255224918595`}}, 0.02], 
    CylinderBox[{{-0.09539234174817607, 0.44680981560468847`, 
     1.2805255224918595`}, {0.7744691057337643, 0.18075847090257194`, 
     0.8651248193547327}}, 0.02], 
    CylinderBox[{{0.7744691057337643, 0.18075847090257194`, 
     0.8651248193547327}, {-0.13721542087264263`, -0.10316023779738989`, 
     0.5681037918220032}}, 0.02], 
    CylinderBox[{{-0.13721542087264263`, -0.10316023779738989`, 
     0.5681037918220032}, {0.7673903958188082, -0.4556441167546002, 
     0.8077773854514881}}, 0.02], 
    CylinderBox[{{0.7673903958188082, -0.4556441167546002, 
     0.8077773854514881}, {0.21697711962909905`, -0.18339186716584382`, 
     0.01852207949024698}}, 0.02], 
    CylinderBox[{{0.21697711962909905`, -0.18339186716584382`, 
     0.01852207949024698}, {0.07180116994960214, -0.29127455883666975`, 
     1.0020286979085034`}}, 0.02], 
    CylinderBox[{{0.07180116994960214, -0.29127455883666975`, 
     1.0020286979085034`}, {-0.2622034714853955, -0.4169037557645949, 
     0.06786693227092239}}, 0.02], 
    CylinderBox[{{-0.2622034714853955, -0.4169037557645949, 
     0.06786693227092239}, {0.019279301740362208`, 0.23846889931743143`, 
     0.7687621679145045}}, 0.02], 
    CylinderBox[{{0.019279301740362208`, 0.23846889931743143`, 
     0.7687621679145045}, {-0.2047946393614028, -0.18036148992258222`, 
     1.6487462438887128`}}, 0.02], 
    CylinderBox[{{-0.2047946393614028, -0.18036148992258222`, 
     1.6487462438887128`}, {-0.8806773561555625, -0.2711862652787111, 
     0.9173548211057736}}, 0.02], 
    CylinderBox[{{-0.8806773561555625, -0.2711862652787111, 
     0.9173548211057736}, {-0.20983482915233062`, -0.5073322466288493, 
     0.21435739617727623`}}, 0.02], 
    CylinderBox[{{-0.20983482915233062`, -0.5073322466288493, 
     0.21435739617727623`}, {-0.13064406314027055`, 0.4855954840133066, 
     0.30280706717859596`}}, 0.02], 
    CylinderBox[{{-0.13064406314027055`, 0.4855954840133066, 
     0.30280706717859596`}, {-0.6775896729265823, -0.3433617392251413, 
     0.1858437311442661}}, 0.02], 
    CylinderBox[{{-0.6775896729265823, -0.3433617392251413, 
     0.1858437311442661}, {0.24901146981356487`, 0.0015032612869924633`, 
     0.03591556936530161}}, 0.02], 
    CylinderBox[{{0.24901146981356487`, 0.0015032612869924633`, 
     0.03591556936530161}, {-0.3588482207409313, 0.39379451752008665`, 
     0.7262880535229865}}, 0.02], 
    CylinderBox[{{-0.3588482207409313, 0.39379451752008665`, 
     0.7262880535229865}, {0.46740084244183105`, 0.44852089787399907`, 
     0.16564778661115775`}}, 0.02], 
    CylinderBox[{{0.46740084244183105`, 0.44852089787399907`, 
     0.16564778661115775`}, {-0.16292964213698938`, -0.25912010215689674`, \
-0.15361338435377953`}}, 0.02], 
    CylinderBox[{{-0.16292964213698938`, -0.25912010215689674`, \
-0.15361338435377953`}, {0.015384560884045412`, -0.8032385326739924, 
     0.6662275627649804}}, 0.02], 
    CylinderBox[{{0.015384560884045412`, -0.8032385326739924, 
     0.6662275627649804}, {0.7111810780278787, -0.0961046881318107, 
     0.5404144766669732}}, 0.02], 
    CylinderBox[{{0.7111810780278787, -0.0961046881318107, 
     0.5404144766669732}, {0.2834456928444852, -0.12242452428110416`, 
     1.4439352049776681`}}, 0.02], 
    CylinderBox[{{0.2834456928444852, -0.12242452428110416`, 
     1.4439352049776681`}, {0.22461494725270287`, -0.18923675377817617`, 
     0.4479055521245285}}, 0.02], 
    CylinderBox[{{0.22461494725270287`, -0.18923675377817617`, 
     0.4479055521245285}, {-0.14503703112056449`, 0.26012198211943943`, 
     1.2611915666097318`}}, 0.02], 
    CylinderBox[{{-0.14503703112056449`, 0.26012198211943943`, 
     1.2611915666097318`}, {0.4689090791314019, -0.48861259992732464`, 
     1.0112581767760846`}}, 0.02], 
    CylinderBox[{{0.4689090791314019, -0.48861259992732464`, 
     1.0112581767760846`}, {-0.356424157149625, -0.734136908093836, 
     0.5027870731829281}}, 0.02], 
    CylinderBox[{{-0.356424157149625, -0.734136908093836, 
     0.5027870731829281}, {-0.654730882311046, 0.2199389517708898, 
     0.5302160969871395}}, 0.02], 
    CylinderBox[{{-0.654730882311046, 0.2199389517708898, 
     0.5302160969871395}, {-0.14826710484690414`, -0.6351477305646895, 
     0.6412170330601484}}, 0.02], 
    CylinderBox[{{-0.14826710484690414`, -0.6351477305646895, 
     0.6412170330601484}, {-0.7462884401350742, 0.14721072860492015`, 
     0.46718909304502293`}}, 0.02], 
    CylinderBox[{{-0.7462884401350742, 0.14721072860492015`, 
     0.46718909304502293`}, {0.14567223867676943`, -0.008059557670633731, 
     0.8918033717185296}}, 0.02], 
    CylinderBox[{{0.14567223867676943`, -0.008059557670633731, 
     0.8918033717185296}, {-0.7058473069653697, 0.2999315618293655, 
     0.46747338963083696`}}, 0.02], 
    CylinderBox[{{-0.7058473069653697, 0.2999315618293655, 
     0.46747338963083696`}, {-0.2469170865955153, -0.5688416532474572, 
     0.6535275580774427}}, 0.02], 
    CylinderBox[{{-0.2469170865955153, -0.5688416532474572, 
     0.6535275580774427}, {-0.6691766401016901, 0.3254536134237072, 
     0.5054301391859668}}, 0.02], 
    CylinderBox[{{-0.6691766401016901, 0.3254536134237072, 
     0.5054301391859668}, {0.10318422534309368`, -0.19230669956158541`, 
     0.87337436298457}}, 0.02], 
    CylinderBox[{{0.10318422534309368`, -0.19230669956158541`, 
     0.87337436298457}, {-0.3497364215508406, 0.6328330539186268, 
     0.5357247297198583}}, 0.02], 
    CylinderBox[{{-0.3497364215508406, 0.6328330539186268, 
     0.5357247297198583}, {0.27816159100625343`, -0.07811380844281907, 
     0.8524243424844884}}, 0.02], 
    CylinderBox[{{0.27816159100625343`, -0.07811380844281907, 
     0.8524243424844884}, {-0.6842875767857027, -0.05579443610607288, 
     0.5818814715100986}}, 0.02], 
    CylinderBox[{{-0.6842875767857027, -0.05579443610607288, 
     0.5818814715100986}, {0.27809593986106407`, -0.06702873966214648, 
     0.8533437291265348}}, 0.02], 
    CylinderBox[{{0.27809593986106407`, -0.06702873966214648, 
     0.8533437291265348}, {-0.3415717606883607, -0.7201126691359586, 
     0.4180354223383078}}, 0.02], 
    CylinderBox[{{-0.3415717606883607, -0.7201126691359586, 
     0.4180354223383078}, {-0.05167897742163047, 0.11159330981722199`, 
     0.8915619145046912}}, 0.02], 
    CylinderBox[{{-0.05167897742163047, 0.11159330981722199`, 
     0.8915619145046912}, {-0.6407537785765793, 0.585786998227539, 
     0.23724454157617425`}}, 0.02], 
    CylinderBox[{{-0.6407537785765793, 0.585786998227539, 
     0.23724454157617425`}, {0.33400726894811317`, 0.7291569267668373, 
     0.4083759642290607}}, 0.02], 
    CylinderBox[{{0.33400726894811317`, 0.7291569267668373, 
     0.4083759642290607}, {0.6882707646624624, -0.19583128511914488`, 
     0.5458320789574448}}, 0.02], 
    CylinderBox[{{0.6882707646624624, -0.19583128511914488`, 
     0.5458320789574448}, {0.30424879066621235`, 0.7217766245758502, 
     0.4432511472342203}}, 0.02], 
    CylinderBox[{{0.30424879066621235`, 0.7217766245758502, 
     0.4432511472342203}, {0.2763873445716517, -0.13934209826395688`, 
     0.9508910639037623}}, 0.02], 
    CylinderBox[{{0.2763873445716517, -0.13934209826395688`, 
      0.9508910639037623}, {0, 0, 0}}, 0.02]}, {
    {PointSize[0.02], Point3DBox[{{0, 0, 0}}]}, 
    {Opacity[0.3], SphereBox[{0, 0, 0.7}, 1]}}},
  AutomaticImageSize->True,
  ImageSize->{385.7312524601173, 398.29681975185446`},
  ViewPoint->{2.800774905975422, -0.7677012523433118, 1.7367483160230437`},
  ViewVertical->{0.2022363384286849, 0.2653083024417624, 
   0.942715210482163}]], "Output",
 CellChangeTimes->{3.524914185945982*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Knot Finder", "Subsection",
 CellChangeTimes->{{3.5234679674283433`*^9, 3.523467969083438*^9}}],

Cell["\<\
1. lookupdt[dt_]
Given a DT code of a knot this will look up what knot it is using the \
HOMFLYPT as identifier.
Limitations: Works for knots up to including 9 crossings, connected sums up \
to eight crossings. Mirror images are grouped together.
Conversion of DT code into PD code does not work correctly if the knot is a \
connected sum, we need to split the DT code into diagrammatically prime \
factors before calling this function.

Return : {knot in Rolfson notation, {{positions of knot in our list}}, DT \
code, HOMFLYPT polynomial}

2. lookuppd[pd_]
Given a PD code of a knot this will look up what knot it is using the \
HOMFLYPT as identifier.
Limitations: Works for knots up to including 9 crossings, connected sums up \
to eight crossings. Mirror images are grouped together.

Return : {knot in Rolfson notation, {{positions of knot in our list}}, PD \
code, HOMFLYPT polynomial}

3. getstr[x_]
Tell you the knot located in position x in our list.
Limiations: List contains knots up to including 9 crossings, connected sums \
up to eight crossings. Mirror images are grouped together.
The length of the list is 101, elements 100 are not found and 101 unknown. \
Not found means a HOMFLYPT calculations resulted into a polynomial not in the \
list, unknown means calculations broke down somewhere.\
\>", "Text",
 CellChangeTimes->{{3.524912305990594*^9, 3.524912416480485*^9}, {
  3.524912484001294*^9, 3.524912697446933*^9}, {3.52491331579517*^9, 
  3.524913341256167*^9}, {3.524913380739408*^9, 3.524913469457965*^9}, {
  3.5249135281478786`*^9, 3.5249136043483067`*^9}, {3.5250820121158*^9, 
  3.52508201228581*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lookupdt", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "14"}], ",", 
    RowBox[{"-", "10"}], ",", 
    RowBox[{"-", "12"}], ",", 
    RowBox[{"-", "16"}], ",", 
    RowBox[{"-", "2"}], ",", 
    RowBox[{"-", "4"}], ",", 
    RowBox[{"-", "6"}], ",", 
    RowBox[{"-", "8"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{
  3.524912301329281*^9, {3.5249124240585403`*^9, 3.524912445685079*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"KnotTheory", "::", "credits"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\(\\\"The GaussCode to PD conversion was written by \
Siddarth Sankaran at the University of Toronto in the summer of 2005.\\\"\\)\
\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.524912447027731*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["8", "2"], ",", 
   RowBox[{"{", 
    RowBox[{"{", "22", "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "14"}], ",", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"-", "12"}], ",", 
     RowBox[{"-", "16"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "6"}], ",", 
     RowBox[{"-", "8"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"3", " ", 
     SuperscriptBox["v", "2"]}], "-", 
    RowBox[{"3", " ", 
     SuperscriptBox["v", "4"]}], "+", 
    SuperscriptBox["v", "6"], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["v", "2"], " ", 
     SuperscriptBox["z", "2"]}], "-", 
    RowBox[{"7", " ", 
     SuperscriptBox["v", "4"], " ", 
     SuperscriptBox["z", "2"]}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["v", "6"], " ", 
     SuperscriptBox["z", "2"]}], "+", 
    RowBox[{
     SuperscriptBox["v", "2"], " ", 
     SuperscriptBox["z", "4"]}], "-", 
    RowBox[{"5", " ", 
     SuperscriptBox["v", "4"], " ", 
     SuperscriptBox["z", "4"]}], "+", 
    RowBox[{
     SuperscriptBox["v", "6"], " ", 
     SuperscriptBox["z", "4"]}], "-", 
    RowBox[{
     SuperscriptBox["v", "4"], " ", 
     SuperscriptBox["z", "6"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.524912447287057*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lookupdt", "[", 
  RowBox[{"{", 
   RowBox[{
   "14", ",", "10", ",", "12", ",", "16", ",", "2", ",", "4", ",", "6", ",", 
    "8"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.5249124597184668`*^9, 3.5249124678513317`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["8", "2"], ",", 
   RowBox[{"{", 
    RowBox[{"{", "22", "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "14", ",", "10", ",", "12", ",", "16", ",", "2", ",", "4", ",", "6", ",", 
     "8"}], "}"}], ",", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox["v", "6"]], "-", 
    FractionBox["3", 
     SuperscriptBox["v", "4"]], "+", 
    FractionBox["3", 
     SuperscriptBox["v", "2"]], "+", 
    FractionBox[
     RowBox[{"3", " ", 
      SuperscriptBox["z", "2"]}], 
     SuperscriptBox["v", "6"]], "-", 
    FractionBox[
     RowBox[{"7", " ", 
      SuperscriptBox["z", "2"]}], 
     SuperscriptBox["v", "4"]], "+", 
    FractionBox[
     RowBox[{"4", " ", 
      SuperscriptBox["z", "2"]}], 
     SuperscriptBox["v", "2"]], "+", 
    FractionBox[
     SuperscriptBox["z", "4"], 
     SuperscriptBox["v", "6"]], "-", 
    FractionBox[
     RowBox[{"5", " ", 
      SuperscriptBox["z", "4"]}], 
     SuperscriptBox["v", "4"]], "+", 
    FractionBox[
     SuperscriptBox["z", "4"], 
     SuperscriptBox["v", "2"]], "-", 
    FractionBox[
     SuperscriptBox["z", "6"], 
     SuperscriptBox["v", "4"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.5249124687492113`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lookupdt", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "24"}], ",", "18", ",", "8", ",", "14", ",", "16", ",", 
    RowBox[{"-", "10"}], ",", 
    RowBox[{"-", "6"}], ",", 
    RowBox[{"-", "12"}], ",", 
    RowBox[{"-", "22"}], ",", 
    RowBox[{"-", "26"}], ",", "4", ",", "28", ",", 
    RowBox[{"-", "20"}], ",", 
    RowBox[{"-", "2"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.52491272173897*^9, 3.524912723889978*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Not Found\"\>", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "24"}], ",", "18", ",", "8", ",", "14", ",", "16", ",", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"-", "6"}], ",", 
     RowBox[{"-", "12"}], ",", 
     RowBox[{"-", "22"}], ",", 
     RowBox[{"-", "26"}], ",", "4", ",", "28", ",", 
     RowBox[{"-", "20"}], ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{
    SqrtBox["v"], "+", "v", "-", 
    SuperscriptBox["v", 
     RowBox[{"5", "/", "2"}]], "+", 
    SuperscriptBox["v", "4"], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["v", 
      RowBox[{"9", "/", "2"}]]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["v", "5"]}], "+", 
    SuperscriptBox["v", 
     RowBox[{"11", "/", "2"}]], "+", 
    SuperscriptBox["v", "6"], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["v", 
      RowBox[{"13", "/", "2"}]]}], "-", 
    RowBox[{"3", " ", 
     SuperscriptBox["v", "7"]}], "-", 
    SuperscriptBox["v", 
     RowBox[{"15", "/", "2"}]], "-", 
    RowBox[{"3", " ", 
     SuperscriptBox["v", "8"]}], "+", 
    SuperscriptBox["v", 
     RowBox[{"17", "/", "2"}]], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["v", "9"]}], "+", 
    SuperscriptBox["v", 
     RowBox[{"19", "/", "2"}]], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["v", "10"]}], "-", 
    SuperscriptBox["v", 
     RowBox[{"21", "/", "2"}]], "-", 
    SuperscriptBox["v", "11"], "-", 
    SuperscriptBox["v", "12"], "+", 
    RowBox[{
     SuperscriptBox["v", "4"], " ", 
     SuperscriptBox["z", "2"]}], "+", 
    RowBox[{
     SuperscriptBox["v", "5"], " ", 
     SuperscriptBox["z", "2"]}], "+", 
    RowBox[{
     SuperscriptBox["v", 
      RowBox[{"11", "/", "2"}]], " ", 
     SuperscriptBox["z", "2"]}], "-", 
    RowBox[{
     SuperscriptBox["v", "7"], " ", 
     SuperscriptBox["z", "2"]}], "-", 
    RowBox[{
     SuperscriptBox["v", 
      RowBox[{"15", "/", "2"}]], " ", 
     SuperscriptBox["z", "2"]}], "-", 
    RowBox[{
     SuperscriptBox["v", "8"], " ", 
     SuperscriptBox["z", "2"]}], "+", 
    RowBox[{
     SuperscriptBox["v", 
      RowBox[{"19", "/", "2"}]], " ", 
     SuperscriptBox["z", "2"]}], "+", 
    RowBox[{
     SuperscriptBox["v", "10"], " ", 
     SuperscriptBox["z", "2"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.5249127247957478`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lookupdt", "[", 
  RowBox[{"{", 
   RowBox[{"10", ",", 
    RowBox[{"-", "8"}], ",", "14", ",", 
    RowBox[{"-", "16"}], ",", "18", ",", 
    RowBox[{"-", "6"}], ",", "4", ",", "12", ",", "2"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.524912919827853*^9, 3.5249129222435493`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["7", "1"], ",", 
   RowBox[{"{", 
    RowBox[{"{", "12", "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", 
     RowBox[{"-", "8"}], ",", "14", ",", 
     RowBox[{"-", "16"}], ",", "18", ",", 
     RowBox[{"-", "6"}], ",", "4", ",", "12", ",", "2"}], "}"}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["3", 
      SuperscriptBox["v", "8"]]}], "+", 
    FractionBox["4", 
     SuperscriptBox["v", "6"]], "-", 
    FractionBox[
     RowBox[{"4", " ", 
      SuperscriptBox["z", "2"]}], 
     SuperscriptBox["v", "8"]], "+", 
    FractionBox[
     RowBox[{"10", " ", 
      SuperscriptBox["z", "2"]}], 
     SuperscriptBox["v", "6"]], "-", 
    FractionBox[
     SuperscriptBox["z", "4"], 
     SuperscriptBox["v", "8"]], "+", 
    FractionBox[
     RowBox[{"6", " ", 
      SuperscriptBox["z", "4"]}], 
     SuperscriptBox["v", "6"]], "+", 
    FractionBox[
     SuperscriptBox["z", "6"], 
     SuperscriptBox["v", "6"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.524912922909381*^9}]
}, Open  ]],

Cell["\<\
The example below showes how this fails for a diagrammatically non-prime \
diagram. The DT code actually presents the unknot.\
\>", "Text",
 CellChangeTimes->{{3.524912843191944*^9, 3.524912886024103*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"completedt", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "24"}], ",", "18", ",", "8", ",", "14", ",", "16", ",", 
    RowBox[{"-", "10"}], ",", 
    RowBox[{"-", "6"}], ",", 
    RowBox[{"-", "12"}], ",", 
    RowBox[{"-", "22"}], ",", 
    RowBox[{"-", "26"}], ",", "4", ",", "28", ",", 
    RowBox[{"-", "20"}], ",", 
    RowBox[{"-", "2"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{3.5249128150284967`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "24"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "27"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6"}], ",", "13"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "10"}], ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", 
     RowBox[{"-", "10"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "12"}], ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", 
     RowBox[{"-", "6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", 
     RowBox[{"-", "12"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", 
     RowBox[{"-", "22"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", 
     RowBox[{"-", "26"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "20"}], ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "22"}], ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "24"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25", ",", 
     RowBox[{"-", "20"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "26"}], ",", "19"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", "23"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.524912815774159*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"decomposedt", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "24"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "27"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "18"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "21"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "8"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "6"}], ",", "13"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", "14"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"9", ",", "16"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "10"}], ",", "11"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"11", ",", 
      RowBox[{"-", "10"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "12"}], ",", "15"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"13", ",", 
      RowBox[{"-", "6"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"14", ",", "7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"15", ",", 
      RowBox[{"-", "12"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"16", ",", "9"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"17", ",", 
      RowBox[{"-", "22"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"18", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"19", ",", 
      RowBox[{"-", "26"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "20"}], ",", "25"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"21", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "22"}], ",", "17"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"23", ",", "28"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "24"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"25", ",", 
      RowBox[{"-", "20"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "26"}], ",", "19"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"27", ",", 
      RowBox[{"-", "2"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"28", ",", "23"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.524912763170567*^9, 3.524912774496482*^9}, 
   3.52491282378139*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "12"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "15"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", 
       RowBox[{"-", "10"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", 
       RowBox[{"-", "14"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "8"}], ",", "13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "10"}], ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "16"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "12"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", 
       RowBox[{"-", "8"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "14"}], ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", 
       RowBox[{"-", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "11"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "6"}], ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", 
       RowBox[{"-", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", 
       RowBox[{"-", "6"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.524912775347*^9, 3.5249128249857063`*^9}]
}, Open  ]],

Cell["PD examples", "Text",
 CellChangeTimes->{{3.524912954402802*^9, 3.524912956761341*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lookuppd", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "24", ",", "2", ",", "25"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"27", ",", "2", ",", "28", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"18", ",", "4", ",", "19", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "22", ",", "5", ",", "21"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", "5", ",", "9", ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"13", ",", "7", ",", "14", ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"14", ",", "7", ",", "15", ",", "8"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"16", ",", "9", ",", "17", ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"11", ",", "11", ",", "12", ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"15", ",", "13", ",", "16", ",", "12"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"17", ",", "22", ",", "18", ",", "23"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"19", ",", "26", ",", "20", ",", "27"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"25", ",", "20", ",", "26", ",", "21"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"28", ",", "24", ",", "1", ",", "23"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.524912301329281*^9, {3.5249124240585403`*^9, 3.524912445685079*^9}, {
   3.524912961508645*^9, 3.524912968235117*^9}, 3.524913190003566*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["0", "1"], ",", 
   RowBox[{"{", 
    RowBox[{"{", "1", "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "24", ",", "2", ",", "25"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"27", ",", "2", ",", "28", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", "4", ",", "19", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "22", ",", "5", ",", "21"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "5", ",", "9", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "7", ",", "14", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "7", ",", "15", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "9", ",", "17", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "11", ",", "12", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "13", ",", "16", ",", "12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "22", ",", "18", ",", "23"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"19", ",", "26", ",", "20", ",", "27"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"25", ",", "20", ",", "26", ",", "21"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"28", ",", "24", ",", "1", ",", "23"}], "}"}]}], "}"}], ",", 
   "1"}], "}"}]], "Output",
 CellChangeTimes->{3.524912447287057*^9, 3.524912986517499*^9, 
  3.524913191823708*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lookuppd", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"10", ",", "2", ",", "11", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "18", ",", "3", ",", "17"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "9", ",", "4", ",", "8"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "14", ",", "5", ",", "13"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"14", ",", "6", ",", "15", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"11", ",", "7", ",", "12", ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", "17", ",", "8", ",", "16"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"18", ",", "10", ",", "1", ",", "9"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"12", ",", "16", ",", "13", ",", "15"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.524913251963449*^9, 3.524913255698057*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["7", "1"], ",", 
   RowBox[{"{", 
    RowBox[{"{", "12", "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"10", ",", "2", ",", "11", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "18", ",", "3", ",", "17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "9", ",", "4", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "14", ",", "5", ",", "13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "6", ",", "15", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "7", ",", "12", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "17", ",", "8", ",", "16"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", "10", ",", "1", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "16", ",", "13", ",", "15"}], "}"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["3", 
      SuperscriptBox["v", "8"]]}], "+", 
    FractionBox["4", 
     SuperscriptBox["v", "6"]], "-", 
    FractionBox[
     RowBox[{"4", " ", 
      SuperscriptBox["z", "2"]}], 
     SuperscriptBox["v", "8"]], "+", 
    FractionBox[
     RowBox[{"10", " ", 
      SuperscriptBox["z", "2"]}], 
     SuperscriptBox["v", "6"]], "-", 
    FractionBox[
     SuperscriptBox["z", "4"], 
     SuperscriptBox["v", "8"]], "+", 
    FractionBox[
     RowBox[{"6", " ", 
      SuperscriptBox["z", "4"]}], 
     SuperscriptBox["v", "6"]], "+", 
    FractionBox[
     SuperscriptBox["z", "6"], 
     SuperscriptBox["v", "6"]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.524913257482226*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lookuppd", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "9", ",", "2", ",", "8"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"15", ",", "2", ",", "16", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"11", ",", "4", ",", "12", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "12", ",", "6", ",", "13"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"13", ",", "6", ",", "14", ",", "7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", "14", ",", "8", ",", "15"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"9", ",", "1", ",", "10", ",", "16"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "10", ",", "4", ",", "11"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.524913291101181*^9, 3.524913293835063*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["8", "2"], ",", 
   RowBox[{"{", 
    RowBox[{"{", "22", "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "9", ",", "2", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "2", ",", "16", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "4", ",", "12", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "12", ",", "6", ",", "13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "6", ",", "14", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "14", ",", "8", ",", "15"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "1", ",", "10", ",", "16"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "10", ",", "4", ",", "11"}], "}"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"3", " ", 
     SuperscriptBox["v", "2"]}], "-", 
    RowBox[{"3", " ", 
     SuperscriptBox["v", "4"]}], "+", 
    SuperscriptBox["v", "6"], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["v", "2"], " ", 
     SuperscriptBox["z", "2"]}], "-", 
    RowBox[{"7", " ", 
     SuperscriptBox["v", "4"], " ", 
     SuperscriptBox["z", "2"]}], "+", 
    RowBox[{"3", " ", 
     SuperscriptBox["v", "6"], " ", 
     SuperscriptBox["z", "2"]}], "+", 
    RowBox[{
     SuperscriptBox["v", "2"], " ", 
     SuperscriptBox["z", "4"]}], "-", 
    RowBox[{"5", " ", 
     SuperscriptBox["v", "4"], " ", 
     SuperscriptBox["z", "4"]}], "+", 
    RowBox[{
     SuperscriptBox["v", "6"], " ", 
     SuperscriptBox["z", "4"]}], "-", 
    RowBox[{
     SuperscriptBox["v", "4"], " ", 
     SuperscriptBox["z", "6"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.524913296204585*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"getstr", "[", "12", "]"}], "\[IndentingNewLine]", 
 RowBox[{"getstr", "[", "99", "]"}], "\[IndentingNewLine]", 
 RowBox[{"getstr", "[", "100", "]"}], "\[IndentingNewLine]", 
 RowBox[{"getstr", "[", "101", "]"}]}], "Input",
 CellChangeTimes->{{3.5249133884620037`*^9, 3.524913391978681*^9}, {
  3.524913477032493*^9, 3.524913503540428*^9}}],

Cell[BoxData[
 SubscriptBox["7", "1"]], "Output",
 CellChangeTimes->{
  3.5249133924301033`*^9, {3.524913490056973*^9, 3.524913504167838*^9}}],

Cell[BoxData[
 SubscriptBox["9", "49"]], "Output",
 CellChangeTimes->{
  3.5249133924301033`*^9, {3.524913490056973*^9, 3.524913504175446*^9}}],

Cell[BoxData["\<\"Not Found\"\>"], "Output",
 CellChangeTimes->{
  3.5249133924301033`*^9, {3.524913490056973*^9, 3.52491350417966*^9}}],

Cell[BoxData["\<\"Unknown\"\>"], "Output",
 CellChangeTimes->{
  3.5249133924301033`*^9, {3.524913490056973*^9, 3.5249135041836443`*^9}}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Random Polygon Generation", "Section",
 CellChangeTimes->{{3.523459962910511*^9, 3.5234599865778646`*^9}, {
  3.523468196110423*^9, 3.5234681974805017`*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["global parameters", "Subsection"]], "Subsubsection",
 CellChangeTimes->{{3.522090579177596*^9, 3.5220905829838142`*^9}, {
   3.523463673458742*^9, 3.5234636797611027`*^9}, 3.523467915286361*^9, {
   3.5234681996706266`*^9, 3.523468200723687*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"RANDOMWORKINGPRECISION", "=", "90"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.523066402037675*^9, 3.5230664105741634`*^9}, 
   3.5230673781035028`*^9, {3.5274540421991835`*^9, 3.5274540423081894`*^9}, {
   3.53127161259375*^9, 3.5312716130625*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"volumeFuncs", " ", "=", " ", 
    RowBox[{"{", "}"}]}], " ", ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "contain", " ", "the", " ", "volume", " ", "functions", " ", "once", " ", 
    "loaded", " ", "with", " ", "initPolyGeneration"}], " ", 
   "*)"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.526988156140625*^9, 3.52698819228125*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ufuncinv", "[", "R_", "]"}], ":=", 
   RowBox[{"R", "*", 
    RowBox[{"x", "^", 
     RowBox[{"(", 
      RowBox[{"1", "/", "3"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ufunc", "[", "R_", "]"}], ":=", 
   RowBox[{
    RowBox[{"x", "^", "3"}], "/", 
    RowBox[{"R", "^", "3"}]}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.522165630677014*^9, 3.5221656309550295`*^9}, {
   3.5221666589308267`*^9, 3.5221666628180485`*^9}, {3.522166710055751*^9, 
   3.5221667102167597`*^9}, {3.5221667529782057`*^9, 3.52216676126468*^9}, {
   3.5221668120285835`*^9, 3.522166813634675*^9}, {3.5221795421178493`*^9, 
   3.5221795453990374`*^9}, {3.5221859916097393`*^9, 3.522185995345953*^9}, {
   3.5222461505847163`*^9, 3.5222461529888535`*^9}, {3.5222482264344482`*^9, 
   3.522248236449021*^9}, {3.5222633824610567`*^9, 3.5222633849321985`*^9}, {
   3.5222635858396893`*^9, 3.5222635910439873`*^9}, {3.522263625603964*^9, 
   3.522263629022159*^9}, {3.5230673992047095`*^9, 3.52306740148184*^9}, {
   3.5231058285871325`*^9, 3.523105830207225*^9}, {3.5234594237226715`*^9, 
   3.523459453519376*^9}, 3.5234637232085876`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["polygon calc functions", "Subsection"]], \
"Subsubsection",
 CellChangeTimes->{{3.5220876665382214`*^9, 3.5220876759527597`*^9}, {
   3.5220881246204224`*^9, 3.5220881258834944`*^9}, 3.526985635453125*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"initPolyGeneration", "[", 
    RowBox[{"steps_", ",", " ", "R_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "fileName", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "find", " ", "the", " ", "file", " ", "with", " ", "the", " ", 
       "correct", " ", "R", " ", "values", " ", "and", " ", "step", " ", 
       "values"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"fileName", " ", "=", " ", 
       RowBox[{
       "\"\<precomputed volume functions\\\\volumes2to20R\>\"", " ", "<>", 
        " ", 
        RowBox[{"ToString", "[", 
         RowBox[{"R", " ", "10"}], "]"}], " ", "<>", " ", 
        "\"\<new.wdx\>\""}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"volumeFuncs", "=", " ", 
       RowBox[{"Import", "[", "fileName", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"volumeFuncs", " ", "=", 
       RowBox[{"If", " ", "[", 
        RowBox[{
         RowBox[{"steps", ">", " ", "20"}], "\[IndentingNewLine]", ",", "  ", 
         RowBox[{"Join", "[", 
          RowBox[{"volumeFuncs", ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "R", ",", 
               RowBox[{"Import", "[", 
                RowBox[{
                "\"\<precomputed volume functions\\\\volumes\>\"", " ", "<>", 
                 " ", 
                 RowBox[{"ToString", "[", "i", "]"}], " ", "<>", " ", 
                 "\"\<50R\>\"", " ", "<>", " ", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"10", " ", "R"}], "]"}], " ", "<>", " ", 
                 "\"\<new.wdx\>\""}], "]"}]}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"i", ",", " ", "21", ",", " ", "steps"}], "}"}]}], 
            "]"}]}], "]"}], "\[IndentingNewLine]", ",", " ", "volumeFuncs"}], 
        "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]}], "*)"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.52698710928125*^9, 3.5269871361875*^9}, {
   3.52698719240625*^9, 3.526987360453125*^9}, {3.526987796265625*^9, 
   3.526987796359375*^9}, {3.526988085453125*^9, 3.52698814815625*^9}, {
   3.526988489375*^9, 3.526988490171875*^9}, {3.5278889119640055`*^9, 
   3.527888914171131*^9}, {3.52945327484375*^9, 3.529453451515625*^9}, {
   3.529453584109375*^9, 3.5294536140625*^9}, {3.529453647046875*^9, 
   3.52945364759375*^9}, {3.529453690390625*^9, 3.529453694359375*^9}, {
   3.52945412275*^9, 3.529454126734375*^9}, {3.5294544170625*^9, 
   3.5294544213125*^9}, {3.529455118515625*^9, 3.529455140734375*^9}, {
   3.529455365953125*^9, 3.529455368578125*^9}, {3.529455621203125*^9, 
   3.52945563075*^9}, {3.529498508515625*^9, 3.5294985620625*^9}, {
   3.529498693421875*^9, 3.52949872640625*^9}, 3.529501532375*^9, 
   3.531271480484375*^9, {3.54800624715625*^9, 3.548006256453125*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"June", " ", "8"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
       "2012", "  ", "\[IndentingNewLine]", "for", " ", "additional", " ", 
        "steps", " ", "each", " ", "step", " ", "is", " ", "in", " ", "a", 
        " ", "differnt", " ", "file"}], ".."}], "\[IndentingNewLine]", "for", 
      " ", "R"}], " ", "=", "1.1"}], ",", " ", "1.2", ",", " ", 
    RowBox[{
     RowBox[{"...", ".", " ", "the"}], " ", "names", " ", "of", " ", "the", 
     " ", "files", " ", "are", " ", 
     RowBox[{"different", ":", " ", 
      RowBox[{"50", " ", "is", " ", "dropped"}]}]}]}], " ", "*)"}], 
  RowBox[{
   RowBox[{"initPolyGeneration", "[", 
    RowBox[{"steps_", ",", "R_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "fileName", "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{
      "find", " ", "the", " ", "file", " ", "with", " ", "the", " ", 
       "correct", " ", "R", " ", "values", " ", "and", " ", "step", " ", 
       "values"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"R", "\[LessEqual]", "4"}], " ", "&&", " ", 
        RowBox[{
         RowBox[{"FractionalPart", "[", 
          RowBox[{"R", "*", "2"}], "]"}], " ", "\[Equal]", " ", "0"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{
        RowBox[{"fileName", "=", 
         RowBox[{"\"\<volumefunctions/volumes2to20R\>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"R", " ", "10"}], "]"}], "<>", "\"\<new.wdx\>\""}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"volumeFuncs", "=", 
         RowBox[{"Import", "[", "fileName", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"volumeFuncs", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"steps", ">", "20"}], "\[IndentingNewLine]", ",", "  ", 
           RowBox[{"Join", "[", 
            RowBox[{"volumeFuncs", ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"i", ",", "R", ",", 
                 RowBox[{"Import", "[", 
                  RowBox[{"\"\<volumefunctions/volumes\>\"", "<>", 
                   RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<50R\>\"", "<>", 
                   RowBox[{"ToString", "[", 
                    RowBox[{"10", " ", "R"}], "]"}], "<>", 
                   "\"\<new.wdx\>\""}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "21", ",", "steps"}], "}"}]}], "]"}]}], 
            "]"}], "\[IndentingNewLine]", ",", "volumeFuncs"}], 
          "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
       " ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"R", " ", "\[GreaterEqual]", " ", "4"}], " ", "||", " ", 
         RowBox[{"not", " ", "a", " ", "halfstep"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"FractionalPart", "[", 
           RowBox[{"2", " ", "*", " ", "R"}], "]"}], " ", "\[Equal]", " ", 
          "0"}], " ", "\[IndentingNewLine]", ",", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"halfstep", " ", "4.5", " ", "or", " ", "lager"}], 
                " ", "..."}], " ", "actually", " ", "only", " ", "4.5", " ", 
               "so", " ", "far"}], "..."}], ".", " ", "\[IndentingNewLine]", 
             "first"}], " ", "80", " ", "contain", " ", "50", "R"}], ",", " ", 
           RowBox[{
            RowBox[{"after", " ", "that", " ", "no", " ", "longer"}], 
            "..."}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"volumeFuncs", "=", "\[IndentingNewLine]", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"10", " ", "R"}], ",", "Null"}], "}"}], "}"}], ",", 
             "\[IndentingNewLine]", " ", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"i", ",", "R", ",", 
                 RowBox[{"Import", "[", 
                  RowBox[{"\"\<volumefunctions/volumes\>\"", "<>", 
                   RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<50R\>\"", "<>", 
                   RowBox[{"ToString", "[", 
                    RowBox[{"10", " ", "R"}], "]"}], "<>", 
                   "\"\<new.wdx\>\""}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "2", ",", "80"}], "}"}]}], "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"i", ",", "R", ",", 
                 RowBox[{"Import", "[", 
                  RowBox[{"\"\<volumefunctions/volumes\>\"", "<>", 
                   RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<R\>\"", "<>", 
                   RowBox[{"ToString", "[", 
                    RowBox[{"10", " ", "R"}], "]"}], "<>", 
                   "\"\<new.wdx\>\""}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "81", ",", "90"}], "}"}]}], "]"}]}], 
            "]"}]}], ";"}], "\[IndentingNewLine]", ",", " ", 
         RowBox[{"(*", " ", 
          RowBox[{"not", " ", "a", " ", "halfstep"}], " ", "*)"}], 
         RowBox[{"volumeFuncs", "=", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"10", " ", "R"}], ",", "Null"}], "}"}], "}"}], ",", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"i", ",", "R", ",", 
                RowBox[{"Import", "[", 
                 RowBox[{"\"\<volumefunctions/volumes\>\"", "<>", 
                  RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<R\>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"10", " ", "R"}], "]"}], "<>", "\"\<new.wdx\>\""}],
                  "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "2", ",", "steps"}], "}"}]}], "]"}]}], 
           "]"}]}]}], "]"}]}], "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5480061805625*^9, 3.548006243796875*^9}, {
   3.553695279484375*^9, 3.55369532346875*^9}, 3.55369625265625*^9, {
   3.553696287*^9, 3.5536964056875*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "compute", " ", "part", " ", "of", " ", "the", " ", "volumnefunction", " ",
     "which", " ", "does", " ", "not", " ", "depend", " ", "on", " ", "r"}], 
   " ", "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"volumePartI", "[", 
      RowBox[{
      "Rnum_", ",", " ", "Rdenom_", ",", "kStart_", ",", " ", "kEnd_"}], 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"func", ",", " ", "ind"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"kStart", "\[Equal]", "1"}], ",", 
          RowBox[{"func", "=", "1"}], ",", 
          RowBox[{"func", "=", 
           RowBox[{"Import", "[", 
            RowBox[{"\"\<volumesPartI\>\"", " ", "<>", " ", 
             RowBox[{"ToString", "[", 
              RowBox[{"kStart", "-", "1"}], "]"}], " ", "<>", " ", 
             "\"\<R\>\"", " ", "<>", " ", 
             RowBox[{"ToString", "[", 
              RowBox[{
               FractionBox["Rnum", "Rdenom"], " ", "10"}], "]"}], " ", "<>", 
             " ", "\"\<.wdx\>\""}], "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"output", " ", "part", " ", "func", " ", "for", " ", "k"}], 
          "=", "1"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"kStart", "\[Equal]", "1"}], ",", 
          RowBox[{"Export", "[", 
           RowBox[{
            RowBox[{"\"\<volumesPartI1R\>\"", " ", "<>", " ", 
             RowBox[{"ToString", "[", 
              RowBox[{
               FractionBox["Rnum", "Rdenom"], " ", "10"}], "]"}], " ", "<>", 
             " ", "\"\<.wdx\>\""}], ",", " ", "func"}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "compute", " ", "next", " ", "volumePartI", " ", "functions", " ", 
          "and", " ", "store", " ", "them", " ", "all"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"ind", "=", 
           RowBox[{"Max", "[", 
            RowBox[{"2", ",", "kStart"}], "]"}]}], ",", 
          RowBox[{"ind", "\[LessEqual]", "kEnd"}], ",", 
          RowBox[{"ind", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"func", "=", 
            RowBox[{"Integrate", "[", 
             RowBox[{
              RowBox[{"func", "/.", 
               RowBox[{"t", "\[Rule]", "x"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", 
                RowBox[{"Abs", "[", 
                 RowBox[{"t", "-", "1"}], "]"}], ",", 
                RowBox[{"Max", "[", 
                 RowBox[{
                  RowBox[{"Min", "[", 
                   RowBox[{
                    FractionBox["Rnum", "Rdenom"], ",", "ind", ",", 
                    RowBox[{"t", "+", "1"}]}], "]"}], ",", 
                  RowBox[{"Abs", "[", 
                   RowBox[{"t", "-", "1"}], "]"}]}], "]"}]}], "}"}], ",", 
              RowBox[{"Assumptions", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Im", "[", "t", "]"}], "\[Equal]", "0"}], "&&", 
                 RowBox[{
                  RowBox[{"Im", "[", 
                   FractionBox["Rnum", "Rdenom"], "]"}], "\[Equal]", "0"}]}], 
                "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Export", "[", 
            RowBox[{
             RowBox[{"\"\<volumesPartI\>\"", " ", "<>", " ", 
              RowBox[{"ToString", "[", "ind", "]"}], " ", "<>", " ", 
              "\"\<R\>\"", " ", "<>", " ", 
              RowBox[{"ToString", "[", 
               RowBox[{
                FractionBox["Rnum", "Rdenom"], " ", "10"}], "]"}], " ", "<>", 
              " ", "\"\<.wdx\>\""}], ",", " ", "func"}], "]"}]}]}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}],
    "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.531073633546875*^9, 3.531073636875*^9}, {
  3.531073700796875*^9, 3.53107370559375*^9}, {3.531073755109375*^9, 
  3.53107375871875*^9}, {3.5310740055*^9, 3.53107406490625*^9}, {
  3.53107411640625*^9, 3.531074117*^9}, {3.531074168671875*^9, 
  3.53107418559375*^9}, {3.531074516796875*^9, 3.531074544609375*^9}, {
  3.531074612484375*^9, 3.531074663125*^9}, {3.53107485459375*^9, 
  3.5310748548125*^9}, {3.531074930265625*^9, 3.531074953828125*^9}, {
  3.53107531065625*^9, 3.531075496375*^9}, {3.531122169296875*^9, 
  3.53112217740625*^9}, {3.531122207578125*^9, 3.531122209203125*^9}, {
  3.538960067484375*^9, 3.538960124171875*^9}, {3.548011904984375*^9, 
  3.5480119203125*^9}, {3.54801196075*^9, 3.54801196596875*^9}, {
  3.5480120094375*^9, 3.54801201059375*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "comopute", " ", "the", " ", "final", " ", "volume", " ", "function"}], 
    " ", "-", " ", 
    RowBox[{
    "reading", " ", "the", " ", "first", " ", "part", " ", "from", " ", "a", 
     " ", "file"}]}], " ", "*)"}], 
  RowBox[{
   RowBox[{"volumePartII", "[", 
    RowBox[{"k_", ",", "tkp1_", ",", "R_", ",", "r_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"func", ",", " ", "ind"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"func", "=", 
       RowBox[{"Import", "[", 
        RowBox[{"\"\<volumesPartI\>\"", " ", "<>", " ", 
         RowBox[{"ToString", "[", 
          RowBox[{"k", "-", "1"}], "]"}], " ", "<>", " ", "\"\<R\>\"", " ", "<>",
          " ", 
         RowBox[{"ToString", "[", 
          RowBox[{"R", " ", "10"}], "]"}], " ", "<>", " ", "\"\<.wdx\>\""}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"k", "\[GreaterEqual]", "2"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"func", "=", 
          RowBox[{"Integrate", "[", 
           RowBox[{
            RowBox[{"func", "/.", 
             RowBox[{"t", "\[Rule]", "x"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"Abs", "[", 
               RowBox[{"tkp1", "-", "1"}], "]"}], ",", 
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{"Min", "[", 
                 RowBox[{"R", ",", "k", ",", "r", ",", 
                  RowBox[{"tkp1", "+", "1"}]}], "]"}], ",", 
                RowBox[{"Abs", "[", 
                 RowBox[{"tkp1", "-", "1"}], "]"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"Assumptions", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Im", "[", "tkp1", "]"}], "\[Equal]", "0"}], "&&", 
               RowBox[{
                RowBox[{"Im", "[", "R", "]"}], "\[Equal]", "0"}], "&&", 
               RowBox[{
                RowBox[{"Im", "[", "r", "]"}], "\[Equal]", "0"}]}], "}"}]}]}],
            "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "func", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQ7bfDaHmO6ytHq0bxjSC6rF50G4j+HNSyHyx+qfkI
iK6Y4nwORJurGF4C0THl526DaLf1lz+CaKnpqd9BdF/a+YhcIH3r/RUw3XZL
ehKIXhv3EUyXfdp0Jw9In5vAdx9ES+nMfQaiT9UteQWiv7Xc+ASirWK6v4Do
CBZh63wgfSDgoQ2IfmbTVA6iFRO0KkD0RW3ZeSBaa+nvBSA6ZVpqTRmQlg74
Ugeic3putoHoyr82XSA68sCPiSCayVpyCohmYLDwFXUH0g3OUFqk1ghMuzRD
6M3n/vqB6OprEPrzcRF/EC13AkwzBG/yzgfx+7aAaACGvqGa
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"genVolumePartII", "[", 
   RowBox[{
   "Rnum_", ",", " ", "Rdenom_", ",", " ", "kStart_", ",", " ", "kEnd_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"Module", " ", "[", 
   RowBox[{
    RowBox[{"{", "i", "}"}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "kStart"}], ",", " ", 
      RowBox[{"i", "\[LessEqual]", "kEnd"}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<volumes\>\"", " ", "<>", " ", 
         RowBox[{"ToString", "[", "i", "]"}], " ", "<>", " ", "\"\<R\>\"", 
         " ", "<>", " ", 
         RowBox[{"ToString", "[", 
          RowBox[{
           FractionBox["Rnum", "Rdenom"], " ", "10"}], "]"}], " ", "<>", " ", 
         "\"\<new.wdx\>\""}], ",", " ", 
        RowBox[{"volumePartII", "[", 
         RowBox[{"i", ",", "tkp1", ",", 
          FractionBox["Rnum", "Rdenom"], ",", "r"}], "]"}]}], "]"}]}], 
     "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.538957693859375*^9, 3.538957697609375*^9}, {
  3.53896013909375*^9, 3.538960154375*^9}, {3.5415186857000227`*^9, 
  3.5415186859031467`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"volume", "[", 
   RowBox[{"k_", ",", "tkp1_", ",", "R_", ",", "r_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"func", ",", " ", "ind"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"func", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"ind", "=", "2"}], ",", 
       RowBox[{"ind", "\[LessEqual]", 
        RowBox[{"k", "-", "1"}]}], ",", 
       RowBox[{"ind", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"func", "=", 
         RowBox[{"Integrate", "[", 
          RowBox[{
           RowBox[{"func", "/.", 
            RowBox[{"t", "\[Rule]", "x"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"Abs", "[", 
              RowBox[{"t", "-", "1"}], "]"}], ",", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"Min", "[", 
                RowBox[{"R", ",", "ind", ",", 
                 RowBox[{"t", "+", "1"}]}], "]"}], ",", 
               RowBox[{"Abs", "[", 
                RowBox[{"t", "-", "1"}], "]"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"Assumptions", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Im", "[", "t", "]"}], "\[Equal]", "0"}], "&&", 
              RowBox[{
               RowBox[{"Im", "[", "R", "]"}], "\[Equal]", "0"}]}], "}"}]}]}], 
          "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"k", "\[GreaterEqual]", "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"func", "=", 
         RowBox[{"Integrate", "[", 
          RowBox[{
           RowBox[{"func", "/.", 
            RowBox[{"t", "\[Rule]", "x"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"Abs", "[", 
              RowBox[{"tkp1", "-", "1"}], "]"}], ",", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"Min", "[", 
                RowBox[{"R", ",", "k", ",", "r", ",", 
                 RowBox[{"tkp1", "+", "1"}]}], "]"}], ",", 
               RowBox[{"Abs", "[", 
                RowBox[{"tkp1", "-", "1"}], "]"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"Assumptions", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"Im", "[", "tkp1", "]"}], "\[Equal]", "0"}], "&&", 
              RowBox[{
               RowBox[{"Im", "[", "R", "]"}], "\[Equal]", "0"}], "&&", 
              RowBox[{
               RowBox[{"Im", "[", "r", "]"}], "\[Equal]", "0"}]}], "}"}]}]}], 
          "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "func", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.526059321584998*^9, 3.5260594007345247`*^9}, {
  3.526059440671809*^9, 3.5260595161351256`*^9}, {3.5260595561194124`*^9, 
  3.5260596341118736`*^9}, {3.5260596655356708`*^9, 3.52605974245207*^9}, {
  3.5260599186151457`*^9, 3.526059963174695*^9}, {3.526060742481269*^9, 
  3.5260607426542788`*^9}, {3.526061200870425*^9, 3.526061207542807*^9}, {
  3.5260638455920973`*^9, 3.5260638644551764`*^9}, {3.5260639249116335`*^9, 
  3.526063957140477*^9}, {3.5260640227662306`*^9, 3.526064036355008*^9}, {
  3.5260646005942802`*^9, 3.526064615041107*^9}, {3.526065084069934*^9, 
  3.5260650893242345`*^9}, {3.5260653929115987`*^9, 3.5260654158639116`*^9}, {
  3.526079459174608*^9, 3.5260794796347785`*^9}, {3.5260795427983913`*^9, 
  3.5260795699059415`*^9}, {3.52607963177348*^9, 3.526079648788453*^9}, {
  3.52692900175*^9, 3.526929002109375*^9}, {3.526988776640625*^9, 
  3.526988826140625*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"'", 
     RowBox[{"short", "'"}], " ", "functions", " ", "remove", " ", "the", " ",
      "first", " ", "factor", " ", "of", " ", "I_n", 
     RowBox[{"(", "t", ")"}]}], ",", " ", 
    RowBox[{
    "since", " ", "it", " ", "is", " ", "cancelled", " ", "anyway"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"sumfuncshort", "[", 
    RowBox[{"n_", ",", "t_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "^", "i"}], "*", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"t", "+", "n", "-", 
          RowBox[{"2", "*", "i"}]}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"n", "-", "1"}], ")"}]}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"i", "!"}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"n", "-", "i"}], ")"}], "!"}]}], ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", 
       RowBox[{
        RowBox[{"Ceiling", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"t", "+", "n"}], ")"}], "/", "2"}], "]"}], "-", "1"}], ",",
        "1"}], "}"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5274468472883797`*^9, 3.5274468693586416`*^9}, {
  3.527447578091179*^9, 3.5274475834994884`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"just", " ", "calculate", " ", "the", " ", "denominator"}], " ", 
   "*)"}], 
  RowBox[{
   RowBox[{"cdfvalCalcDeno", "[", 
    RowBox[{"n_", ",", "t_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"sumfuncshort", "[", 
     RowBox[{"n", ",", 
      RowBox[{"t", "+", "1"}]}], "]"}], "-", 
    RowBox[{"sumfuncshort", "[", 
     RowBox[{"n", ",", 
      RowBox[{"Abs", "[", 
       RowBox[{"t", "-", "1"}], "]"}]}], "]"}]}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "calculate", " ", "the", " ", "cdf", " ", "WITHOUT", " ", "dividing", " ", 
    "by", " ", "the", " ", "denominator", " ", "AND", " ", "without", " ", 
    "subtracting", " ", "the", " ", "second", " ", "part"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{"cdfvalNoDenoNoSub", "[", 
    RowBox[{"n_", ",", "x_"}], "]"}], ":=", "  ", 
   RowBox[{"sumfuncshort", "[", 
    RowBox[{"n", ",", "x"}], "]"}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"calculate", " ", "subtraction", " ", "part"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"cdfvalSub", "[", 
    RowBox[{"n_", ",", "t_"}], "]"}], ":=", "  ", 
   RowBox[{"sumfuncshort", "[", 
    RowBox[{"n", ",", 
     RowBox[{"Abs", "[", 
      RowBox[{"t", "-", "1"}], "]"}]}], "]"}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"cdfvalshort", "[", 
   RowBox[{"n_", ",", "t_", ",", "x_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"sumfuncshort", "[", 
        RowBox[{"n", ",", "x"}], "]"}], "-", 
       RowBox[{"sumfuncshort", "[", 
        RowBox[{"n", ",", 
         RowBox[{"Abs", "[", 
          RowBox[{"t", "-", "1"}], "]"}]}], "]"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"sumfuncshort", "[", 
        RowBox[{"n", ",", 
         RowBox[{"t", "+", "1"}]}], "]"}], "-", 
       RowBox[{"sumfuncshort", "[", 
        RowBox[{"n", ",", 
         RowBox[{"Abs", "[", 
          RowBox[{"t", "-", "1"}], "]"}]}], "]"}]}], ")"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"cdfvalshortNoDenom", "[", 
   RowBox[{"n_", ",", "t_", ",", "x_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"sumfuncshort", "[", 
       RowBox[{"n", ",", "x"}], "]"}], "-", 
      RowBox[{"sumfuncshort", "[", 
       RowBox[{"n", ",", 
        RowBox[{"Abs", "[", 
         RowBox[{"t", "-", "1"}], "]"}]}], "]"}]}], ")"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5269869580625*^9, 3.526986968609375*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"cdfvalforceConfineClose", "[", 
   RowBox[{"steps_", ",", " ", "tau_", ",", "  ", "R_", ",", " ", "p_"}], 
   "]"}], " ", ":=", "\[IndentingNewLine]", "\t", 
  RowBox[{"(*", 
   FractionBox[
    RowBox[{"cdfvalshortNoDenom", "[", 
     RowBox[{"steps", ",", " ", "tau", ",", " ", "p"}], "]"}], 
    RowBox[{"cdfvalshortNoDenom", "[", 
     RowBox[{"steps", ",", " ", "tau", ",", " ", "R"}], "]"}]], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Apply", "[", 
      RowBox[{"Function", ",", " ", 
       RowBox[{"List", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"tkp1", ",", "r"}], "}"}], ",", " ", 
         RowBox[{"volumeFuncs", "[", 
          RowBox[{"[", 
           RowBox[{"steps", ",", "3"}], "]"}], "]"}]}], "]"}]}], "]"}], "]"}],
     "[", 
    RowBox[{"tau", ",", "p"}], "]"}], "/", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Apply", "[", 
      RowBox[{"Function", ",", " ", 
       RowBox[{"List", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"tkp1", ",", "r"}], "}"}], ",", " ", 
         RowBox[{"volumeFuncs", "[", 
          RowBox[{"[", 
           RowBox[{"steps", ",", "3"}], "]"}], "]"}]}], "]"}]}], "]"}], "]"}],
     "[", 
    RowBox[{"tau", ",", "R"}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.526986524390625*^9, 3.52698663153125*^9}, {
  3.526986667875*^9, 3.5269866956875*^9}, {3.526986753515625*^9, 
  3.526986885765625*^9}, {3.526986975375*^9, 3.526987000046875*^9}, {
  3.5269870739375*^9, 3.5269870849375*^9}, {3.526988127625*^9, 
  3.526988130171875*^9}, {3.526988724265625*^9, 3.52698872653125*^9}, {
  3.52699045915625*^9, 3.5269904633125*^9}, {3.527201735421875*^9, 
  3.527201757671875*^9}, {3.527448911699457*^9, 3.527448914230602*^9}, {
  3.5274489487915783`*^9, 3.527448950353668*^9}, {3.5282838644330606`*^9, 
  3.528283877389802*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"cdfvalforceConfine", "[", 
   RowBox[{"steps_", ",", " ", "tau_", ",", "  ", "R_", ",", " ", "p_"}], 
   "]"}], " ", ":=", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{"cdfvalshort", "[", 
    RowBox[{"steps", ",", " ", "tau", ",", " ", "p"}], "]"}], 
   RowBox[{
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Apply", "[", 
       RowBox[{"Function", ",", " ", 
        RowBox[{"List", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"tkp1", ",", "r"}], "}"}], ",", " ", 
          RowBox[{"volumeFuncs", "[", 
           RowBox[{"[", 
            RowBox[{"steps", ",", "3"}], "]"}], "]"}]}], "]"}]}], "]"}], 
      "]"}], "[", 
     RowBox[{"tau", ",", "p"}], "]"}], "/", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Apply", "[", 
       RowBox[{"Function", ",", " ", 
        RowBox[{"List", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"tkp1", ",", "r"}], "}"}], ",", " ", 
          RowBox[{"volumeFuncs", "[", 
           RowBox[{"[", 
            RowBox[{"steps", ",", "3"}], "]"}], "]"}]}], "]"}]}], "]"}], 
      "]"}], "[", 
     RowBox[{"tau", ",", "R"}], "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.526986524390625*^9, 3.52698663153125*^9}, {
  3.526986667875*^9, 3.5269866956875*^9}, {3.526986753515625*^9, 
  3.526986885765625*^9}, {3.526986975375*^9, 3.526987000046875*^9}, {
  3.5269870739375*^9, 3.5269870849375*^9}, {3.526988127625*^9, 
  3.526988130171875*^9}, {3.526988724265625*^9, 3.52698872653125*^9}, {
  3.52699045915625*^9, 3.5269904633125*^9}, {3.527201769265625*^9, 
  3.527201775421875*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"circparmat", "[", 
   RowBox[{"p_", ",", "r_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"h", ",", "t", ",", "\[Theta]", ",", "\[Rho]", ",", "rad"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "distance", " ", "of", " ", "point", " ", "from", " ", "origin"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"t", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"p", ".", "p"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"radius", " ", "of", " ", "circle", " ", "intersection"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"h", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"r", "^", "2"}]}], ")"}], "-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"t", "^", "4"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"r", "^", "2"}], "-", "1"}], ")"}], "^", "2"}]}], 
             ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"2", "*", 
              RowBox[{"t", "^", "2"}]}], ")"}]}], ")"}]}], ")"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"\[Rho]", "=", 
      RowBox[{"ArcCos", "[", 
       RowBox[{
        RowBox[{"p", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "/", "t"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"p", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"p", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "\[GreaterEqual]", " ", "0"}], 
          ",", 
          RowBox[{"Pi", "/", "2"}], ",", 
          RowBox[{
           RowBox[{"-", "Pi"}], "/", "2"}]}], "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"p", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "\[GreaterEqual]", " ", "0"}], 
          ",", 
          RowBox[{"ArcTan", "[", 
           RowBox[{
            RowBox[{"p", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "/", 
            RowBox[{"p", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"Pi", "+", 
           RowBox[{"ArcTan", "[", 
            RowBox[{
             RowBox[{"p", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "/", 
             RowBox[{"p", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"rad", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", "^", "2"}], "+", 
           RowBox[{"t", "^", "2"}]}], ")"}], "\[GreaterEqual]", "1"}], ",", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"r", "^", "2"}], "-", 
          RowBox[{"h", "^", "2"}]}], "]"}], ",", 
        RowBox[{"-", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"r", "^", "2"}], "-", 
           RowBox[{"h", "^", "2"}]}], "]"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<t \>\"", ",", 
         RowBox[{"N", "[", "t", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<h \>\"", ",", 
         RowBox[{"N", "[", "h", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<\[Rho] \>\"", ",", 
         RowBox[{"N", "[", "\[Rho]", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<\[Theta] \>\"", ",", 
         RowBox[{"N", "[", "\[Theta]", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<rad \>\"", ",", 
         RowBox[{"N", "[", "rad", "]"}]}], "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"RotationMatrix", "[", 
       RowBox[{"\[Theta]", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], ".", 
      RowBox[{"RotationMatrix", "[", 
       RowBox[{"\[Rho]", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"h", "*", 
         RowBox[{"Cos", "[", "u", "]"}]}], ",", 
        RowBox[{"h", "*", 
         RowBox[{"Sin", "[", "u", "]"}]}], ",", "rad"}], "}"}]}]}]}], 
   "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"circMat", "[", 
   RowBox[{"p_", ",", "r_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "h", ",", "t", ",", "\[Theta]", ",", "\[Rho]", ",", "rad", ",", " ", 
      "u"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "distance", " ", "of", " ", "point", " ", "from", " ", "origin"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"t", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"p", ".", "p"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"radius", " ", "of", " ", "circle", " ", "intersection"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"h", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"r", "^", "2"}]}], ")"}], "-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"t", "^", "4"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"r", "^", "2"}], "-", "1"}], ")"}], "^", "2"}]}], 
             ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"2", "*", 
              RowBox[{"t", "^", "2"}]}], ")"}]}], ")"}]}], ")"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"\[Rho]", "=", 
      RowBox[{"ArcCos", "[", 
       RowBox[{
        RowBox[{"p", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "/", "t"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"p", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"p", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "\[GreaterEqual]", " ", "0"}], 
          ",", 
          RowBox[{"Pi", "/", "2"}], ",", 
          RowBox[{
           RowBox[{"-", "Pi"}], "/", "2"}]}], "]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"p", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "\[GreaterEqual]", " ", "0"}], 
          ",", 
          RowBox[{"ArcTan", "[", 
           RowBox[{
            RowBox[{"p", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "/", 
            RowBox[{"p", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"Pi", "+", 
           RowBox[{"ArcTan", "[", 
            RowBox[{
             RowBox[{"p", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "/", 
             RowBox[{"p", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"rad", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", "^", "2"}], "+", 
           RowBox[{"t", "^", "2"}]}], ")"}], "\[GreaterEqual]", "1"}], ",", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"r", "^", "2"}], "-", 
          RowBox[{"h", "^", "2"}]}], "]"}], ",", 
        RowBox[{"-", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"r", "^", "2"}], "-", 
           RowBox[{"h", "^", "2"}]}], "]"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<t \>\"", ",", 
         RowBox[{"N", "[", "t", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<h \>\"", ",", 
         RowBox[{"N", "[", "h", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<\[Rho] \>\"", ",", 
         RowBox[{"N", "[", "\[Rho]", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<\[Theta] \>\"", ",", 
         RowBox[{"N", "[", "\[Theta]", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<rad \>\"", ",", 
         RowBox[{"N", "[", "rad", "]"}]}], "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", " ", 
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", 
          RowBox[{"2", "Pi"}]}], "}"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "RANDOMWORKINGPRECISION"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"RotationMatrix", "[", 
       RowBox[{"\[Theta]", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], ".", 
      RowBox[{"RotationMatrix", "[", 
       RowBox[{"\[Rho]", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"h", "*", 
         RowBox[{"Cos", "[", "u", "]"}]}], ",", 
        RowBox[{"h", "*", 
         RowBox[{"Sin", "[", "u", "]"}]}], ",", "rad"}], "}"}]}]}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"pickSphericalCoordinates", "[", "]"}], ":=", " ", 
  RowBox[{"Module", " ", "[", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"u", ",", " ", "v"}], " ", "}"}], " ", ",", " ", 
    RowBox[{"(*", " ", 
     RowBox[{"Based", " ", "on", " ", "Wolfram", " ", "publication"}], "*)"}],
     "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"u", "=", 
       RowBox[{
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"RandomReal", "[", "]"}], " ", 
          RowBox[{"10", "^", "16"}]}], "]"}], "/", 
        RowBox[{"10", "^", "16"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"v", "=", 
       RowBox[{
        RowBox[{"IntegerPart", "[", 
         RowBox[{
          RowBox[{"RandomReal", "[", "]"}], " ", 
          RowBox[{"10", "^", "16"}]}], "]"}], "/", 
        RowBox[{"10", "^", "16"}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"u", "=", 
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "RANDOMWORKINGPRECISION"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"v", "=", 
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "RANDOMWORKINGPRECISION"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", " ", 
     RowBox[{"Return", "[", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"2", " ", "Pi", " ", "u"}], ",", " ", 
        RowBox[{"ArcCos", "[", 
         RowBox[{
          RowBox[{"2", " ", "v"}], " ", "-", "1"}], "]"}]}], "}"}], "]"}]}]}],
    "]"}]}], "\n", 
 RowBox[{
  RowBox[{"convertSphericalsToPoint", "[", 
   RowBox[{"{", 
    RowBox[{"theta_", ",", " ", "phi_"}], "}"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", " ", "[", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"x", ",", " ", "y", ",", " ", "z"}], "}"}], " ", ",", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "based", " ", "on", " ", "Wolfram", " ", "Pub", " ", "on", " ", 
      "spherical", " ", "coordinates"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"x", " ", "=", " ", 
      RowBox[{
       RowBox[{"Cos", "[", "theta", "]"}], " ", 
       RowBox[{"Sin", "[", "phi", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"y", " ", "=", 
      RowBox[{
       RowBox[{"Sin", "[", "theta", "]"}], 
       RowBox[{"Sin", "[", "phi", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"z", " ", "=", " ", 
      RowBox[{"Cos", "[", "phi", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], "]"}]}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.523065852853264*^9, 3.5230658766996274`*^9}, {
  3.5230662632647376`*^9, 3.52306627414036*^9}, {3.523066464649256*^9, 
  3.5230664993412404`*^9}, {3.5230672822050176`*^9, 3.5230672848721704`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"gettrans", "[", 
   RowBox[{"{", 
    RowBox[{"theta_", ",", "phi_"}], "}"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"RotationMatrix", "[", 
    RowBox[{"theta", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], ".", 
   RowBox[{"RotationMatrix", "[", 
    RowBox[{"phi", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}]}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pexact", "[", 
    RowBox[{"k_", ",", " ", "tau_", ",", " ", "r_"}], "]"}], " ", ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"k", "-", "1"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"k", "+", "1"}], ")"}]}], ")"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"UnitStep", "[", 
          RowBox[{
           RowBox[{"2", "j"}], "-", "k", "-", "r"}], "]"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "^", "j"}], "  ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "+", "k", "-", 
             RowBox[{"2", "j"}]}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"k", "-", "2"}], ")"}]}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Factorial", "[", 
             RowBox[{"k", "-", "j"}], "]"}], 
            RowBox[{"Factorial", "[", "j", "]"}]}], ")"}]}]}], " ", ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "k"}], "}"}]}], "]"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"UnitStep", "[", 
          RowBox[{
           RowBox[{"2", "j"}], "-", "k", "-", "1", "-", "tau"}], "]"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "^", "j"}], " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"tau", "+", "k", "+", "1", "-", 
             RowBox[{"2", "j"}]}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"k", "-", "1"}], ")"}]}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Factorial", "[", 
             RowBox[{"k", "+", "1", "-", "j"}], "]"}], 
            RowBox[{"Factorial", "[", "j", "]"}]}], ")"}]}]}], " ", ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", 
          RowBox[{"k", "+", "1"}]}], "}"}]}], "]"}], ")"}]}]}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pickR", "[", 
    RowBox[{"v_", ",", " ", "tau_"}], "]"}], " ", ":=", " ", 
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"tau", "-", "1"}], ")"}], "2"], "+", 
     RowBox[{"4", " ", "v", " ", "tau"}]}]]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"q", "[", 
    RowBox[{"tau_", ",", " ", "r_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Piecewise", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        FractionBox["r", 
         RowBox[{"2", " ", "tau"}]], ",", " ", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"tau", "-", "1"}], "]"}], " ", "\[LessEqual]", " ", "r", 
         " ", "\[LessEqual]", " ", 
         RowBox[{"tau", "+", "1"}]}]}], "}"}], "}"}], ",", "0"}], "]"}]}], 
  " ", ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"vforR", "[", 
    RowBox[{"R_", ",", " ", "tau_"}], "]"}], " ", ":=", " ", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["R", "2"], "+", 
     RowBox[{"2", " ", "tau"}], "-", 
     SuperscriptBox["tau", "2"]}], 
    RowBox[{"4", " ", "tau"}]]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"findrad", "[", 
   RowBox[{"n_", ",", "t_", ",", "u_", ",", "acc_", ",", "R_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"left", ",", "right", ",", 
      RowBox[{"done", "=", "False"}], ",", "pos", ",", 
      RowBox[{"ct", "=", "0"}], ",", 
      RowBox[{"val", "=", "0"}], ",", " ", "useFunc", ",", " ", "denom1", ",",
       " ", "denom2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"left", "=", 
      RowBox[{"Abs", "[", 
       RowBox[{"t", "-", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"right", "=", 
      RowBox[{"Min", "[", 
       RowBox[{"n", ",", 
        RowBox[{"t", "+", "1"}], ",", "R"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Print", " ", "[", 
        RowBox[{"\"\<left  right \>\"", ",", " ", 
         RowBox[{"left", " ", "//", "N"}], ",", " ", "\"\< \>\"", ",", " ", 
         RowBox[{"right", " ", "//", "N"}]}], " ", "]"}], ";"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"check", " ", "special", " ", "values"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"u", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"ct", ",", " ", "right"}], "}"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"u", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"ct", ",", " ", "left"}], "}"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"done", "=", "False"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"useFunc", " ", "=", " ", 
        RowBox[{
         RowBox[{"volumeFuncs", "[", 
          RowBox[{"[", 
           RowBox[{"n", ",", "3"}], "]"}], "]"}], " ", "/.", " ", 
         RowBox[{"tkp1", "\[Rule]", " ", "t"}]}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<useFunc \>\"", " ", ",", " ", "useFunc"}], "]"}], ";"}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<useFunc = \>\"", ",", "useFunc"}], "]"}], ";"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"denom2", " ", "=", " ", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"Apply", "[", 
         RowBox[{"Function", ",", " ", 
          RowBox[{"List", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"tkp1", ",", "r"}], "}"}], ",", " ", 
            RowBox[{"volumeFuncs", "[", 
             RowBox[{"[", 
              RowBox[{"n", ",", "3"}], "]"}], "]"}]}], "]"}]}], "]"}], "]"}], 
       "[", 
       RowBox[{"t", ",", "R"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"!", "done"}], "  ", "&&", " ", 
        RowBox[{"ct", " ", "<", " ", "150"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ct", "++"}], ";", "\[IndentingNewLine]", 
        RowBox[{"pos", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"left", "+", "right"}], ")"}], "/", "2"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"n", "\[Equal]", "3"}], ",", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<pos = \>\"", ",", "pos", " ", ",", " ", "\"\< and \>\"", 
               ",", " ", "left", ",", " ", "\"\< \>\"", ",", " ", "right", 
               ",", " ", "\"\< \>\"", ",", " ", 
               RowBox[{
                RowBox[{"Abs", "[", 
                 RowBox[{"u", "-", "val"}], "]"}], "//", "N"}]}], "]"}], 
             ";"}]}], "]"}], ";"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"val", "=", 
           RowBox[{
            FractionBox[
             RowBox[{"cdfvalshortNoDenom", "[", 
              RowBox[{"n", ",", " ", "t", ",", " ", "pos"}], "]"}], "denom1"],
             " ", 
            FractionBox[
             RowBox[{
              RowBox[{"Evaluate", "[", 
               RowBox[{"Apply", "[", 
                RowBox[{"Function", ",", " ", 
                 RowBox[{"List", "[", 
                  RowBox[{
                   RowBox[{"{", "r", "}"}], ",", " ", "useFunc"}], "]"}]}], 
                "]"}], "]"}], "[", "pos", "]"}], "denom2"]}]}], ";"}], "  ", 
         "*)"}], "\[IndentingNewLine]", " ", 
        RowBox[{"val", "=", 
         RowBox[{
          FractionBox["1", "denom2"], 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{"Apply", "[", 
             RowBox[{"Function", ",", " ", 
              RowBox[{"List", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"tkp1", ",", "r"}], "}"}], ",", " ", 
                RowBox[{"volumeFuncs", "[", 
                 RowBox[{"[", 
                  RowBox[{"n", ",", "3"}], "]"}], "]"}]}], "]"}]}], "]"}], 
            "]"}], "[", 
           RowBox[{"t", ",", "pos"}], "]"}]}]}], ";", "  ", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"val", "=", 
           RowBox[{
            FractionBox[
             RowBox[{"cdfvalshortNoDenom", "[", 
              RowBox[{"n", ",", " ", "t", ",", " ", "pos"}], "]"}], "denom1"],
             " ", 
            FractionBox[
             RowBox[{" ", 
              RowBox[{"useFunc", "[", "pos", "]"}]}], "denom2"]}]}], ";"}], 
         " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", " ", "[", 
           RowBox[{"\"\<left pos right val \>\"", ",", " ", 
            RowBox[{"left", " ", "//", "N"}], ",", " ", "\"\< \>\"", ",", " ", 
            RowBox[{"pos", " ", "//", "N"}], ",", " ", "\"\< \>\"", ",", " ", 
            RowBox[{"right", " ", "//", "N"}], " ", ",", " ", "\"\< \>\"", 
            ",", " ", 
            RowBox[{"val", " ", "//", "N"}]}], "]"}], ";"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ct", "\[Equal]", " ", "150"}], ",", " ", 
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<count limited findrad with t+1 > R for steps = \>\"", ",", 
            " ", "n", ",", "  ", "\"\<and tau = \>\"", ",", " ", "t", " ", 
            ",", "\"\< and u = \>\"", ",", " ", "u"}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"u", "-", "val"}], "]"}], "<", "acc"}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"Return", "[", 
           RowBox[{"{", 
            RowBox[{"ct", ",", "pos"}], " ", "}"}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", " ", "[", 
         RowBox[{
          RowBox[{"u", " ", "<", " ", "val"}], ",", " ", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{
           RowBox[{"right", "=", "pos"}], ";"}], " ", ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{
           RowBox[{"left", " ", "=", " ", "pos"}], ";"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "\t", "\[IndentingNewLine]", "]"}], ";"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.52698470834375*^9, 3.526984715046875*^9}, {
   3.52698488484375*^9, 3.526984941515625*^9}, {3.52698507390625*^9, 
   3.526985074203125*^9}, {3.5269851094375*^9, 3.526985128671875*^9}, {
   3.526985492625*^9, 3.526985516078125*^9}, {3.526990245375*^9, 
   3.52699026671875*^9}, {3.526990355546875*^9, 3.526990360984375*^9}, {
   3.526990437890625*^9, 3.52699044221875*^9}, {3.526990536546875*^9, 
   3.52699061921875*^9}, {3.526991459046875*^9, 3.52699146428125*^9}, 
   3.52699154984375*^9, {3.526991767359375*^9, 3.52699182134375*^9}, {
   3.526991865921875*^9, 3.52699186909375*^9}, {3.5269921169375*^9, 
   3.52699212040625*^9}, {3.526992182796875*^9, 3.526992215765625*^9}, {
   3.526993192234375*^9, 3.526993195421875*^9}, {3.526993229515625*^9, 
   3.526993239953125*^9}, {3.526993291640625*^9, 3.52699336334375*^9}, {
   3.52720180525*^9, 3.527201822078125*^9}, {3.527201949359375*^9, 
   3.527201950625*^9}, {3.5280406688665648`*^9, 3.5280407579580345`*^9}, {
   3.528040792206748*^9, 3.528040856954262*^9}, {3.5280408899686193`*^9, 
   3.528040962512708*^9}, {3.528041487552311*^9, 3.5280415618146086`*^9}, {
   3.528051122796875*^9, 3.528051137734375*^9}, {3.528051174296875*^9, 
   3.528051185125*^9}, {3.5280512355625*^9, 3.528051299796875*^9}, {
   3.528051363734375*^9, 3.52805140965625*^9}, {3.5280515264375*^9, 
   3.528051532171875*^9}, {3.52805158034375*^9, 3.52805165309375*^9}, {
   3.528051792796875*^9, 3.528051812234375*^9}, {3.528052030484375*^9, 
   3.528052044890625*^9}, {3.528052089546875*^9, 3.528052098625*^9}, {
   3.528052162734375*^9, 3.528052202375*^9}, {3.52805223465625*^9, 
   3.528052236984375*^9}, 3.528053690546875*^9, {3.52805379203125*^9, 
   3.528053796109375*^9}, {3.52805452378125*^9, 3.52805457521875*^9}, {
   3.528054605765625*^9, 3.528054606734375*^9}, {3.528054638796875*^9, 
   3.52805465125*^9}, {3.528054738703125*^9, 3.52805474915625*^9}, {
   3.528054853375*^9, 3.528054886625*^9}, {3.5280549484375*^9, 
   3.528054956421875*^9}, {3.5283029786875*^9, 3.528303001*^9}, {
   3.528303106265625*^9, 3.528303122734375*^9}, {3.5283031554375*^9, 
   3.52830321203125*^9}, {3.529486311265625*^9, 3.5294864304375*^9}, {
   3.5294907891875*^9, 3.529490812890625*^9}, {3.529491541515625*^9, 
   3.529491560578125*^9}, {3.529491956484375*^9, 3.529492048*^9}, 
   3.52949208353125*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"findradfaster", "[", 
   RowBox[{"n_", ",", "t_", ",", "u_", ",", "acc_", ",", "R_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"left", ",", "right", ",", "denominator", ",", 
      RowBox[{"done", "=", "False"}], ",", "pos", ",", 
      RowBox[{"ct", "=", "0"}], ",", "val", ",", "valold", ",", " ", "newu", 
      ",", " ", "newacc", ",", " ", "sub"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"left", "=", 
      RowBox[{"Abs", "[", 
       RowBox[{"t", "-", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"right", "=", 
      RowBox[{"Min", "[", 
       RowBox[{"n", ",", 
        RowBox[{"t", "+", "1"}], ",", "R"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"check", " ", "special", " ", "values"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"u", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"ct", ",", " ", "right"}], "}"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"u", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"ct", ",", " ", "left"}], "}"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"compute", " ", "the", " ", "common", " ", "denominator"}], " ",
       "*)"}], "\[IndentingNewLine]", 
     RowBox[{"denominator", "=", 
      RowBox[{"cdfvalCalcDeno", "[", 
       RowBox[{"n", ",", " ", "t"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"sub", " ", "=", " ", 
      RowBox[{"cdfvalSub", "[", 
       RowBox[{"n", ",", "t"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"newu", "=", 
      RowBox[{
       RowBox[{"u", " ", "*", " ", "denominator"}], " ", "+", " ", "sub"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Print", "[", " ", 
        RowBox[{"\"\<demo = \>\"", ",", " ", 
         RowBox[{"N", "[", "denominator", "]"}], ",", " ", 
         "\"\< and sub = \>\"", ",", " ", 
         RowBox[{"N", "[", "sub", "]"}]}], "]"}], ";"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"If", " ", "[", 
      RowBox[{
       RowBox[{"denominator", " ", ">", " ", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"newacc", "=", " ", 
         RowBox[{"acc", "*", "denominator"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"done", "=", "False"}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"!", "done"}], "  ", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ct", "++"}], ";", "\[IndentingNewLine]", 
           RowBox[{"pos", "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"left", "+", "right"}], ")"}], "/", "2"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"val", "=", 
            RowBox[{"cdfvalNoDenoNoSub", "[", 
             RowBox[{"n", ",", " ", "pos"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"newu", "-", "val"}], "]"}], "<", "newacc"}], ",", 
             "\[IndentingNewLine]", "\t", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"ct", ",", " ", "pos"}], " ", "}"}], "]"}]}], "]"}], 
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", " ", "[", 
            RowBox[{
             RowBox[{"newu", " ", ">", " ", "val"}], ",", " ", 
             "\[IndentingNewLine]", "\t", 
             RowBox[{
              RowBox[{"left", "=", "pos"}], ";"}], " ", ",", 
             "\[IndentingNewLine]", "\t", 
             RowBox[{
              RowBox[{"right", " ", "=", " ", "pos"}], ";"}]}], "]"}], 
           ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], 
        ";"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "do", " ", "the", " ", "same", " ", "with", " ", "the", " ", 
         "inequality", " ", "sign", " ", "changed"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"newacc", "=", 
         RowBox[{
          RowBox[{"-", " ", "acc"}], "*", "denominator"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"done", "=", "False"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"!", "done"}], " ", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ct", "++"}], ";", "\[IndentingNewLine]", 
           RowBox[{"pos", "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"left", "+", "right"}], ")"}], "/", "2"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"val", "=", 
            RowBox[{"cdfvalNoDenoNoSub", "[", 
             RowBox[{"n", ",", "pos"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"newu", "-", "val"}], "]"}], "<", "newacc"}], ",", 
             "\[IndentingNewLine]", "\t", 
             RowBox[{"Return", "[", 
              RowBox[{"{", 
               RowBox[{"ct", ",", "pos"}], " ", "}"}], "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", " ", "[", 
            RowBox[{
             RowBox[{"newu", " ", "<", " ", "val"}], ",", " ", 
             "\[IndentingNewLine]", "\t", 
             RowBox[{
              RowBox[{"left", "=", "pos"}], ";"}], " ", ",", 
             "\[IndentingNewLine]", "\t", 
             RowBox[{
              RowBox[{"right", " ", "=", " ", "pos"}], ";"}]}], "]"}], 
           ";"}]}], "\[IndentingNewLine]", "\t", "\[IndentingNewLine]", "]"}],
         ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.52698470834375*^9, 3.526984737328125*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"determineR", "[", 
   RowBox[{"tau_", ",", "R_", ",", "remainingSteps_", ",", "acc_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"newR", ",", "u", ",", "v", ",", 
      RowBox[{"done", "=", "False"}], ",", "r", ",", "pr", ",", "qr", ",", 
      RowBox[{"ct", "=", "0"}], ",", "t", ",", 
      RowBox[{"umod", "=", "1"}], ",", 
      RowBox[{"vmod", "=", "1"}], ",", "uuse", ",", "c", ",", 
      RowBox[{"noaccrej", "=", "False"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"t", "=", 
      RowBox[{"SetPrecision", "[", 
       RowBox[{"tau", ",", "Infinity"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"t", "+", "1"}], ">", "R"}], "&&", 
          RowBox[{"remainingSteps", "\[GreaterEqual]", " ", "R"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"umod", "=", 
           RowBox[{"cdfvalshort", "[", 
            RowBox[{"remainingSteps", ",", "t", ",", "R"}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"u", "=", 
      RowBox[{"SetPrecision", "[", 
       RowBox[{
        RowBox[{"umod", " ", 
         RowBox[{"RandomReal", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", 
           RowBox[{
           "WorkingPrecision", "\[Rule]", "RANDOMWORKINGPRECISION"}]}], 
          "]"}]}], ",", "Infinity"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"newR", "=", 
      RowBox[{"findrad", "[", 
       RowBox[{"remainingSteps", ",", "t", ",", "u", ",", "acc", ",", "R"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"newR", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5230656754561167`*^9, 3.5230656810254354`*^9}, {
   3.523065718680589*^9, 3.5230657578088274`*^9}, {3.523065788907606*^9, 
   3.523065798045129*^9}, {3.5230659768113537`*^9, 3.5230659770763683`*^9}, {
   3.523066529420961*^9, 3.5230665541363745`*^9}, {3.523067260063751*^9, 
   3.523067271965432*^9}, {3.523067327509609*^9, 3.5230673419424343`*^9}, {
   3.5234673321330066`*^9, 3.523467402712044*^9}, {3.523467436432972*^9, 
   3.523467485777795*^9}, {3.52698566184375*^9, 3.526985665609375*^9}, 
   3.5269856974375*^9, {3.526985786140625*^9, 3.526985816203125*^9}, {
   3.526990147203125*^9, 3.526990159390625*^9}, {3.526990204375*^9, 
   3.52699020721875*^9}, {3.5269909088125*^9, 3.526990912078125*^9}, 
   3.526991273484375*^9, {3.526991645296875*^9, 3.526991645609375*^9}, {
   3.52699282115625*^9, 3.52699282290625*^9}, {3.526992942703125*^9, 
   3.526992943109375*^9}, {3.5270007133125*^9, 3.5270007158125*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"generateConfinedPolygon", "[", 
   RowBox[{
   "steps_", ",", "centerZValue_", ",", "confinementRadius_", ",", "acc_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"origin", "=", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", "ptlst", ",", 
      RowBox[{"center", "=", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "centerZValue"}], "}"}]}], ",", 
      RowBox[{"print", "=", "False"}], ",", "remainingSteps", ",", "pt", ",", 
      "temppt", ",", "dist", ",", "newR", ",", "methretryct", ",", "methct", 
      ",", "retryct", ",", 
      RowBox[{"totmethretry", "=", "0"}], ",", 
      RowBox[{"totmeth", "=", "0"}], ",", 
      RowBox[{"totretries", "=", "0"}], ",", 
      RowBox[{"done", "=", "False"}], ",", 
      RowBox[{"validPolygon", "=", "False"}], ",", 
      RowBox[{"polygonRetry", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"generate", " ", "a", " ", "polygon", " ", "until", " ", 
      RowBox[{"it", "'"}], "s", " ", "valid"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"!", "validPolygon"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"remainingSteps", "=", 
         RowBox[{"steps", "-", "2"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ptlst", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"totretries", "=", "0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"totmethretry", "=", "0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"totmeth", "=", "0"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"print", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Print", "[", "origin", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "pick", " ", "the", " ", "first", " ", "point", " ", "and", " ", 
           "make", " ", "sure", " ", 
           RowBox[{"it", "'"}], "s", " ", "in", " ", "confinement"}], " ", 
          "-", " ", 
          RowBox[{"repeat", " ", "if", " ", "needed"}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"ptlst", ",", "origin"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"retryct", "=", "0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"pt", "=", 
         RowBox[{"convertSphericalsToPoint", "[", 
          RowBox[{"pickSphericalCoordinates", "[", "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"done", "=", 
         RowBox[{
          RowBox[{"EuclideanDistance", "[", 
           RowBox[{"pt", ",", "center"}], "]"}], "\[LessEqual]", 
          "confinementRadius"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"!", "done"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"pt", "=", 
            RowBox[{"convertSphericalsToPoint", "[", 
             RowBox[{"pickSphericalCoordinates", "[", "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"done", "=", 
            RowBox[{
             RowBox[{"EuclideanDistance", "[", 
              RowBox[{"pt", ",", "center"}], "]"}], "\[LessEqual]", 
             "confinementRadius"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"retryct", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "dist", " ", "becomes", " ", "the", " ", "tau", " ", "value", " ", 
          "for", " ", "the", " ", "next", " ", "iteration"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"dist", "=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "the", " ", "point", " ", "is", " ", "added", " ", "to", " ", "the", 
          " ", "polygon"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"ptlst", ",", 
          RowBox[{"N", "[", "pt", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"totretries", "+=", "retryct"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"print", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<   dist from last pt \>\"", ",", 
             RowBox[{"N", "[", 
              RowBox[{"EuclideanDistance", "[", 
               RowBox[{"pt", ",", 
                RowBox[{"ptlst", "[", 
                 RowBox[{"[", 
                  RowBox[{"-", "2"}], "]"}], "]"}]}], "]"}], "]"}]}], "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{"\"\<rem steps \>\"", ",", 
             RowBox[{"steps", "-", "1"}], ",", "\"\< pt \>\"", ",", 
             RowBox[{"N", "[", "pt", "]"}], ",", "\"\< retryct \>\"", ",", 
             "retryct", ",", "\"\< methct \>\"", ",", "0"}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"remainingSteps", ">", "1"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "check", " ", "whether", " ", "we", " ", "are", " ", "at", " ", 
            "the", " ", "origin"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"dist", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"retryct", "=", "0"}], ";", "\[IndentingNewLine]", 
              RowBox[{"pt", " ", "=", " ", 
               RowBox[{"convertSphericalsToPoint", "[", 
                RowBox[{"pickSphericalCoordinates", "[", "]"}], "]"}]}], ";", 
              " ", "\[IndentingNewLine]", 
              RowBox[{"done", "=", 
               RowBox[{
                RowBox[{"EuclideanDistance", "[", 
                 RowBox[{"pt", ",", "center"}], "]"}], "\[LessEqual]", 
                "confinementRadius"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"While", "[", 
               RowBox[{
                RowBox[{"!", "done"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"pt", "=", 
                  RowBox[{"convertSphericalsToPoint", "[", 
                   RowBox[{"pickSphericalCoordinates", "[", "]"}], "]"}]}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{"done", "=", 
                  RowBox[{
                   RowBox[{"EuclideanDistance", "[", 
                    RowBox[{"pt", ",", "center"}], "]"}], "\[LessEqual]", 
                   "confinementRadius"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"retryct", "++"}], ";"}]}], "\[IndentingNewLine]", 
               "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"dist", "=", "1"}], ";", "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"ptlst", ",", " ", 
                RowBox[{"N", "[", "pt", "]"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"remainingSteps", "--"}], ";", "\[IndentingNewLine]", 
              RowBox[{"totretries", "+=", "retryct"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{"print", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Print", "[", 
                  RowBox[{"\"\<   dist from last pt \>\"", ",", 
                   RowBox[{"N", "[", 
                    RowBox[{"EuclideanDistance", "[", 
                    RowBox[{"pt", ",", 
                    RowBox[{"ptlst", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "2"}], "]"}], "]"}]}], "]"}], "]"}]}], "]"}],
                  ";", "\[IndentingNewLine]", 
                 RowBox[{"Print", "[", 
                  RowBox[{
                  "\"\<rem steps \>\"", ",", "remainingSteps", ",", 
                   "\"\< pt \>\"", ",", 
                   RowBox[{"N", "[", "pt", "]"}], ",", "\"\< retryct \>\"", 
                   ",", "retryct", ",", "\"\< methct \>\"", ",", "0"}], "]"}],
                  ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"Continue", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{
             "check", " ", "if", " ", "we", " ", "are", " ", 
              "remainingSteps"}], " ", "+", 
             RowBox[{
             "1", " ", "away", " ", "and", " ", "must", " ", "walk", " ", 
              "straight", " ", "towards", " ", "the", " ", "origin"}]}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"dist", "\[Equal]", 
              RowBox[{"remainingSteps", "+", "1"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"pt", "=", 
               RowBox[{
                FractionBox[
                 RowBox[{"dist", "-", "1"}], "dist"], "*", "pt"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"dist", "=", "remainingSteps"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"ptlst", ",", 
                RowBox[{"N", "[", "pt", "]"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"remainingSteps", "--"}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{"print", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Print", "[", 
                  RowBox[{"\"\<   dist from last pt \>\"", ",", 
                   RowBox[{"N", "[", 
                    RowBox[{"EuclideanDistance", "[", 
                    RowBox[{"pt", ",", 
                    RowBox[{"ptlst", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "2"}], "]"}], "]"}]}], "]"}], "]"}]}], "]"}],
                  ";", "\[IndentingNewLine]", 
                 RowBox[{"Print", "[", 
                  RowBox[{
                  "\"\<rem steps \>\"", ",", "remainingSteps", ",", 
                   "\"\< pt \>\"", ",", 
                   RowBox[{"N", "[", "pt", "]"}], ",", "\"\< retryct \>\"", 
                   ",", "retryct", ",", "\"\< methct \>\"", ",", "0"}], "]"}],
                  ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"Continue", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{
             "none", " ", "of", " ", "the", " ", "special", " ", "cases"}], 
             " ", "-", " ", 
             RowBox[{
             "so", " ", "generate", " ", "the", " ", "next", " ", "point", 
              " ", "using", " ", "the", " ", "cdf"}], "   ", "-", " ", 
             RowBox[{
             "repeat", " ", "if", " ", "not", " ", "in", " ", 
              "confinement"}]}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"methct", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"retryct", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"newR", "=", 
            RowBox[{"determineR", "[", 
             RowBox[{"dist", ",", 
              RowBox[{"confinementRadius", "+", 
               RowBox[{"Abs", "[", "centerZValue", "]"}]}], ",", 
              "remainingSteps", ",", "acc"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"newR", "\[Equal]", "Null"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"polygonRetry", "++"}], ";", "\[IndentingNewLine]", 
              RowBox[{
              "Print", "[", "\"\<Null from newR...restarting\>\"", "]"}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"methct", "+=", 
            RowBox[{"newR", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"temppt", "=", 
            RowBox[{"circMat", "[", 
             RowBox[{"pt", ",", 
              RowBox[{"newR", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"done", "=", 
            RowBox[{
             RowBox[{"EuclideanDistance", "[", 
              RowBox[{"temppt", ",", "center"}], "]"}], "\[LessEqual]", 
             "confinementRadius"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{"!", "done"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"newR", "=", 
               RowBox[{"determineR", "[", 
                RowBox[{"dist", ",", 
                 RowBox[{"confinementRadius", "+", 
                  RowBox[{"Abs", "[", "centerZValue", "]"}]}], ",", 
                 "remainingSteps", ",", "acc"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"newR", "\[Equal]", "Null"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"polygonRetry", "++"}], ";", "\[IndentingNewLine]", 
                 RowBox[{
                 "Print", "[", "\"\<Null from newR...restarting\>\"", "]"}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
               "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"methct", "+=", 
               RowBox[{"newR", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"temppt", "=", 
               RowBox[{"circMat", "[", 
                RowBox[{"pt", ",", 
                 RowBox[{"newR", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"done", "=", 
               RowBox[{
                RowBox[{"EuclideanDistance", "[", 
                 RowBox[{"temppt", ",", "center"}], "]"}], "\[LessEqual]", 
                "confinementRadius"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"retryct", "++"}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"retryct", ">", "100"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"polygonRetry", "++"}], ";", "\[IndentingNewLine]", 
                 RowBox[{
                 "Print", "[", 
                  "\"\<Unexpectedly large number of \
retries...restarting!\>\"", "]"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
               "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"totretries", "+=", "retryct"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"totmeth", "+=", "methct"}], ";", "\[IndentingNewLine]", 
           RowBox[{"pt", "=", "temppt"}], ";", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"ptlst", ",", 
             RowBox[{"N", "[", "pt", "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"dist", "=", 
            RowBox[{"newR", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"print", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{"\"\<   dist from last pt \>\"", ",", 
                RowBox[{"N", "[", 
                 RowBox[{"EuclideanDistance", "[", 
                  RowBox[{"pt", ",", 
                   RowBox[{"ptlst", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "2"}], "]"}], "]"}]}], "]"}], "]"}], ",", 
                "\"\< newR \>\"", ",", 
                RowBox[{"N", "[", 
                 RowBox[{"newR", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"Print", "[", 
               RowBox[{
               "\"\<rem steps \>\"", ",", "remainingSteps", ",", 
                "\"\< pt \>\"", ",", "pt", ",", "\"\< retryct \>\"", ",", 
                "retryct", ",", "\"\< methct \>\"", ",", "methct"}], "]"}], 
              ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"remainingSteps", "--"}], ";"}]}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "]"}], ";", 
        RowBox[{"(*", 
         RowBox[{"close", " ", "while", " ", "remainingsteps"}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "generate", " ", "X1", " ", "on", " ", "the", " ", "intersection", 
          " ", "circle", " ", "of", " ", "a", " ", "unit", " ", "sphere", " ",
           "around", " ", "the", " ", "origin", " ", "and", " ", "around", 
          " ", "the", " ", "current", " ", "point"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "ptlst", "]"}], "\[Equal]", 
           RowBox[{"(", 
            RowBox[{"steps", "-", "1"}], ")"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"temppt", "=", 
            RowBox[{"circMat", "[", 
             RowBox[{"pt", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"done", "=", 
            RowBox[{
             RowBox[{"EuclideanDistance", "[", 
              RowBox[{"temppt", ",", "center"}], "]"}], "\[LessEqual]", 
             "confinementRadius"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"retryct", "=", "0"}], ";", "\[IndentingNewLine]", 
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{"!", "done"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"temppt", "=", 
               RowBox[{"circMat", "[", 
                RowBox[{"pt", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"done", "=", 
               RowBox[{
                RowBox[{"EuclideanDistance", "[", 
                 RowBox[{"temppt", ",", "center"}], "]"}], "\[LessEqual]", 
                "confinementRadius"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"retryct", "++"}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"retryct", ">", "40"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"polygonRetry", "++"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{"print", ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    "Print", "[", 
                    "\"\<Impossible to close polygon...restarting!\>\"", 
                    "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
               "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", "done"}], ",", 
             RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"totretries", "+=", "retryct"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"pt", "=", "temppt"}], ";", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"ptlst", ",", 
             RowBox[{"N", "[", "pt", "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"dist", "=", "1"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"print", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Print", "[", 
               RowBox[{"\"\<   dist from last pt \>\"", ",", 
                RowBox[{"N", "[", 
                 RowBox[{"EuclideanDistance", "[", 
                  RowBox[{"pt", ",", 
                   RowBox[{"ptlst", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "2"}], "]"}], "]"}]}], "]"}], "]"}]}], "]"}],
               ";", "\[IndentingNewLine]", 
              RowBox[{"Print", "[", 
               RowBox[{
               "\"\<rem steps \>\"", ",", "remainingSteps", ",", 
                "\"\< pt \>\"", ",", 
                RowBox[{"N", "[", "pt", "]"}], ",", "\"\< retryct \>\"", ",", 
                "retryct", ",", "\"\< methct \>\"", ",", "0"}], "]"}], 
              ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"ptlst", ",", "origin"}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"print", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Print", "[", "origin", "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"close", " ", "ptlst"}], "=", 
          RowBox[{"steps", "-", 
           RowBox[{"1", " ", "if"}]}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "ptlst", "]"}], "\[Equal]", 
           RowBox[{"(", 
            RowBox[{"steps", "+", "1"}], ")"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"validPolygon", "=", "True"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", 
     RowBox[{"(*", 
      RowBox[{"close", " ", "while", " ", "validpolygon"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"print", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<total retries \>\"", ",", "totretries", ",", 
          "\"\<, total method retries \>\"", ",", "totmeth", ",", 
          "\"\<, poly retries \>\"", ",", "polygonRetry"}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "ptlst", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}], 
  RowBox[{"(*", 
   RowBox[{"close", " ", "module"}], "*)"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.522087678604912*^9, 3.5220876799479885`*^9}, 
   3.522087739989423*^9, {3.522165662816852*^9, 3.5221658353127184`*^9}, {
   3.5230667182327604`*^9, 3.5230667316015253`*^9}, {3.5234590677073083`*^9, 
   3.523459111863834*^9}, {3.523459184597994*^9, 3.5234591855450487`*^9}, {
   3.523734153624651*^9, 3.5237341542706876`*^9}, {3.5237400398288493`*^9, 
   3.523740047488287*^9}, {3.52698600290625*^9, 3.526986148890625*^9}, {
   3.52698627403125*^9, 3.5269862995*^9}, {3.526986357359375*^9, 
   3.5269864404375*^9}, {3.526989980203125*^9, 3.526989980703125*^9}, {
   3.526990952640625*^9, 3.526990983671875*^9}, {3.526991081703125*^9, 
   3.52699108225*^9}, {3.5269913233125*^9, 3.526991323796875*^9}, {
   3.527001787859375*^9, 3.527001788265625*^9}, {3.527439347010388*^9, 
   3.5274393500335608`*^9}, {3.5274523028867006`*^9, 
   3.5274523161954613`*^9}, {3.5274538749646177`*^9, 3.527453877173744*^9}, {
   3.527454243181679*^9, 3.527454245090788*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"determineR", "[", 
    RowBox[{"tau_", ",", "R_", ",", "remainingSteps_", ",", "acc_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"newR", ",", "u", ",", "v", ",", 
       RowBox[{"done", "=", "False"}], ",", "r", ",", "pr", ",", "qr", ",", 
       RowBox[{"ct", "=", "0"}], ",", "t", ",", 
       RowBox[{"umod", "=", "1"}], ",", 
       RowBox[{"vmod", "=", "1"}], ",", "uuse", ",", "c", ",", 
       RowBox[{"noaccrej", "=", "False"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"t", "=", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{"tau", ",", "Infinity"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"remainingSteps", "\[LessEqual]", "20"}], "||", 
           RowBox[{"t", ">", "5"}]}], ")"}], "||", "noaccrej"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"t", "+", "1"}], ">", "R"}], "&&", 
            RowBox[{"remainingSteps", "\[GreaterEqual]", " ", "R"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"umod", "=", 
             RowBox[{"cdfvalshort", "[", 
              RowBox[{"remainingSteps", ",", "t", ",", "R"}], "]"}]}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"u", "=", 
          RowBox[{"SetPrecision", "[", 
           RowBox[{
            RowBox[{"umod", " ", 
             RowBox[{"RandomReal", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], ",", 
               RowBox[{
               "WorkingPrecision", "\[Rule]", "RANDOMWORKINGPRECISION"}]}], 
              "]"}]}], ",", "Infinity"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"newR", "=", 
          RowBox[{"findrad", "[", 
           RowBox[{
           "remainingSteps", ",", "t", ",", "u", ",", "acc", ",", "R"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"N", "[", 
             RowBox[{"newR", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], "]"}], ";"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{"!", "done"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"t", "+", "1"}], ">", "R"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"vmod", "=", 
                 RowBox[{"vforR", "[", 
                  RowBox[{"R", ",", "t"}], "]"}]}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"u", "=", 
              RowBox[{"SetPrecision", "[", 
               RowBox[{
                RowBox[{"RandomReal", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}], ",", 
                  RowBox[{
                  "WorkingPrecision", "\[Rule]", "RANDOMWORKINGPRECISION"}]}],
                  "]"}], ",", "Infinity"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"v", "=", 
              RowBox[{"SetPrecision", "[", 
               RowBox[{
                RowBox[{"vmod", " ", 
                 RowBox[{"RandomReal", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", 
                   RowBox[{
                   "WorkingPrecision", "\[Rule]", 
                    "RANDOMWORKINGPRECISION"}]}], "]"}]}], ",", "Infinity"}], 
               "]"}]}], ";"}], ";", "\[IndentingNewLine]", 
            RowBox[{"r", "=", 
             RowBox[{"pickR", "[", 
              RowBox[{"v", ",", "t"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"pr", "=", 
             RowBox[{"pexact", "[", 
              RowBox[{"remainingSteps", ",", "t", ",", "r"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"qr", "=", 
             RowBox[{"q", "[", 
              RowBox[{"t", ",", "r"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"ct", "++"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"remainingSteps", ">", "50"}], ",", 
              RowBox[{
               RowBox[{"c", "=", 
                RowBox[{"3", "/", "2"}]}], ";"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"remainingSteps", ">", "40"}], ",", 
                 RowBox[{
                  RowBox[{"c", "=", 
                   RowBox[{"1", "+", 
                    RowBox[{"t", "/", "12"}]}]}], ";"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"remainingSteps", ">", "30"}], ",", 
                    RowBox[{
                    RowBox[{"c", "=", 
                    RowBox[{"1", "+", 
                    RowBox[{"t", "/", "9"}]}]}], ";"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"c", "=", 
                    RowBox[{"1", "+", 
                    RowBox[{"t", "/", "5"}]}]}], ";"}]}], "]"}], ";"}]}], 
                "]"}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"u", "\[LessEqual]", 
               FractionBox["pr", 
                RowBox[{"c", " ", "qr"}]]}], ",", 
              RowBox[{
               RowBox[{"done", "=", "True"}], ";"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{"ct", ",", 
            RowBox[{"N", "[", "r", "]"}]}], "}"}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  " ", "*)"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5230656754561167`*^9, 3.5230656810254354`*^9}, {
  3.523065718680589*^9, 3.5230657578088274`*^9}, {3.523065788907606*^9, 
  3.523065798045129*^9}, {3.5230659768113537`*^9, 3.5230659770763683`*^9}, {
  3.523066529420961*^9, 3.5230665541363745`*^9}, {3.523067260063751*^9, 
  3.523067271965432*^9}, {3.523067327509609*^9, 3.5230673419424343`*^9}, {
  3.5234673321330066`*^9, 3.523467402712044*^9}, {3.523467436432972*^9, 
  3.523467485777795*^9}, {3.52698566184375*^9, 3.526985665609375*^9}, {
  3.5269856974375*^9, 3.52698571821875*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["random polygon batch functions", "Subsection"]], \
"Subsubsection",
 CellChangeTimes->{{3.5220881198201475`*^9, 3.522088131885838*^9}, {
  3.522088433476088*^9, 3.5220884412605333`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"generatefixedoffsetfilebatch", "[", 
   RowBox[{
   "steps_", ",", "R_", ",", "c_", ",", "acc_", ",", "size_", ",", 
    "fileCount_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"list", ",", "ind"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Which", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"R", "+", 
         RowBox[{"Abs", "[", "c", "]"}]}], "\[LessEqual]", "1"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"initPolyGeneration", "[", 
         RowBox[{"steps", ",", "1"}], "]"}], ";"}], "\[IndentingNewLine]", 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"R", "+", 
         RowBox[{"Abs", "[", "c", "]"}]}], "\[LessEqual]", 
        RowBox[{"3", "/", "2"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"initPolyGeneration", "[", 
         RowBox[{"steps", ",", 
          RowBox[{"3", "/", "2"}]}], "]"}], ";"}], "\[IndentingNewLine]", ",",
        "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"R", "+", 
         RowBox[{"Abs", "[", "c", "]"}]}], "\[LessEqual]", "2"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"initPolyGeneration", "[", 
         RowBox[{"steps", ",", "2"}], "]"}], ";"}], "\[IndentingNewLine]", 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"R", "+", 
         RowBox[{"Abs", "[", "c", "]"}]}], "\[LessEqual]", 
        RowBox[{"5", "/", "2"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"initPolyGeneration", "[", 
         RowBox[{"steps", ",", 
          RowBox[{"5", "/", "2"}]}], "]"}], ";"}], "\[IndentingNewLine]", ",",
        "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"R", "+", 
         RowBox[{"Abs", "[", "c", "]"}]}], "\[LessEqual]", "3"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"initPolyGeneration", "[", 
         RowBox[{"steps", ",", "3"}], "]"}], ";"}], "\[IndentingNewLine]", 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"R", "+", 
         RowBox[{"Abs", "[", "c", "]"}]}], "\[LessEqual]", 
        RowBox[{"7", "/", "2"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"initPolyGeneration", "[", 
         RowBox[{"steps", ",", 
          RowBox[{"7", "/", "2"}]}], "]"}], ";"}], "\[IndentingNewLine]", ",",
        "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"R", "+", 
         RowBox[{"Abs", "[", "c", "]"}]}], "\[LessEqual]", "4"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"initPolyGeneration", "[", 
         RowBox[{"steps", ",", "4"}], "]"}], ";"}], "\[IndentingNewLine]", 
       ",", "\[IndentingNewLine]", "True", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "Print", "[", "\"\<confinement and centerz out of range\>\"", "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Abort", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"ind", "=", "1"}], ",", 
       RowBox[{"ind", "\[LessEqual]", "fileCount"}], ",", 
       RowBox[{"ind", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<File recur \>\"", ",", "ind"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"list", "=", 
         RowBox[{"generatefixedoffsetbatch", "[", 
          RowBox[{"steps", ",", "R", ",", "c", ",", "acc", ",", "size"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Export", "[", 
         RowBox[{
          RowBox[{"\"\<step\>\"", "<>", 
           RowBox[{"ToString", "[", "steps", "]"}], "<>", "\"\<R\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"Numerator", "[", "R", "]"}], "]"}], "<>", "\"\<_\>\"", 
           " ", "<>", " ", 
           RowBox[{"ToString", "[", 
            RowBox[{"Denominator", "[", "R", "]"}], "]"}], "<>", 
           "\"\<offset\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"c", "*", "10"}], "]"}], "<>", "\"\<batch\>\"", "<>", 
           RowBox[{"ToString", "[", "ind", "]"}], "<>", "\"\<.wdx\>\""}], ",",
           "list"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.523731411311799*^9, 3.5237316469912796`*^9}, {
   3.523731678748096*^9, 3.5237316960540857`*^9}, {3.5237318677889085`*^9, 
   3.5237318857099333`*^9}, {3.523731933983694*^9, 3.5237319358107986`*^9}, 
   3.525350072933547*^9, {3.525354838609375*^9, 3.525354857671875*^9}, {
   3.5273747936137657`*^9, 3.5273747940767922`*^9}, {3.5291423079618816`*^9, 
   3.5291423674302835`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"generatefixedoffsetfilebatchstartstop", "[", 
   RowBox[{
   "steps_", ",", "R_", ",", "c_", ",", "acc_", ",", "size_", ",", 
    "startnum_", ",", "stopnum_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"list", ",", "ind"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"ind", "=", "startnum"}], ",", 
       RowBox[{"ind", "\[LessEqual]", "stopnum"}], ",", 
       RowBox[{"ind", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<File recur \>\"", ",", "ind"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"list", "=", 
         RowBox[{"generatefixedoffsetbatch", "[", 
          RowBox[{"steps", ",", "R", ",", "c", ",", "acc", ",", "size"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Export", "[", 
         RowBox[{
          RowBox[{"\"\<step\>\"", "<>", 
           RowBox[{"ToString", "[", "steps", "]"}], "<>", "\"\<R\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"Numerator", "[", "R", "]"}], "]"}], "<>", "\"\<_\>\"", 
           " ", "<>", " ", 
           RowBox[{"ToString", "[", 
            RowBox[{"Denominator", "[", "R", "]"}], "]"}], "<>", 
           "\"\<offset\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"c", "*", "10"}], "]"}], "<>", "\"\<batch\>\"", "<>", 
           RowBox[{"ToString", "[", "ind", "]"}], "<>", "\"\<.wdx\>\""}], ",",
           "list"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.523731411311799*^9, 3.5237316469912796`*^9}, {
   3.523731678748096*^9, 3.5237316960540857`*^9}, {3.5237318677889085`*^9, 
   3.5237318857099333`*^9}, {3.523731933983694*^9, 3.5237319358107986`*^9}, {
   3.52378696937798*^9, 3.523786995284462*^9}, 3.5253500764037457`*^9, 
   3.525354872046875*^9, {3.527374799898125*^9, 3.5273748004121547`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"generatefixedoffsetbatch", "[", 
   RowBox[{"steps_", ",", "R_", ",", "c_", ",", "acc_", ",", "size_"}], "]"}],
   ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"seed", ",", "poly", ",", 
      RowBox[{"lst", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"print", "=", "False"}], ",", "i"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"{", 
      RowBox[{"acc", ",", "steps", ",", "rad", ",", 
       RowBox[{"{", "cenpt", "}"}], ",", "poly"}], "}"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{"print", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "Print", "[", "\"\<{seed,{time,{acc,steps,rad,{cenpt},poly}}}\>\"", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "size"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{"i", ",", "100"}], "]"}], "\[Equal]", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<   bat recur \>\"", ",", "i"}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"seed", "=", 
         RowBox[{"RandomInteger", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "100000000"}], "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"SeedRandom", "[", "seed", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", "seed", "]"}], ";"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"poly", "=", 
         RowBox[{"Timing", "[", 
          RowBox[{"generateConfinedPolygon", "[", 
           RowBox[{"steps", ",", 
            RowBox[{"-", "c"}], ",", "R", ",", "acc"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"lst", ",", 
          RowBox[{"{", 
           RowBox[{"seed", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"poly", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"acc", ",", "steps", ",", "R", ",", 
                RowBox[{"{", 
                 RowBox[{"c", ",", "0", ",", "0"}], "}"}], ",", 
                RowBox[{"poly", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "}"}]}], "}"}]}], 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "lst", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5218550239434023`*^9, 3.5218551273213153`*^9}, {
   3.521855162481326*^9, 3.5218552990471373`*^9}, {3.521855334099142*^9, 
   3.5218553693211565`*^9}, {3.521856601063608*^9, 3.5218566197116747`*^9}, {
   3.5218566726757045`*^9, 3.5218566729287186`*^9}, {3.521990548957389*^9, 
   3.5219905569448457`*^9}, {3.5230683266827583`*^9, 
   3.5230683269107714`*^9}, {3.523460991212327*^9, 3.523461103207732*^9}, 
   3.52373171501517*^9, {3.5273748078405795`*^9, 3.5273748080465913`*^9}, {
   3.5273754704104767`*^9, 3.527375473024626*^9}, {3.527455626352792*^9, 
   3.5274556288359337`*^9}, {3.548007125265625*^9, 3.548007126625*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"generatebatchuniform", "[", 
   RowBox[{"steps_", ",", "confinementRadius_", ",", "acc_", ",", "size_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"seed", ",", 
      RowBox[{"lst", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"print", "=", "False"}], ",", "i"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{"print", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "Print", "[", "\"\<{seed,{time,{acc,steps,rad,{cenpt},poly}}}\>\"", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "size"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{"i", ",", "100"}], "]"}], "\[Equal]", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\< bat recur \>\"", ",", "i"}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"seed", "=", 
         RowBox[{"RandomInteger", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "100000000"}], "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", "seed", "]"}], ";"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"SeedRandom", "[", "seed", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"lst", ",", 
          RowBox[{"{", 
           RowBox[{"seed", ",", 
            RowBox[{
             RowBox[{"randomPolygonUniform", "[", 
              RowBox[{"steps", ",", "confinementRadius", ",", "acc"}], "]"}], 
             "//", "Timing"}]}], "}"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "lst", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQHc84716YzSvHOKvIRyDaSmLPBxAdtOfPJxCtO1WR
MRxIG12R5gDR/7Zkm4HoBWYZViA6/ly/I4hOKtrhB6K3yT8JAtEb5M+Gg+ic
M8WxIDor4noqiDYrZpCIANL3fmwA03Uf+xRA9AffRWD6qPE5OxBtGvwfTM9l
6q4B0ad3HwXTATOPN4LoBnXmJhCtd3aV0GTbV44JD2zFQfQz45tMU4F02Do3
ZhD9ukbMeCWQ9pJ1BNN72lztbgHpF4vTwXSzX4nJDvtXjhcbq8G0mt+pu+UO
QPGzT8B0gFzYn3furxyjCuLAtAPnGo/3QPpW7HUwLTDvtg+Inv+G1xdEAwDD
9qDI
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"generatebatchdistrib", "[", 
   RowBox[{"steps_", ",", "confinementRadius_", ",", "acc_", ",", "size_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"seed", ",", 
      RowBox[{"lst", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"print", "=", "False"}], ",", "i"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{"print", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "Print", "[", "\"\<{seed,{time,{acc,steps,rad,{cenpt},poly}}}\>\"", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "size"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{"i", ",", "100"}], "]"}], "\[Equal]", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\< bat recur \>\"", ",", "i"}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"seed", "=", 
         RowBox[{"RandomInteger", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "100000000"}], "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<  i \>\"", ",", "i", ",", "\"\< seed \>\"", ",", "seed"}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"SeedRandom", "[", "seed", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"lst", ",", 
          RowBox[{"{", 
           RowBox[{"seed", ",", 
            RowBox[{
             RowBox[{"randomPolygonDistrib", "[", 
              RowBox[{"steps", ",", "confinementRadius", ",", "acc"}], "]"}], 
             "//", "Timing"}]}], "}"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "lst", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.522089465027089*^9, 3.5220894832381306`*^9}, {
  3.5221038249032316`*^9, 3.5221038250002375`*^9}, {3.5221671822137566`*^9, 
  3.5221671851939273`*^9}, {3.522174134398399*^9, 3.5221741431719007`*^9}, {
  3.522174195537896*^9, 3.522174216169076*^9}, {3.52217996313093*^9, 
  3.5221799659000883`*^9}, {3.5222640783788614`*^9, 3.5222640947897997`*^9}, {
  3.522264283533595*^9, 3.5222642901469736`*^9}, {3.523460866477192*^9, 
  3.52346087063443*^9}, {3.5273748256715994`*^9, 3.5273748259006124`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"uniformballpointold", "[", "R_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "c", ",", "sph", ",", "the", ",", "phi", ",", "x", ",", "y", ",", "z"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"WorkingPrecision", "\[Rule]", "RANDOMWORKINGPRECISION"}]}],
          "]"}], "^", 
        RowBox[{"(", 
         RowBox[{"1", "/", "3"}], ")"}]}], "*", "R"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sph", "=", 
      RowBox[{"pickSphericalCoordinates", "[", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"the", "=", 
      RowBox[{"sph", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"phi", "=", 
      RowBox[{"sph", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{"c", "*", 
       RowBox[{"Sin", "[", "phi", "]"}], "*", 
       RowBox[{"Cos", "[", "the", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"c", "*", 
       RowBox[{"Sin", "[", "phi", "]"}], "*", 
       RowBox[{"Sin", "[", "the", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"z", "=", 
      RowBox[{"c", "*", 
       RowBox[{"Cos", "[", "phi", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"c", ",", "the", ",", "phi"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "}"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5220760945225143`*^9, 3.5220763195103827`*^9}, {
   3.5220764921292562`*^9, 3.52207651667866*^9}, {3.5220883762068124`*^9, 
   3.5220883782029266`*^9}, {3.522088496506693*^9, 3.522088499457862*^9}, 
   3.523459768384385*^9, {3.5234606297006493`*^9, 3.5234606373600874`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"uniformballpoint", "[", "R_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z", ",", "mag"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"x", "=", 
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", "1"}], "]"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "RANDOMWORKINGPRECISION"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", "1"}], "]"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "RANDOMWORKINGPRECISION"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"z", "=", 
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", "1"}], "]"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "RANDOMWORKINGPRECISION"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"mag", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"ExponentialDistribution", "[", "1", "]"}], ",", 
          RowBox[{"WorkingPrecision", "\[Rule]", "RANDOMWORKINGPRECISION"}]}],
          "]"}], "+", 
        RowBox[{"x", "^", "2"}], "+", 
        RowBox[{"y", "^", "2"}], "+", 
        RowBox[{"z", "^", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{
       RowBox[{"R", "/", "mag"}], "*", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.522088134609994*^9, 3.5220881441315384`*^9}, {
  3.52208823576678*^9, 3.5220882426051707`*^9}, {3.522088345657065*^9, 
  3.5220883477041817`*^9}, {3.522088490964376*^9, 3.522088493121499*^9}, {
  3.5234597840792828`*^9, 3.5234597875234795`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"distribballpt", "[", "R_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "c", ",", "sph", ",", "the", ",", "phi", ",", "x", ",", "y", ",", "z"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"c", "=", 
      RowBox[{"getoffset", "[", "R", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"sph", "=", 
      RowBox[{"pickSphericalCoordinates", "[", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"the", "=", 
      RowBox[{"sph", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"phi", "=", 
      RowBox[{"sph", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"x", "=", 
      RowBox[{"c", "*", 
       RowBox[{"Sin", "[", "phi", "]"}], "*", 
       RowBox[{"Cos", "[", "the", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{"c", "*", 
       RowBox[{"Sin", "[", "phi", "]"}], "*", 
       RowBox[{"Sin", "[", "the", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"z", "=", 
      RowBox[{"c", "*", 
       RowBox[{"Cos", "[", "phi", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"c", ",", "the", ",", "phi"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "}"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5220889659475436`*^9, 3.522089026990035*^9}, {
  3.522089163011815*^9, 3.522089260640399*^9}, {3.5220892930142508`*^9, 
  3.522089310190233*^9}, {3.522089364014312*^9, 3.5220893679075346`*^9}, {
  3.523068412510668*^9, 3.523068415673848*^9}, {3.5234596289154077`*^9, 
  3.5234596330516443`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getoffset", "[", "R_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"c", ",", "u"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"u", "=", 
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "RANDOMWORKINGPRECISION"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{
       RowBox[{"ufuncinv", "[", "R", "]"}], "/.", 
       RowBox[{"x", "\[Rule]", "u"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "c", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5220893197687807`*^9, 3.5220893595590568`*^9}, {
   3.522090414710189*^9, 3.5220904370664682`*^9}, {3.5220919787356462`*^9, 
   3.522092007717304*^9}, {3.5221659551305714`*^9, 3.5221659553375835`*^9}, {
   3.523066801118501*^9, 3.523066803699649*^9}, 3.5230673695590143`*^9, {
   3.5234596860726767`*^9, 3.523459687437755*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"randomPolygonUniform", "[", 
   RowBox[{"steps_", ",", "confinementRadius_", ",", "acc_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"c", ",", "poly", ",", "pt", ",", "R"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pt", "=", 
      RowBox[{
       RowBox[{"uniformballpointold", "[", "confinementRadius", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"SetPrecision", "[", 
       RowBox[{
        RowBox[{"pt", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "Infinity"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"poly", "=", 
      RowBox[{"generateConfinedPolygon", "[", 
       RowBox[{"steps", ",", 
        RowBox[{"-", "c"}], ",", "confinementRadius", ",", "acc"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"acc", ",", "steps", ",", 
        RowBox[{"N", "[", "confinementRadius", "]"}], ",", 
        RowBox[{"N", "[", "pt", "]"}], ",", "poly"}], "}"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJwd0EFIk2EAxvHPajFh2rLD1iFxUjYMQ0uNpm2zYijFkDnGopQVDjqIDs2k
DiF9rCwmVCMLc9M2043IMlPUQq0sc25oLrfUiCW5w0emli2zVr3Pe3j48b8+
klMVGuM6hmF2k0E+o7Urc7m8mW8OqpzN6oD8qapOGNNX3A8tlrNjMH1hcRzq
7/KCUJT97gNs+LspDL/HJ8QcJOYravnQ01wqgO9VT6jJj4aEUHXjN3WWlyOC
l+dNYsh0zxZoiFKdTQvPn/x6ByY7I9RqWbUDcv7GVhhenHNDb5n9MZSVBXrg
6fpX/bC0/eU8PGErDsOJgsIlOBLOWoaT3qL2ImLS5zqq7GLNfdgWMlPPWRu6
tMRRrY/KetldOmKlejkNStWhvVCpM2bCHs5aTltjNsFtx3Y2w+u8w9Q1QWOi
njhkmaB25N7bXEs0Vd1OgAvBeIX1AJfnsh2nOuLsKy6iOUXxA0brQnFuYiCb
EcKSpVURjHU3iaFfkCmBHu+n7VD4rP4jZLuj1BZV5A+M8PZEodhdKH9LlG99
Sn3gM3fCVbWnD0qPssNwuNVF5b7MjUHH838+mH/o5o5J4lTwZwq8MMLtgxlb
ruyHZyR6jZ/Y1vSLmjjgKIEzg+kG2Ou1lMNL0zkVcG1DpW2aqErd6ISGlpWH
8IUs2gWVtwJv4FVJ0ihtw/qBGiX578i1QZjhjH0N7anGcfgf1UlvWg==
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"randomPolygonDistrib", "[", 
   RowBox[{"steps_", ",", "confinementRadius_", ",", "acc_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"c", ",", "poly", ",", "pt", ",", "R", ",", "sph", ",", "rand"}],
      "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rand", "=", 
      RowBox[{"distribballpt", "[", "confinementRadius", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pt", "=", 
      RowBox[{"rand", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{"SetPrecision", "[", 
       RowBox[{
        RowBox[{"pt", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "Infinity"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"poly", "=", 
      RowBox[{"generateConfinedPolygon", "[", 
       RowBox[{"steps", ",", 
        RowBox[{"-", "c"}], ",", "confinementRadius", ",", "acc"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"acc", ",", "steps", ",", 
        RowBox[{"N", "[", "confinementRadius", "]"}], ",", 
        RowBox[{"N", "[", "pt", "]"}], ",", "poly"}], "}"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJwd0ltIE2AABeBZzRSmqUGbD0mTslEU5mXh5m4WQ0NE5pB1USw0ejCVmUk+
lDRWRvOhVlLmvEybG5Fl5vISttSw5sTlNTViSe5hZrqyZdas//wPh4/zejjc
M8WKgk0MBiORBAYxlPXSZI9s9ruRKtYktsGgydJ2GNCd0wN1uovDMHZpeRSq
mpjTkM2f+AhrNra54Y/QiIAUYqqkMgjaG/JZ8IP8OTX6qS0Mym//oc4xhWx4
faGEAxmdc2kKIi/boIQVp789gNHNPmqZoMwIPeO1LdC9PG+BjsL6Z1BQOGWF
56rf9MD81oEFeMqQ44bOtMwVOORO9MIxR1ZrFnHXlyqq4Gr5I2hyaamX9DUd
SuI75QhV49DszyaqM7wHIC/DFQ+l2QUJ0OrRF9Gu0JbAncf3NsBbzKPUdVZt
lIpo0zmpbckPwyuJJaX3IuDSdKhEL/LIzIaTVGNI/aqZqI2R/IT+KleIhTjF
Z4TB3JU1Ngy21HHgOCuBC+2Oz7th2MvqT1DT6ac2yn1/oY8Z54ccS6b4PVEc
2Ut9PKJth2sZ9m7IS9cMwsEWM9XzdX4YGl//G4GpR+7uGSNOTv+KgZeHPIfh
oe03kuAFrkoxTjTV/aZG9Rlz4eyr2DzY5dAVwWszwmK4vkVtmCHK9wU2w7zG
1SewX+DvgMf6TTao3poyAO/3vgieJW5UGMKhmHWQDyNlJ5KgOlBotErITzjK
ZrjDZzdDsdxngQnpd5K7iI6+SBG0iRalMI4TL4fOiSup5VKyF4+TBtfPC9/C
m4tnqU2ZHaOwc7OX+h8RJafQ
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["binning and piecewise functions", "Subsection"]], \
"Subsubsection",
 CellChangeTimes->{{3.522087617398411*^9, 3.522087635653455*^9}, {
  3.522088417093151*^9, 3.52208842564564*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"cliptopolygonsfilename", "[", "filename_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"lst", ",", "len"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"lst", "=", 
      RowBox[{"Import", "[", "filename", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"len", "=", 
      RowBox[{"Length", "[", "lst", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Drop", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"lst", ",", "1"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"2", "len"}], ",", "2"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"2", "len"}], ",", "2"}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5213357323589363`*^9, 3.5213358350028067`*^9}, {
   3.5213359614580393`*^9, 3.5213359820652184`*^9}, {3.5213360533542957`*^9, 
   3.521336072540393*^9}, {3.5220034242008104`*^9, 3.5220034242658143`*^9}, {
   3.5221039651812553`*^9, 3.522103987383525*^9}, {3.522104934394691*^9, 
   3.5221049519106927`*^9}, {3.5221634264539394`*^9, 3.5221634297081256`*^9}, 
   3.5253500797909393`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"cliptopolygonslist", "[", "list_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "len", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"len", "=", 
      RowBox[{"Length", "[", "list", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Drop", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"list", ",", "1"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"2", "len"}], ",", "2"}], "}"}]}], "]"}], ",", "1"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"2", "len"}], ",", "2"}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5213357323589363`*^9, 3.5213358350028067`*^9}, {
  3.5213359614580393`*^9, 3.5213359820652184`*^9}, {3.5213360533542957`*^9, 
  3.521336072540393*^9}, {3.5220034242008104`*^9, 3.5220034242658143`*^9}, {
  3.5221039651812553`*^9, 3.522103987383525*^9}, {3.522104934394691*^9, 
  3.5221049519106927`*^9}, {3.5221634264539394`*^9, 3.522163471429512*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getbinseq", "[", 
   RowBox[{"R_", ",", "d_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pos", ",", 
      RowBox[{"list", "=", 
       RowBox[{"{", "0", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", "d"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"pos", "=", 
         RowBox[{"list", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"list", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"R", "^", "3"}], "/", "d"}], "+", 
             RowBox[{"pos", "^", "3"}]}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"1", "/", "3"}], ")"}]}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "list", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.522066247446294*^9, 3.5220662607710557`*^9}, {
  3.522066292237856*^9, 3.522066480983651*^9}, {3.5220665354677677`*^9, 
  3.522066549471568*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getcount", "[", 
   RowBox[{"polylist_", ",", "exclude_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ct", "=", "0"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", "exclude"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "\[LessEqual]", 
           RowBox[{"Length", "[", "polylist", "]"}]}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"j", "=", "1"}], ",", 
             RowBox[{"j", "\[LessEqual]", 
              RowBox[{"Length", "[", 
               RowBox[{"polylist", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "5"}], "]"}], "]"}], "]"}]}], ",", 
             RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"ct", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "ct", "]"}], ";"}], "\[IndentingNewLine]", ",",
        "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "\[LessEqual]", 
           RowBox[{"Length", "[", "polylist", "]"}]}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"j", "=", "2"}], ",", 
             RowBox[{"j", "\[LessEqual]", 
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"polylist", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "5"}], "]"}], "]"}], "]"}], "-", "1"}]}], 
             ",", 
             RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"ct", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "ct", "]"}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5218257494709682`*^9, 3.521825825310306*^9}, {
  3.5218525867110004`*^9, 3.5218526238221235`*^9}, {3.521853159238747*^9, 
  3.5218531593527536`*^9}, {3.5218533350918055`*^9, 3.521853335266815*^9}, {
  3.5218537002346907`*^9, 3.521853700327696*^9}, {3.5218540675797014`*^9, 
  3.521854067713709*^9}, {3.5218871115785832`*^9, 3.5218871117585936`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"calcr", "[", "polylist_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"lst", "=", 
       RowBox[{"{", "}"}]}], ",", "r"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", "polylist", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"r", "=", 
         RowBox[{"polylist", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "4", ",", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "2"}], ",", 
          RowBox[{"j", "\[LessEqual]", 
           RowBox[{"Length", "[", 
            RowBox[{"polylist", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "5"}], "]"}], "]"}], "]"}]}], ",", 
          RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"lst", ",", 
             RowBox[{"EuclideanDistance", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", 
                 RowBox[{"-", "r"}]}], "}"}], ",", 
               RowBox[{"polylist", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "5", ",", "j"}], "]"}], "]"}]}], "]"}]}], 
            "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "lst", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"linfunc", "[", "v_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"c", "=", 
       RowBox[{"{", "}"}]}], ",", "m", ",", "x0", ",", "y0", ",", 
      RowBox[{"valid", "=", "True"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "2"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", "v", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", 
            RowBox[{"v", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"i", "-", "1"}], ",", "1"}], "]"}], "]"}]}], 
           "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"valid", "=", "False"}], ";", "\[IndentingNewLine]", 
           RowBox[{
           "Print", "[", 
            "\"\<Under sampled for bin seq in linfunc calculation\>\"", "]"}],
            ";", "\[IndentingNewLine]", 
           RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"m", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
            RowBox[{"v", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"i", "-", "1"}], ",", "2"}], "]"}], "]"}]}], ")"}], 
          "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", 
            RowBox[{"v", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"i", "-", "1"}], ",", "1"}], "]"}], "]"}]}], ")"}]}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"c", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"m", "*", 
              RowBox[{"(", 
               RowBox[{"x", "-", 
                RowBox[{"v", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ")"}]}], "+", 
             RowBox[{"v", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
            RowBox[{
             RowBox[{"v", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", "-", "1"}], ",", "1"}], "]"}], "]"}], "<", "x", 
             "\[LessEqual]", 
             RowBox[{"v", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}]}]}], "}"}]}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"c", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"x", ">", 
          RowBox[{"v", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"Length", "[", "v", "]"}], ",", "1"}], "]"}], "]"}]}]}], 
        "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"valid", ",", "c"}], "}"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.522085022964018*^9, 3.522085266513948*^9}, {
  3.5220853047291336`*^9, 3.522085308424345*^9}, {3.5220853449114323`*^9, 
  3.5220854219478383`*^9}, {3.52209136407549*^9, 3.5220914128302784`*^9}, {
  3.5234627869630375`*^9, 3.523462831024558*^9}, {3.523462872581935*^9, 
  3.523462902710658*^9}, {3.523463202130784*^9, 3.5234632032908506`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["offset distrib iterator", "Subsection"]], \
"Subsubsection",
 CellChangeTimes->{{3.522090579177596*^9, 3.5220905829838142`*^9}, {
  3.5234638120186677`*^9, 3.523463825102416*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"ufuncinv", "[", "R_", "]"}], ":=", 
    RowBox[{"Import", "[", "\"\<stableinvcdfk10R4.wdx\>\"", "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ufunc", "[", "R_", "]"}], ":=", 
    RowBox[{"Import", "[", "\"\<stablecdfk10R4.wdx\>\"", "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"pwinvcdffuncs", "=", 
    RowBox[{"{", 
     RowBox[{"ufuncinv", "[", "1", "]"}], "}"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"pwcdffuncs", "=", 
    RowBox[{"{", 
     RowBox[{"ufunc", "[", "1", "]"}], "}"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"invdifpt", "=", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], "}"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"difpt", "=", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], "}"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.522176872444153*^9, 3.5221769773211517`*^9}, {
  3.522182364189263*^9, 3.5221823713346715`*^9}, {3.522187919600014*^9, 
  3.5221879276994777`*^9}, {3.522248216608886*^9, 3.5222482238573008`*^9}, {
  3.523459523192361*^9, 3.5234595451236153`*^9}, {3.523463803916204*^9, 
  3.5234638073444004`*^9}, {3.525350085186248*^9, 3.5253500877293935`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pwinvcdffuncs", "=", 
   RowBox[{"{", "ufuncinv", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pwcdffuncs", "=", 
   RowBox[{"{", "ufunc", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"invdifpt", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"difpt", "=", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.522165630677014*^9, 3.5221656309550295`*^9}, {
  3.5221666589308267`*^9, 3.5221666628180485`*^9}, {3.522166710055751*^9, 
  3.5221667102167597`*^9}, {3.5221667529782057`*^9, 3.52216676126468*^9}, {
  3.5221668120285835`*^9, 3.522166813634675*^9}, {3.5221795421178493`*^9, 
  3.5221795453990374`*^9}, {3.5221859916097393`*^9, 3.522185995345953*^9}, {
  3.5222461505847163`*^9, 3.5222461529888535`*^9}, {3.5222482264344482`*^9, 
  3.522248236449021*^9}, {3.5222633824610567`*^9, 3.5222633849321985`*^9}, {
  3.5222635858396893`*^9, 3.5222635910439873`*^9}, {3.522263625603964*^9, 
  3.522263629022159*^9}, {3.5230673992047095`*^9, 3.52306740148184*^9}, {
  3.5231058285871325`*^9, 3.523105830207225*^9}, {3.5234594237226715`*^9, 
  3.523459453519376*^9}, {3.523463786104185*^9, 3.5234637878852873`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"invcdfiterator", "[", 
    RowBox[{
    "steps_", ",", "R_", ",", "acc_", ",", "size_", ",", "div_", ",", 
     "iter_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "list", ",", "seq", ",", "poly", ",", "rval", ",", "cdfpt", ",", 
       "invcdfpt", ",", "pwcdf", ",", "pwinvcdf", ",", "invdif", ",", "dif", 
       ",", 
       RowBox[{"reset", "=", "True"}], ",", "res", ",", "time", ",", 
       "lintemp"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{"reset", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"pwinvcdffuncs", "=", 
          RowBox[{"{", 
           RowBox[{"ufuncinv", "[", "R", "]"}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"pwcdffuncs", "=", 
          RowBox[{"{", 
           RowBox[{"ufunc", "[", "R", "]"}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"invdifpt", "=", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"difpt", "=", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], "}"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"seq", "=", 
       RowBox[{"getbinseq", "[", 
        RowBox[{"R", ",", "div"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"pos", "=", "1"}], ",", 
        RowBox[{"pos", "\[LessEqual]", "iter"}], ",", 
        RowBox[{"pos", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", "pos", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"res", "=", 
          RowBox[{"Timing", "[", 
           RowBox[{"generatebatchdistrib", "[", 
            RowBox[{"steps", ",", "R", ",", "acc", ",", "size"}], "]"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"time", "=", 
          RowBox[{"res", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<  time \>\"", ",", 
           RowBox[{"time", "/", "60"}], ",", "\"\< min\>\""}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"list", "=", 
          RowBox[{"res", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"poly", "=", 
          RowBox[{"cliptopolygonslist", "[", "list", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"rval", "=", 
          RowBox[{"Accumulate", "[", 
           RowBox[{"BinCounts", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"calcr", "[", "poly", "]"}], "]"}], ",", 
             RowBox[{"{", "seq", "}"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"cdfpt", "=", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"seq", "[", 
               RowBox[{"[", 
                RowBox[{"ind", "+", "1"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"rval", "[", 
                RowBox[{"[", "ind", "]"}], "]"}], "/", 
               RowBox[{"rval", "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"ind", ",", "1", ",", "div", ",", "1"}], "}"}]}], 
           "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"PrependTo", "[", 
          RowBox[{"cdfpt", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"invcdfpt", "=", 
          RowBox[{"Map", "[", 
           RowBox[{"Reverse", ",", "cdfpt"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"lintemp", "=", 
          RowBox[{"linfunc", "[", "cdfpt", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"lintemp", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"pwcdf", "=", 
             RowBox[{"Piecewise", "[", 
              RowBox[{
               RowBox[{"lintemp", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", "0"}], "]"}]}], ";"}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"lintemp", "=", 
          RowBox[{"linfunc", "[", "invcdfpt", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"lintemp", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"pwinvcdf", "=", 
             RowBox[{"Piecewise", "[", 
              RowBox[{
               RowBox[{"linfunc", "[", "invcdfpt", "]"}], ",", "0"}], "]"}]}],
             ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"pwinvcdffuncs", ",", "pwinvcdf"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"pwcdffuncs", ",", "pwcdf"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"invdif", "=", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ind", "/", "div"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"pwinvcdffuncs", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "2"}], "]"}], "]"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{"x", "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{"ind", "/", "div"}], ")"}]}], "}"}]}], ")"}], "-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"pwinvcdffuncs", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{"x", "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{"ind", "/", "div"}], ")"}]}], "}"}]}], ")"}]}]}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"ind", ",", "0", ",", "div", ",", "1"}], "}"}]}], 
           "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"invdifpt", ",", "invdif"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"dif", "=", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"R", " ", 
               RowBox[{"ind", "/", "div"}]}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"pwcdffuncs", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "2"}], "]"}], "]"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{"x", "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{"R", " ", 
                    RowBox[{"ind", "/", "div"}]}], ")"}]}], "}"}]}], ")"}], 
               "-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"pwcdffuncs", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}], "/.", 
                 RowBox[{"{", 
                  RowBox[{"x", "\[Rule]", 
                   RowBox[{"(", 
                    RowBox[{"R", " ", 
                    RowBox[{"ind", "/", "div"}]}], ")"}]}], "}"}]}], 
                ")"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"ind", ",", "0", ",", "div", ",", "1"}], "}"}]}], 
           "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"difpt", ",", "dif"}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<cdfk\>\"", "<>", 
         RowBox[{"ToString", "[", "steps", "]"}], "<>", "\"\<R\>\"", "<>", 
         RowBox[{"ToString", "[", "R", "]"}], "<>", "\"\<div\>\"", "<>", 
         RowBox[{"ToString", "[", "div", "]"}], "<>", "\"\<iter\>\"", "<>", 
         RowBox[{"ToString", "[", "iter", "]"}], "<>", "\"\<.wdx\>\""}], ",", 
        RowBox[{"pwcdffuncs", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<invcdfk\>\"", "<>", 
         RowBox[{"ToString", "[", "steps", "]"}], "<>", "\"\<R\>\"", "<>", 
         RowBox[{"ToString", "[", "R", "]"}], "<>", "\"\<div\>\"", "<>", 
         RowBox[{"ToString", "[", "div", "]"}], "<>", "\"\<iter\>\"", "<>", 
         RowBox[{"ToString", "[", "iter", "]"}], "<>", "\"\<.wdx\>\""}], ",", 
        RowBox[{"pwinvcdffuncs", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<cdfdifk\>\"", "<>", 
         RowBox[{"ToString", "[", "steps", "]"}], "<>", "\"\<R\>\"", "<>", 
         RowBox[{"ToString", "[", "R", "]"}], "<>", "\"\<div\>\"", "<>", 
         RowBox[{"ToString", "[", "div", "]"}], "<>", "\"\<iter\>\"", "<>", 
         RowBox[{"ToString", "[", "iter", "]"}], "<>", "\"\<.wdx\>\""}], ",", 
        RowBox[{"difpt", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<invcdfdifk\>\"", "<>", 
         RowBox[{"ToString", "[", "steps", "]"}], "<>", "\"\<R\>\"", "<>", 
         RowBox[{"ToString", "[", "R", "]"}], "<>", "\"\<div\>\"", "<>", 
         RowBox[{"ToString", "[", "div", "]"}], "<>", "\"\<iter\>\"", "<>", 
         RowBox[{"ToString", "[", "iter", "]"}], "<>", "\"\<.wdx\>\""}], ",", 
        RowBox[{"invdifpt", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.52216088488657*^9, 3.5221609243448267`*^9}, {
   3.522160990449608*^9, 3.522161009300686*^9}, {3.522162606725054*^9, 
   3.5221626361007338`*^9}, {3.522162780394987*^9, 3.5221627949348187`*^9}, {
   3.5221631530493016`*^9, 3.5221631960827627`*^9}, {3.522163240365296*^9, 
   3.522163336568798*^9}, {3.52216339377107*^9, 3.522163398100318*^9}, {
   3.5221634807600455`*^9, 3.522163501255218*^9}, {3.5221637846404266`*^9, 
   3.5221638302030325`*^9}, {3.5221638775437403`*^9, 
   3.5221639366871233`*^9}, {3.5221639964865437`*^9, 
   3.5221640068451357`*^9}, {3.522164136348543*^9, 3.5221641784199495`*^9}, 
   3.522164226173681*^9, {3.5221643254263577`*^9, 3.5221643648936152`*^9}, {
   3.5221644560088267`*^9, 3.5221644955420876`*^9}, {3.522164666144846*^9, 
   3.522164726525299*^9}, {3.522165389404214*^9, 3.522165425311268*^9}, {
   3.5221654658035836`*^9, 3.5221654795593705`*^9}, 3.5221655114451942`*^9, {
   3.5221655659733133`*^9, 3.522165621637497*^9}, {3.5221660294118204`*^9, 
   3.5221661276794405`*^9}, {3.5221661669646873`*^9, 3.522166169186815*^9}, {
   3.522166333935238*^9, 3.5221663402065964`*^9}, {3.522166388416354*^9, 
   3.5221664414663887`*^9}, {3.522166483596798*^9, 3.5221664918912725`*^9}, {
   3.522166528685377*^9, 3.522166575713067*^9}, {3.522166828629533*^9, 
   3.522166847374605*^9}, {3.5221668888879795`*^9, 3.522166919250716*^9}, {
   3.522166983937416*^9, 3.52216703645642*^9}, {3.5221674284498405`*^9, 
   3.5221674478879523`*^9}, {3.522167502381069*^9, 3.522167514270749*^9}, {
   3.5221675736071434`*^9, 3.522167593229265*^9}, {3.5221676277832417`*^9, 
   3.522167631505455*^9}, {3.5221685003791513`*^9, 3.522168504443384*^9}, {
   3.5221694152374783`*^9, 3.5221694191227007`*^9}, {3.522169465721366*^9, 
   3.5221694866035604`*^9}, {3.5221695349683266`*^9, 
   3.5221695467530003`*^9}, {3.5221698239578557`*^9, 
   3.5221698772779055`*^9}, {3.5221795158453465`*^9, 3.522179524381835*^9}, {
   3.522246113509596*^9, 3.5222461202879834`*^9}, {3.5222482574082193`*^9, 
   3.5222482901560926`*^9}, {3.522248328587291*^9, 3.522248745148117*^9}, {
   3.5222638995246315`*^9, 3.522263901745758*^9}, {3.5234594629319143`*^9, 
   3.523459494362712*^9}, {3.5234629294371867`*^9, 3.5234629894686203`*^9}, {
   3.523463103404137*^9, 3.523463105007229*^9}, {3.523463157560235*^9, 
   3.5234631773593674`*^9}, {3.523463515555711*^9, 3.5234635415261965`*^9}, {
   3.5234637740964985`*^9, 3.5234637756375866`*^9}, {3.5253500909595785`*^9, 
   3.5253500999700937`*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rotator", "Section",
 CellChangeTimes->{{3.523464739616723*^9, 3.523464740720786*^9}}],

Cell[CellGroupData[{

Cell["initialization", "Subsection",
 CellChangeTimes->{{3.5234647628420515`*^9, 3.52346476683428*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "This", " ", "reduces", " ", "an", " ", "angle", " ", "so", " ", "that", 
     " ", "it", " ", "is", " ", "between", " ", "0", " ", "and", " ", "2", 
     "\[Pi]"}], ",", " ", 
    RowBox[{
    "which", " ", "streamlines", " ", "some", " ", "things", " ", "in", " ", 
     "the", " ", "main", " ", 
     RowBox[{"function", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"reduceAngle", "[", "inAng_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nAng", "=", "inAng"}], "}"}], ",", 
       RowBox[{
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"nAng", "<", "0"}], ",", 
          RowBox[{"nAng", "=", 
           RowBox[{"nAng", "+", 
            RowBox[{"2", "\[Pi]"}]}]}]}], "]"}], ";", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"nAng", "\[GreaterEqual]", 
           RowBox[{"2", "\[Pi]"}]}], ",", 
          RowBox[{"nAng", "=", 
           RowBox[{"nAng", "-", 
            RowBox[{"2", "\[Pi]"}]}]}]}], "]"}], ";", 
        RowBox[{"Return", "[", "nAng", "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "This", " ", "checks", " ", "to", " ", "make", " ", "sure", " ", "the", 
     " ", "segment", " ", "we", " ", "are", " ", "checking", " ", "for", " ", 
     "intersection", " ", "with", " ", 
     RowBox[{"isn", "'"}], "t", " ", "the", " ", "segment", " ", "composing", 
     " ", "the", " ", "cone", " ", "or", " ", "an", " ", 
     RowBox[{"offshoot", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"checkIndices", "[", 
     RowBox[{"iC_", ",", "i1_", ",", "i2_", ",", "len_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"rBool", "=", "False"}], ",", 
        RowBox[{"nIC", "=", "iC"}], ",", 
        RowBox[{"nI1", "=", "i1"}], ",", 
        RowBox[{"nI2", "=", "i2"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"iC", "\[Equal]", "len"}], ",", 
         RowBox[{"nIC", "=", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i1", "\[Equal]", "len"}], ",", 
         RowBox[{"nI1", "=", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i2", "\[Equal]", "len"}], ",", 
         RowBox[{"nI2", "=", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"nIC", "\[Equal]", "nI1"}], "||", 
          RowBox[{"nIC", "\[Equal]", "nI2"}], "||", 
          RowBox[{
           RowBox[{"nIC", "+", "1"}], "\[Equal]", "nI1"}], "||", 
          RowBox[{
           RowBox[{"nIC", "+", "1"}], "\[Equal]", "nI2"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"nIC", "\[Equal]", 
             RowBox[{"len", "-", "1"}]}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"nI2", "\[Equal]", "1"}], "||", 
              RowBox[{"nI1", "\[Equal]", "1"}]}], ")"}]}], ")"}]}], ",", 
         RowBox[{"Return", "[", "False", "]"}], ",", 
         RowBox[{"Return", "[", "True", "]"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.51609739792484*^9, 3.516097492483798*^9}, {
  3.516099999874935*^9, 3.516100153953471*^9}, {3.516100230415571*^9, 
  3.516100281839324*^9}, {3.516100332158931*^9, 3.516100416837678*^9}, {
  3.5161005127174377`*^9, 3.516100674340968*^9}, {3.516992444452454*^9, 
  3.516992498869433*^9}, {3.516993078099633*^9, 3.516993120251442*^9}, {
  3.5193453860654087`*^9, 3.5193454583782187`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["rotation functions", "Subsection",
 CellChangeTimes->{{3.523464836678275*^9, 3.5234648459318037`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "rotates", " ", "the", " ", "vertex", " ", "\"\<in\>\"", " ", 
    "of", " ", "the", " ", "polygon", " ", "specified", " ", "by", " ", 
    "\"\<pointList\>\"", " ", "an", " ", "angle", " ", "of", " ", 
    "\"\<angle\>\"", " ", "radians", " ", "around", " ", "the", " ", "line", 
    " ", "between", " ", "the", " ", "two", " ", "vertices", " ", "adjacent", 
    " ", "to", " ", "the", " ", "specified", " ", 
    RowBox[{"one", ".", " ", "\"\<check\>\""}], " ", "determines", " ", 
    "whether", " ", "the", " ", "function", " ", "should", " ", "check", " ", 
    "for", " ", "intersections", " ", "or", " ", 
    RowBox[{"not", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"rotate", "[", 
    RowBox[{"pointList_", ",", "in_", ",", "angle_", ",", "check_"}], "]"}], ":=",
    " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"nPointList", ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "The", " ", "index", " ", "of", " ", "an", " ", "adjacent", " ", 
         "vertex"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"si", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"in", "\[Equal]", "1"}], ",", 
          RowBox[{
           RowBox[{"Length", "[", "pointList", "]"}], "-", "1"}], ",", 
          RowBox[{"in", "-", "1"}]}], "]"}]}], " ", ",", 
       RowBox[{"(*", " ", 
        RowBox[{
        "The", " ", "index", " ", "of", " ", "the", " ", "other", " ", 
         "adjacent", " ", "vertex"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"fi", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"in", " ", "\[Equal]", 
           RowBox[{"Length", "[", "pointList", "]"}]}], ",", "2", ",", 
          RowBox[{"in", "+", "1"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       "inP", "  ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "The", " ", "coordinates", " ", "of", " ", "the", " ", "vertex", " ", 
         "being", " ", "rotated"}], " ", "*)"}], ",", "\[IndentingNewLine]", 
       "sP", "  ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "The", " ", "coordinates", " ", "of", " ", "an", " ", "adjacent", " ",
          "vertex"}], " ", "*)"}], ",", "\[IndentingNewLine]", "fP", "  ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "The", " ", "coordinates", " ", "of", " ", "the", " ", "other", " ", 
         "adjacent", " ", "vertex"}], " ", "*)"}], ",", "\[IndentingNewLine]",
        "x", ",", "\[IndentingNewLine]", "y", ",", "\[IndentingNewLine]", "z",
        ",", "\[IndentingNewLine]", "ang", ",", "\[IndentingNewLine]", "tan", 
       ",", "\[IndentingNewLine]", "iP1", ",", "\[IndentingNewLine]", "iP2", 
       ",", "\[IndentingNewLine]", "iV", ",", "\[IndentingNewLine]", "solv", 
       ",", "\[IndentingNewLine]", "t", ",", "\[IndentingNewLine]", 
       RowBox[{"broke1", "=", "False"}], ",", "\[IndentingNewLine]", 
       RowBox[{"broke2", "=", "False"}], ",", "\[IndentingNewLine]", "sol"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", 
       RowBox[{
       "v1", ",", "v2", ",", "v3", ",", "p1", ",", "p2", ",", "p3", ",", 
        "k"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"sol", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{"2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"p1", "*", "v1"}], "+", 
                 RowBox[{"p2", "*", "v2"}], "-", 
                 RowBox[{"k", "*", "p3", "*", "v3"}]}], ")"}]}], ")"}]}], "+", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"2", "*", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"p1", "*", "v1"}], "+", 
                    RowBox[{"p2", "*", "v2"}], "-", 
                    RowBox[{"k", "*", "p3", "*", "v3"}]}], ")"}]}], ")"}], 
                "2"], "-", 
               RowBox[{"4", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"v1", "^", "2"}], "+", 
                  RowBox[{"v2", "^", "2"}], "-", 
                  RowBox[{"k", "*", 
                   RowBox[{"v3", "^", "2"}]}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"p1", "^", "2"}], "+", 
                  RowBox[{"p2", "^", "2"}], "-", 
                  RowBox[{"k", "*", 
                   RowBox[{"p3", "^", "2"}]}]}], ")"}]}]}], ")"}]}]}], ")"}], 
          "/", 
          RowBox[{"(", 
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"v1", "^", "2"}], "+", 
              RowBox[{"v2", "^", "2"}], "-", 
              RowBox[{"k", "*", 
               RowBox[{"v3", "^", "2"}]}]}], ")"}]}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{"2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"p1", "*", "v1"}], "+", 
                 RowBox[{"p2", "*", "v2"}], "-", 
                 RowBox[{"k", "*", "p3", "*", "v3"}]}], ")"}]}], ")"}]}], "-", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"2", "*", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"p1", "*", "v1"}], "+", 
                    RowBox[{"p2", "*", "v2"}], "-", 
                    RowBox[{"k", "*", "p3", "*", "v3"}]}], ")"}]}], ")"}], 
                "2"], "-", 
               RowBox[{"4", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"v1", "^", "2"}], "+", 
                  RowBox[{"v2", "^", "2"}], "-", 
                  RowBox[{"k", "*", 
                   RowBox[{"v3", "^", "2"}]}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"p1", "^", "2"}], "+", 
                  RowBox[{"p2", "^", "2"}], "-", 
                  RowBox[{"k", "*", 
                   RowBox[{"p3", "^", "2"}]}]}], ")"}]}]}], ")"}]}]}], ")"}], 
          "/", 
          RowBox[{"(", 
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"v1", "^", "2"}], "+", 
              RowBox[{"v2", "^", "2"}], "-", 
              RowBox[{"k", "*", 
               RowBox[{"v3", "^", "2"}]}]}], ")"}]}], ")"}]}]}], "}"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"check", ",", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Translate", " ", "the", " ", "polygon", " ", "so", " ", "that", " ",
           "an", " ", "adjacent", " ", "vertex", " ", "is", " ", "the", " ", 
          RowBox[{"center", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"sP", "=", 
          RowBox[{"pointList", "[", 
           RowBox[{"[", "si", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"nPointList", " ", "=", " ", 
          RowBox[{
           RowBox[{"TranslationTransform", "[", 
            RowBox[{"-", "sP"}], "]"}], "[", "pointList", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fP", " ", "=", " ", 
          RowBox[{"nPointList", "[", 
           RowBox[{"[", "fi", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "Rotate", " ", "the", " ", "polygon", " ", "so", " ", "that", " ", 
            "the", " ", "rotation", " ", "axis", " ", "is", " ", "the", " ", 
            "z"}], "-", "axis"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"fP", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], "&&", 
            RowBox[{
             RowBox[{"fP", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"fP", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "<", "0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"nPointList", " ", "=", " ", 
              RowBox[{
               RowBox[{"RotationTransform", "[", 
                RowBox[{"\[Pi]", ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], "[", 
               "nPointList", "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"nPointList", " ", "=", " ", 
            RowBox[{
             RowBox[{"RotationTransform", "[", 
              RowBox[{"{", 
               RowBox[{"fP", ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
             "[", "nPointList", "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"inP", " ", "=", " ", 
          RowBox[{"nPointList", "[", 
           RowBox[{"[", "in", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"x", "=", 
          RowBox[{"inP", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"y", "=", 
          RowBox[{"inP", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ang", "=", 
          RowBox[{
           RowBox[{"ArcCos", "[", 
            RowBox[{"x", "/", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"x", "^", "2"}], "+", 
               RowBox[{"y", "^", "2"}]}], "]"}]}], "]"}], " ", "*", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"y", "==", "0"}], ",", "1", ",", " ", 
             RowBox[{"Sign", "[", "y", "]"}]}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Rotate", " ", "the", " ", "polygon", " ", "so", " ", "that", " ", 
           "the", " ", "rotating", " ", "vertex", " ", "is", " ", "in", " ", 
           "the", " ", "xz", " ", "plane"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"nPointList", " ", "=", " ", 
          RowBox[{
           RowBox[{"RotationTransform", "[", 
            RowBox[{
             RowBox[{"-", "ang"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], "[", 
           "nPointList", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"inP", "=", 
          RowBox[{"nPointList", "[", 
           RowBox[{"[", "in", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"x", "=", 
          RowBox[{"inP", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"y", "=", 
          RowBox[{"inP", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"z", "=", 
          RowBox[{"inP", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"tan", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "^", "2"}], "+", 
             RowBox[{"y", "^", "2"}]}], ")"}], "/", 
           RowBox[{"z", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Check", " ", "for", " ", "intersection", " ", "with", " ", "one", 
           " ", "rotating", " ", "segment"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"checkIndices", "[", 
              RowBox[{"i", ",", "si", ",", "in", ",", 
               RowBox[{"Length", "[", "nPointList", "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"iP1", "=", 
               RowBox[{"nPointList", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"iP2", "=", 
               RowBox[{"nPointList", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"iV", "=", 
               RowBox[{"iP2", "-", "iP1"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"solv", " ", "=", " ", 
               RowBox[{"sol", "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"p1", "\[Rule]", 
                   RowBox[{"iP1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                  RowBox[{"p2", "\[Rule]", 
                   RowBox[{"iP1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                  RowBox[{"p3", "\[Rule]", 
                   RowBox[{"iP1", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ",", 
                  RowBox[{"v1", "\[Rule]", 
                   RowBox[{"iV", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                  RowBox[{"v2", "\[Rule]", 
                   RowBox[{"iV", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                  RowBox[{"v3", "\[Rule]", 
                   RowBox[{"iV", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ",", 
                  RowBox[{"k", "\[Rule]", "tan"}]}], "}"}]}]}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"Do", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"t", "=", 
                  RowBox[{"solv", "[", 
                   RowBox[{"[", "j", "]"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"Element", "[", 
                    RowBox[{"t", ",", "Reals"}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"z", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"iV", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "*", "t"}], "+", 
                    RowBox[{"iP1", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"t", "\[LessEqual]", "1"}], "&&", 
                    RowBox[{"t", "\[GreaterEqual]", "0"}], "&&", 
                    RowBox[{"z", "\[GreaterEqual]", "0"}], "&&", 
                    RowBox[{"z", "\[LessEqual]", 
                    RowBox[{"inP", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"x", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"iV", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "*", "t"}], "+", 
                    RowBox[{"iP1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"y", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"iV", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "*", "t"}], "+", 
                    RowBox[{"iP1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"ang", " ", "=", 
                    RowBox[{"reduceAngle", "[", 
                    RowBox[{
                    RowBox[{"ArcCos", "[", 
                    RowBox[{"x", "/", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{
                    RowBox[{"x", "^", "2"}], "+", 
                    RowBox[{"y", "^", "2"}]}], "]"}]}], "]"}], " ", "*", " ", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"y", "==", "0"}], ",", "1", ",", 
                    RowBox[{"Sign", "[", "y", "]"}]}], "]"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"ang", "\[LessEqual]", 
                    RowBox[{"reduceAngle", "[", "angle", "]"}]}], ",", 
                    RowBox[{"broke1", "=", "True"}], ",", 
                    RowBox[{"broke2", "=", "True"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"broke1", "&&", "broke2"}], ",", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Print", "[", "\"\<Cannot make rotation.\>\"", "]"}], 
                    ";"}], "*)"}], 
                    RowBox[{"Return", "[", 
                    RowBox[{"Return", "[", "]"}], "]"}]}], "]"}]}]}], 
                    "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
                  "]"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], 
               "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}],
            ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{
              RowBox[{"Length", "[", "nPointList", "]"}], "-", "1"}]}], 
            "}"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]",
          "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"broke1", "&&", "broke2"}], ",", 
           RowBox[{"Return", "[", "pointList", "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Repeat", " ", "the", " ", "previous", " ", "steps", " ", "for", 
           " ", "the", " ", "other", " ", "rotating", " ", "segment"}], " ", 
          "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"fP", "=", 
          RowBox[{"nPointList", "[", 
           RowBox[{"[", "fi", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"nPointList", " ", "=", " ", 
          RowBox[{
           RowBox[{"TranslationTransform", "[", 
            RowBox[{"-", "fP"}], "]"}], "[", "nPointList", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"sP", " ", "=", " ", 
          RowBox[{"nPointList", "[", 
           RowBox[{"[", "si", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"(*", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"sP", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], "&&", 
              RowBox[{
               RowBox[{"sP", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}]}], ","}]}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"sP", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "<", "0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"nPointList", " ", "=", " ", 
              RowBox[{
               RowBox[{"RotationTransform", "[", 
                RowBox[{"\[Pi]", ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], "[", 
               "nPointList", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{",", "\[IndentingNewLine]", 
              RowBox[{"nPointList", " ", "=", " ", 
               RowBox[{
                RowBox[{"RotationTransform", "[", 
                 RowBox[{"{", 
                  RowBox[{"sP", ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                "[", "nPointList", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
            "*)"}], ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"inP", " ", "=", " ", 
          RowBox[{"nPointList", "[", 
           RowBox[{"[", "in", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"x", "=", 
          RowBox[{"inP", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"y", "=", 
          RowBox[{"inP", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ang", "=", 
          RowBox[{
           RowBox[{"ArcCos", "[", 
            RowBox[{"x", "/", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"x", "^", "2"}], "+", 
               RowBox[{"y", "^", "2"}]}], "]"}]}], "]"}], " ", "*", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"y", "==", "0"}], ",", "1", ",", 
             RowBox[{"Sign", "[", "y", "]"}]}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"nPointList", " ", "=", " ", 
          RowBox[{
           RowBox[{"RotationTransform", "[", 
            RowBox[{
             RowBox[{"-", "ang"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], "[", 
           "nPointList", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"inP", "=", 
          RowBox[{"nPointList", "[", 
           RowBox[{"[", "in", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"x", "=", 
          RowBox[{"inP", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"y", "=", 
          RowBox[{"inP", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"z", "=", 
          RowBox[{"inP", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"tan", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "^", "2"}], "+", 
             RowBox[{"y", "^", "2"}]}], ")"}], "/", 
           RowBox[{"z", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"checkIndices", "[", 
              RowBox[{"i", ",", "fi", ",", "in", ",", 
               RowBox[{"Length", "[", "nPointList", "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"iP1", "=", 
               RowBox[{"nPointList", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"iP2", "=", 
               RowBox[{"nPointList", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"iV", "=", 
               RowBox[{"iP2", "-", "iP1"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"solv", " ", "=", " ", 
               RowBox[{"sol", "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"p1", "\[Rule]", 
                   RowBox[{"iP1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                  RowBox[{"p2", "\[Rule]", 
                   RowBox[{"iP1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                  RowBox[{"p3", "\[Rule]", 
                   RowBox[{"iP1", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ",", 
                  RowBox[{"v1", "\[Rule]", 
                   RowBox[{"iV", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                  RowBox[{"v2", "\[Rule]", 
                   RowBox[{"iV", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                  RowBox[{"v3", "\[Rule]", 
                   RowBox[{"iV", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ",", 
                  RowBox[{"k", "\[Rule]", "tan"}]}], "}"}]}]}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"Do", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"t", "=", 
                  RowBox[{"solv", "[", 
                   RowBox[{"[", "j", "]"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"Element", "[", 
                    RowBox[{"t", ",", "Reals"}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"z", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"iV", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "*", "t"}], "+", 
                    RowBox[{"iP1", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"t", "\[LessEqual]", "1"}], "&&", 
                    RowBox[{"t", "\[GreaterEqual]", "0"}], "&&", 
                    RowBox[{"z", "\[LessEqual]", "0"}], "&&", 
                    RowBox[{"z", "\[GreaterEqual]", 
                    RowBox[{"inP", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"x", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"iV", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "*", "t"}], "+", 
                    RowBox[{"iP1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"y", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"iV", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "*", "t"}], "+", 
                    RowBox[{"iP1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"ang", " ", "=", 
                    RowBox[{"reduceAngle", "[", 
                    RowBox[{
                    RowBox[{"ArcCos", "[", 
                    RowBox[{"x", "/", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{
                    RowBox[{"x", "^", "2"}], "+", 
                    RowBox[{"y", "^", "2"}]}], "]"}]}], "]"}], " ", "*", " ", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"y", "==", "0"}], ",", "1", ",", 
                    RowBox[{"Sign", "[", "y", "]"}]}], "]"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"ang", "\[LessEqual]", 
                    RowBox[{"reduceAngle", "[", "angle", "]"}]}], ",", 
                    RowBox[{"broke1", "=", "True"}], ",", 
                    RowBox[{"broke2", "=", "True"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"broke1", "&&", "broke2"}], ",", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Print", "[", "\"\<Cannot make rotation.\>\"", "]"}], 
                    ";"}], "*)"}], 
                    RowBox[{"Return", "[", 
                    RowBox[{"Return", "[", "]"}], "]"}]}], "]"}]}]}], 
                    "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
                  "]"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], 
               "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}],
            ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{
              RowBox[{"Length", "[", "nPointList", "]"}], "-", "1"}]}], 
            "}"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "The", " ", "function", " ", "actually", " ", "checks", " ", "for", 
           " ", "possible", " ", "rotation", " ", "in", " ", "both", " ", 
           RowBox[{"directions", ".", " ", "Only"}], " ", "if", " ", "there", 
           " ", "is", " ", "an", " ", "intersection", " ", "in", " ", "both", 
           " ", "directions", " ", "will", " ", "a", " ", "rotation", " ", 
           "not", " ", 
           RowBox[{"happen", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"broke1", "&&", "broke2"}], ",", 
           RowBox[{"Return", "[", "pointList", "]"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", "check"}], ",", "\[IndentingNewLine]", 
        RowBox[{"nPointList", "=", "pointList"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"sP", " ", "=", " ", 
       RowBox[{"nPointList", "[", 
        RowBox[{"[", "si", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fP", " ", "=", " ", 
       RowBox[{"nPointList", "[", 
        RowBox[{"[", "fi", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nPointList", "[", 
        RowBox[{"[", "in", "]"}], "]"}], "=", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"RotationTransform", "[", "\[IndentingNewLine]", 
         RowBox[{"angle", ",", "\[IndentingNewLine]", 
          RowBox[{"fP", "-", "sP"}], ",", "\[IndentingNewLine]", "sP"}], 
         "\[IndentingNewLine]", "]"}], "[", 
        RowBox[{"nPointList", "[", 
         RowBox[{"[", "in", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"in", " ", "\[Equal]", "1"}], ",", 
        RowBox[{
         RowBox[{"nPointList", "[", 
          RowBox[{"[", 
           RowBox[{"Length", "[", "nPointList", "]"}], "]"}], "]"}], "=", 
         RowBox[{"nPointList", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"in", " ", "\[Equal]", 
         RowBox[{"Length", "[", "nPointList", "]"}]}], ",", 
        RowBox[{
         RowBox[{"nPointList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "=", 
         RowBox[{"nPointList", "[", 
          RowBox[{"[", 
           RowBox[{"Length", "[", "nPointList", "]"}], "]"}], "]"}]}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "nPointList", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.519640795866712*^9, 3.5196408128300533`*^9}, {
  3.523469631166504*^9, 3.52346963197155*^9}, {3.5234696749380074`*^9, 
  3.523469727118992*^9}, {3.5234715943447914`*^9, 3.5234715993880796`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "rotates", " ", "the", " ", "vertex", " ", "\"\<in\>\"", " ", 
    "of", " ", "the", " ", "polygon", " ", "specified", " ", "by", " ", 
    "\"\<pointList\>\"", " ", "an", " ", "angle", " ", "of", " ", 
    "\"\<angle\>\"", " ", "radians", " ", "around", " ", "the", " ", "line", 
    " ", "between", " ", "the", " ", "two", " ", "vertices", " ", "adjacent", 
    " ", "to", " ", "the", " ", "specified", " ", 
    RowBox[{"one", ".", " ", "\"\<check\>\""}], " ", "determines", " ", 
    "whether", " ", "the", " ", "function", " ", "should", " ", "check", " ", 
    "for", " ", "intersections", " ", "or", " ", 
    RowBox[{"not", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "one", " ", "prints", " ", "out", " ", "the", " ", "angle", 
     " ", "of", " ", "rotation"}], ",", " ", 
    RowBox[{"t", "-", "value"}], ",", " ", 
    RowBox[{"z", "-", "coordinate"}], ",", " ", 
    RowBox[{"and", " ", "segment", " ", "of", " ", 
     RowBox[{"intersection", ".", " ", "Segments"}], " ", "are", " ", 
     "denoted", " ", "by", " ", "the", " ", "lesser", " ", 
     RowBox[{"index", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"rotateprint", "[", 
    RowBox[{"pointList_", ",", "in_", ",", "angle_", ",", "check_"}], "]"}], ":=",
    " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"nPointList", ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "The", " ", "index", " ", "of", " ", "an", " ", "adjacent", " ", 
         "vertex"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"si", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"in", "\[Equal]", "1"}], ",", 
          RowBox[{
           RowBox[{"Length", "[", "pointList", "]"}], "-", "1"}], ",", 
          RowBox[{"in", "-", "1"}]}], "]"}]}], " ", ",", 
       RowBox[{"(*", " ", 
        RowBox[{
        "The", " ", "index", " ", "of", " ", "the", " ", "other", " ", 
         "adjacent", " ", "vertex"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"fi", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"in", " ", "\[Equal]", 
           RowBox[{"Length", "[", "pointList", "]"}]}], ",", "2", ",", 
          RowBox[{"in", "+", "1"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       "inP", "  ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "The", " ", "coordinates", " ", "of", " ", "the", " ", "vertex", " ", 
         "being", " ", "rotated"}], " ", "*)"}], ",", "\[IndentingNewLine]", 
       "sP", "  ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "The", " ", "coordinates", " ", "of", " ", "an", " ", "adjacent", " ",
          "vertex"}], " ", "*)"}], ",", "\[IndentingNewLine]", "fP", "  ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "The", " ", "coordinates", " ", "of", " ", "the", " ", "other", " ", 
         "adjacent", " ", "vertex"}], " ", "*)"}], ",", "\[IndentingNewLine]",
        "x", ",", "\[IndentingNewLine]", "y", ",", "\[IndentingNewLine]", "z",
        ",", "\[IndentingNewLine]", "ang", ",", "\[IndentingNewLine]", "tan", 
       ",", "\[IndentingNewLine]", "iP1", ",", "\[IndentingNewLine]", "iP2", 
       ",", "\[IndentingNewLine]", "iV", ",", "\[IndentingNewLine]", "solv", 
       ",", "\[IndentingNewLine]", "t", ",", "\[IndentingNewLine]", 
       RowBox[{"broke1", "=", "False"}], ",", "\[IndentingNewLine]", 
       RowBox[{"broke2", "=", "False"}], ",", "\[IndentingNewLine]", "sol"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", 
       RowBox[{
       "v1", ",", "v2", ",", "v3", ",", "p1", ",", "p2", ",", "p3", ",", 
        "k"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"sol", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{"2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"p1", "*", "v1"}], "+", 
                 RowBox[{"p2", "*", "v2"}], "-", 
                 RowBox[{"k", "*", "p3", "*", "v3"}]}], ")"}]}], ")"}]}], "+", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"2", "*", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"p1", "*", "v1"}], "+", 
                    RowBox[{"p2", "*", "v2"}], "-", 
                    RowBox[{"k", "*", "p3", "*", "v3"}]}], ")"}]}], ")"}], 
                "2"], "-", 
               RowBox[{"4", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"v1", "^", "2"}], "+", 
                  RowBox[{"v2", "^", "2"}], "-", 
                  RowBox[{"k", "*", 
                   RowBox[{"v3", "^", "2"}]}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"p1", "^", "2"}], "+", 
                  RowBox[{"p2", "^", "2"}], "-", 
                  RowBox[{"k", "*", 
                   RowBox[{"p3", "^", "2"}]}]}], ")"}]}]}], ")"}]}]}], ")"}], 
          "/", 
          RowBox[{"(", 
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"v1", "^", "2"}], "+", 
              RowBox[{"v2", "^", "2"}], "-", 
              RowBox[{"k", "*", 
               RowBox[{"v3", "^", "2"}]}]}], ")"}]}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{"2", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"p1", "*", "v1"}], "+", 
                 RowBox[{"p2", "*", "v2"}], "-", 
                 RowBox[{"k", "*", "p3", "*", "v3"}]}], ")"}]}], ")"}]}], "-", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"2", "*", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"p1", "*", "v1"}], "+", 
                    RowBox[{"p2", "*", "v2"}], "-", 
                    RowBox[{"k", "*", "p3", "*", "v3"}]}], ")"}]}], ")"}], 
                "2"], "-", 
               RowBox[{"4", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"v1", "^", "2"}], "+", 
                  RowBox[{"v2", "^", "2"}], "-", 
                  RowBox[{"k", "*", 
                   RowBox[{"v3", "^", "2"}]}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"p1", "^", "2"}], "+", 
                  RowBox[{"p2", "^", "2"}], "-", 
                  RowBox[{"k", "*", 
                   RowBox[{"p3", "^", "2"}]}]}], ")"}]}]}], ")"}]}]}], ")"}], 
          "/", 
          RowBox[{"(", 
           RowBox[{"2", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"v1", "^", "2"}], "+", 
              RowBox[{"v2", "^", "2"}], "-", 
              RowBox[{"k", "*", 
               RowBox[{"v3", "^", "2"}]}]}], ")"}]}], ")"}]}]}], "}"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"check", ",", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Translate", " ", "the", " ", "polygon", " ", "so", " ", "that", " ",
           "an", " ", "adjacent", " ", "vertex", " ", "is", " ", "the", " ", 
          RowBox[{"center", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"sP", "=", 
          RowBox[{"pointList", "[", 
           RowBox[{"[", "si", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"nPointList", " ", "=", " ", 
          RowBox[{
           RowBox[{"TranslationTransform", "[", 
            RowBox[{"-", "sP"}], "]"}], "[", "pointList", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fP", " ", "=", " ", 
          RowBox[{"nPointList", "[", 
           RowBox[{"[", "fi", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "Rotate", " ", "the", " ", "polygon", " ", "so", " ", "that", " ", 
            "the", " ", "rotation", " ", "axis", " ", "is", " ", "the", " ", 
            "z"}], "-", "axis"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"fP", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], "&&", 
            RowBox[{
             RowBox[{"fP", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"fP", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "<", "0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"nPointList", " ", "=", " ", 
              RowBox[{
               RowBox[{"RotationTransform", "[", 
                RowBox[{"\[Pi]", ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], "[", 
               "nPointList", "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"nPointList", " ", "=", " ", 
            RowBox[{
             RowBox[{"RotationTransform", "[", 
              RowBox[{"{", 
               RowBox[{"fP", ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
             "[", "nPointList", "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"inP", " ", "=", " ", 
          RowBox[{"nPointList", "[", 
           RowBox[{"[", "in", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"x", "=", 
          RowBox[{"inP", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"y", "=", 
          RowBox[{"inP", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ang", "=", 
          RowBox[{
           RowBox[{"ArcCos", "[", 
            RowBox[{"x", "/", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"x", "^", "2"}], "+", 
               RowBox[{"y", "^", "2"}]}], "]"}]}], "]"}], " ", "*", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"y", "==", "0"}], ",", "1", ",", " ", 
             RowBox[{"Sign", "[", "y", "]"}]}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Rotate", " ", "the", " ", "polygon", " ", "so", " ", "that", " ", 
           "the", " ", "rotating", " ", "vertex", " ", "is", " ", "in", " ", 
           "the", " ", "xz", " ", "plane"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"nPointList", " ", "=", " ", 
          RowBox[{
           RowBox[{"RotationTransform", "[", 
            RowBox[{
             RowBox[{"-", "ang"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], "[", 
           "nPointList", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"inP", "=", 
          RowBox[{"nPointList", "[", 
           RowBox[{"[", "in", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"x", "=", 
          RowBox[{"inP", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"y", "=", 
          RowBox[{"inP", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"z", "=", 
          RowBox[{"inP", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"tan", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "^", "2"}], "+", 
             RowBox[{"y", "^", "2"}]}], ")"}], "/", 
           RowBox[{"z", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Check", " ", "for", " ", "intersection", " ", "with", " ", "one", 
           " ", "rotating", " ", "segment"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"checkIndices", "[", 
              RowBox[{"i", ",", "si", ",", "in", ",", 
               RowBox[{"Length", "[", "nPointList", "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"iP1", "=", 
               RowBox[{"nPointList", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"iP2", "=", 
               RowBox[{"nPointList", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"iV", "=", 
               RowBox[{"iP2", "-", "iP1"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"solv", " ", "=", " ", 
               RowBox[{"sol", "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"p1", "\[Rule]", 
                   RowBox[{"iP1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                  RowBox[{"p2", "\[Rule]", 
                   RowBox[{"iP1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                  RowBox[{"p3", "\[Rule]", 
                   RowBox[{"iP1", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ",", 
                  RowBox[{"v1", "\[Rule]", 
                   RowBox[{"iV", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                  RowBox[{"v2", "\[Rule]", 
                   RowBox[{"iV", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                  RowBox[{"v3", "\[Rule]", 
                   RowBox[{"iV", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ",", 
                  RowBox[{"k", "\[Rule]", "tan"}]}], "}"}]}]}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"Do", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"t", "=", 
                  RowBox[{"solv", "[", 
                   RowBox[{"[", "j", "]"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"Element", "[", 
                    RowBox[{"t", ",", "Reals"}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"z", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"iV", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "*", "t"}], "+", 
                    RowBox[{"iP1", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<1Segment: \>\"", ",", "i", ",", "\"\< z: \>\"", ",", 
                    "z", ",", "\"\< t: \>\"", ",", "t"}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"t", "\[LessEqual]", "1"}], "&&", 
                    RowBox[{"t", "\[GreaterEqual]", "0"}], "&&", 
                    RowBox[{"z", "\[GreaterEqual]", "0"}], "&&", 
                    RowBox[{"z", "\[LessEqual]", 
                    RowBox[{"inP", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"x", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"iV", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "*", "t"}], "+", 
                    RowBox[{"iP1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"y", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"iV", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "*", "t"}], "+", 
                    RowBox[{"iP1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"ang", " ", "=", 
                    RowBox[{"reduceAngle", "[", 
                    RowBox[{
                    RowBox[{"ArcCos", "[", 
                    RowBox[{"x", "/", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{
                    RowBox[{"x", "^", "2"}], "+", 
                    RowBox[{"y", "^", "2"}]}], "]"}]}], "]"}], " ", "*", " ", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"y", "==", "0"}], ",", "1", ",", 
                    RowBox[{"Sign", "[", "y", "]"}]}], "]"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<Segment: \>\"", ",", "i", ",", "\"\< Angle: \>\"", 
                    ",", "ang", ",", "\"\< t: \>\"", ",", "t"}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"ang", "\[LessEqual]", 
                    RowBox[{"reduceAngle", "[", "angle", "]"}]}], ",", 
                    RowBox[{"broke1", "=", "True"}], ",", 
                    RowBox[{"broke2", "=", "True"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"broke1", "&&", "broke2"}], ",", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Print", "[", "\"\<Cannot make rotation.\>\"", "]"}], 
                    ";"}], "*)"}], 
                    RowBox[{"Return", "[", 
                    RowBox[{"Return", "[", "]"}], "]"}]}], "]"}]}]}], 
                    "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
                  "]"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], 
               "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}],
            ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{
              RowBox[{"Length", "[", "nPointList", "]"}], "-", "1"}]}], 
            "}"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]",
          "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"broke1", "&&", "broke2"}], ",", 
           RowBox[{"Return", "[", "pointList", "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Repeat", " ", "the", " ", "previous", " ", "steps", " ", "for", 
           " ", "the", " ", "other", " ", "rotating", " ", "segment"}], " ", 
          "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"fP", "=", 
          RowBox[{"nPointList", "[", 
           RowBox[{"[", "fi", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"nPointList", " ", "=", " ", 
          RowBox[{
           RowBox[{"TranslationTransform", "[", 
            RowBox[{"-", "fP"}], "]"}], "[", "nPointList", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"sP", " ", "=", " ", 
          RowBox[{"nPointList", "[", 
           RowBox[{"[", "si", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"(*", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"sP", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], "&&", 
              RowBox[{
               RowBox[{"sP", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}]}], ","}]}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"sP", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "<", "0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"nPointList", " ", "=", " ", 
              RowBox[{
               RowBox[{"RotationTransform", "[", 
                RowBox[{"\[Pi]", ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], "[", 
               "nPointList", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{",", "\[IndentingNewLine]", 
              RowBox[{"nPointList", " ", "=", " ", 
               RowBox[{
                RowBox[{"RotationTransform", "[", 
                 RowBox[{"{", 
                  RowBox[{"sP", ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}], 
                "[", "nPointList", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
            "*)"}], ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"inP", " ", "=", " ", 
          RowBox[{"nPointList", "[", 
           RowBox[{"[", "in", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"x", "=", 
          RowBox[{"inP", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"y", "=", 
          RowBox[{"inP", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ang", "=", 
          RowBox[{
           RowBox[{"ArcCos", "[", 
            RowBox[{"x", "/", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"x", "^", "2"}], "+", 
               RowBox[{"y", "^", "2"}]}], "]"}]}], "]"}], " ", "*", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"y", "==", "0"}], ",", "1", ",", 
             RowBox[{"Sign", "[", "y", "]"}]}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"nPointList", " ", "=", " ", 
          RowBox[{
           RowBox[{"RotationTransform", "[", 
            RowBox[{
             RowBox[{"-", "ang"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], "[", 
           "nPointList", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"inP", "=", 
          RowBox[{"nPointList", "[", 
           RowBox[{"[", "in", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"x", "=", 
          RowBox[{"inP", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"y", "=", 
          RowBox[{"inP", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"z", "=", 
          RowBox[{"inP", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"tan", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "^", "2"}], "+", 
             RowBox[{"y", "^", "2"}]}], ")"}], "/", 
           RowBox[{"z", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"checkIndices", "[", 
              RowBox[{"i", ",", "fi", ",", "in", ",", 
               RowBox[{"Length", "[", "nPointList", "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"iP1", "=", 
               RowBox[{"nPointList", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"iP2", "=", 
               RowBox[{"nPointList", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"iV", "=", 
               RowBox[{"iP2", "-", "iP1"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"solv", " ", "=", " ", 
               RowBox[{"sol", "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"p1", "\[Rule]", 
                   RowBox[{"iP1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                  RowBox[{"p2", "\[Rule]", 
                   RowBox[{"iP1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                  RowBox[{"p3", "\[Rule]", 
                   RowBox[{"iP1", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ",", 
                  RowBox[{"v1", "\[Rule]", 
                   RowBox[{"iV", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                  RowBox[{"v2", "\[Rule]", 
                   RowBox[{"iV", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                  RowBox[{"v3", "\[Rule]", 
                   RowBox[{"iV", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ",", 
                  RowBox[{"k", "\[Rule]", "tan"}]}], "}"}]}]}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"Do", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"t", "=", 
                  RowBox[{"solv", "[", 
                   RowBox[{"[", "j", "]"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"Element", "[", 
                    RowBox[{"t", ",", "Reals"}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"z", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"iV", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "*", "t"}], "+", 
                    RowBox[{"iP1", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<2Segment: \>\"", ",", "i", ",", "\"\< z: \>\"", ",", 
                    "z", ",", "\"\< t: \>\"", ",", "t"}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"t", "\[LessEqual]", "1"}], "&&", 
                    RowBox[{"t", "\[GreaterEqual]", "0"}], "&&", 
                    RowBox[{"z", "\[LessEqual]", "0"}], "&&", 
                    RowBox[{"z", "\[GreaterEqual]", 
                    RowBox[{"inP", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"x", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"iV", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "*", "t"}], "+", 
                    RowBox[{"iP1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"y", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"iV", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "*", "t"}], "+", 
                    RowBox[{"iP1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"ang", " ", "=", 
                    RowBox[{"reduceAngle", "[", 
                    RowBox[{
                    RowBox[{"ArcCos", "[", 
                    RowBox[{"x", "/", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{
                    RowBox[{"x", "^", "2"}], "+", 
                    RowBox[{"y", "^", "2"}]}], "]"}]}], "]"}], " ", "*", " ", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"y", "==", "0"}], ",", "1", ",", 
                    RowBox[{"Sign", "[", "y", "]"}]}], "]"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<Segment: \>\"", ",", "i", ",", "\"\< Angle: \>\"", 
                    ",", "ang", ",", "\"\< t: \>\"", ",", "t"}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"ang", "\[LessEqual]", 
                    RowBox[{"reduceAngle", "[", "angle", "]"}]}], ",", 
                    RowBox[{"broke1", "=", "True"}], ",", 
                    RowBox[{"broke2", "=", "True"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"broke1", "&&", "broke2"}], ",", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "Print", "[", "\"\<Cannot make rotation.\>\"", "]"}], 
                    ";"}], "*)"}], 
                    RowBox[{"Return", "[", 
                    RowBox[{"Return", "[", "]"}], "]"}]}], "]"}]}]}], 
                    "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
                  "]"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], 
               "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}],
            ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{
              RowBox[{"Length", "[", "nPointList", "]"}], "-", "1"}]}], 
            "}"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "The", " ", "function", " ", "actually", " ", "checks", " ", "for", 
           " ", "possible", " ", "rotation", " ", "in", " ", "both", " ", 
           RowBox[{"directions", ".", " ", "Only"}], " ", "if", " ", "there", 
           " ", "is", " ", "an", " ", "intersection", " ", "in", " ", "both", 
           " ", "directions", " ", "will", " ", "a", " ", "rotation", " ", 
           "not", " ", 
           RowBox[{"happen", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"broke1", "&&", "broke2"}], ",", 
           RowBox[{"Return", "[", "pointList", "]"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", "check"}], ",", "\[IndentingNewLine]", 
        RowBox[{"nPointList", "=", "pointList"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"sP", " ", "=", " ", 
       RowBox[{"nPointList", "[", 
        RowBox[{"[", "si", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fP", " ", "=", " ", 
       RowBox[{"nPointList", "[", 
        RowBox[{"[", "fi", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nPointList", "[", 
        RowBox[{"[", "in", "]"}], "]"}], "=", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"RotationTransform", "[", "\[IndentingNewLine]", 
         RowBox[{"angle", ",", "\[IndentingNewLine]", 
          RowBox[{"fP", "-", "sP"}], ",", "\[IndentingNewLine]", "sP"}], 
         "\[IndentingNewLine]", "]"}], "[", 
        RowBox[{"nPointList", "[", 
         RowBox[{"[", "in", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"in", " ", "\[Equal]", "1"}], ",", 
        RowBox[{
         RowBox[{"nPointList", "[", 
          RowBox[{"[", 
           RowBox[{"Length", "[", "nPointList", "]"}], "]"}], "]"}], "=", 
         RowBox[{"nPointList", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"in", " ", "\[Equal]", 
         RowBox[{"Length", "[", "nPointList", "]"}]}], ",", 
        RowBox[{
         RowBox[{"nPointList", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "=", 
         RowBox[{"nPointList", "[", 
          RowBox[{"[", 
           RowBox[{"Length", "[", "nPointList", "]"}], "]"}], "]"}]}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "nPointList", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.515843104162546*^9, 3.515843151169197*^9}, {
   3.515843225534708*^9, 3.515843229430718*^9}, 3.515853778603818*^9, {
   3.515854526740354*^9, 3.515854531786374*^9}, {3.515854620039605*^9, 
   3.515854620607872*^9}, {3.515855154775709*^9, 3.515855182255844*^9}, {
   3.5158553791064663`*^9, 3.5158553829514112`*^9}, {3.515855567111137*^9, 
   3.515855570452512*^9}, {3.515855607085264*^9, 3.515855625932122*^9}, {
   3.5158556717808647`*^9, 3.515855681907568*^9}, {3.5158557982851458`*^9, 
   3.515855803320241*^9}, {3.5158560965676603`*^9, 3.5158561243834677`*^9}, {
   3.516093477892823*^9, 3.516093480633628*^9}, {3.516093610039845*^9, 
   3.5160937040131407`*^9}, {3.5160938827770844`*^9, 3.516093928785945*^9}, {
   3.516094238697205*^9, 3.516094263872643*^9}, {3.516094426765492*^9, 
   3.516094448515111*^9}, {3.516094483730116*^9, 3.5160946001524982`*^9}, {
   3.51609464566952*^9, 3.5160946467430563`*^9}, {3.516094756012641*^9, 
   3.516094772308064*^9}, {3.5160950261173677`*^9, 3.516095096834889*^9}, {
   3.5160951323924303`*^9, 3.5160951915855494`*^9}, {3.516095224496438*^9, 
   3.516095279109267*^9}, {3.516095413730073*^9, 3.516095452546857*^9}, {
   3.516095536540289*^9, 3.516095563328164*^9}, {3.516095665516096*^9, 
   3.516095763305498*^9}, {3.516095804328974*^9, 3.516095924304096*^9}, {
   3.516095980629489*^9, 3.51609611302555*^9}, 3.516096182817519*^9, 
   3.516096258349815*^9, 3.5160964667760143`*^9, {3.516096508104135*^9, 
   3.516096548943116*^9}, {3.516097321817733*^9, 3.516097334754655*^9}, {
   3.5160975076857347`*^9, 3.516097613770946*^9}, 3.5160977869137983`*^9, {
   3.516098530366762*^9, 3.516098536093089*^9}, 3.5160988830498123`*^9, {
   3.5160992675043488`*^9, 3.516099386805313*^9}, {3.516099417260976*^9, 
   3.516099463973514*^9}, {3.516099544762227*^9, 3.516099556684186*^9}, {
   3.516099642799616*^9, 3.5160996718725643`*^9}, {3.516099724533615*^9, 
   3.516099761398284*^9}, {3.51609994964907*^9, 3.516099983008594*^9}, {
   3.516100306132259*^9, 3.516100306964086*^9}, {3.516101098616988*^9, 
   3.5161012517661457`*^9}, {3.516101296799032*^9, 3.516101297734*^9}, {
   3.5161015448963547`*^9, 3.516101548150465*^9}, {3.516101648507485*^9, 
   3.516101664281445*^9}, {3.5161017994134083`*^9, 3.516101808877552*^9}, {
   3.516101846765377*^9, 3.516101854149637*^9}, {3.516102104433463*^9, 
   3.516102104609365*^9}, {3.516102186377307*^9, 3.5161022911085443`*^9}, {
   3.5161025157180433`*^9, 3.516102593401339*^9}, {3.5161028529179707`*^9, 
   3.516102884827092*^9}, {3.5161029210092697`*^9, 3.516102929917625*^9}, {
   3.516104633380581*^9, 3.516104722634595*^9}, {3.516104765999284*^9, 
   3.516104794495432*^9}, {3.516104843546401*^9, 3.516104850972825*^9}, {
   3.516104911632916*^9, 3.516104923205184*^9}, {3.5164590880610523`*^9, 
   3.516459090625381*^9}, {3.516619643190909*^9, 3.516619653081318*^9}, {
   3.516620250806525*^9, 3.516620252867921*^9}, {3.516982756352827*^9, 
   3.5169827613683*^9}, {3.516984187969315*^9, 3.5169841961276617`*^9}, {
   3.5169931362443533`*^9, 3.516993158233358*^9}, {3.516993331031152*^9, 
   3.5169933480335093`*^9}, {3.516993398977076*^9, 3.516993413890382*^9}, {
   3.516993609018551*^9, 3.516993639833995*^9}, {3.5169938087309237`*^9, 
   3.516993819643042*^9}, {3.5169943406021233`*^9, 3.5169943744637127`*^9}, {
   3.516994425128248*^9, 3.5169944883536386`*^9}, {3.516994538816964*^9, 
   3.5169945664840117`*^9}, {3.5169946350829163`*^9, 3.516994796148809*^9}, {
   3.517002667333796*^9, 3.517002675578908*^9}, {3.517002966473465*^9, 
   3.517003010672086*^9}, {3.517003047918434*^9, 3.517003110568359*^9}, {
   3.5170037767569304`*^9, 3.517003818336007*^9}, {3.517004778567129*^9, 
   3.517004808319516*^9}, {3.5170048944851427`*^9, 3.517004920333755*^9}, {
   3.519133931527897*^9, 3.519133946615137*^9}, {3.519133983278101*^9, 
   3.5191339889412193`*^9}, {3.519135191560321*^9, 3.5191351942727337`*^9}, 
   3.519135474162208*^9, {3.519135505472212*^9, 3.519135512629734*^9}, {
   3.519135583120832*^9, 3.519135591380892*^9}, {3.519135925834145*^9, 
   3.519135928734664*^9}, {3.5193827716323967`*^9, 3.5193827821189013`*^9}, {
   3.5193828605473948`*^9, 3.5193828709545918`*^9}, {3.519383071877371*^9, 
   3.5193831211693897`*^9}, {3.519384296521213*^9, 3.5193842995382557`*^9}, 
   3.5193850368755903`*^9, 3.519385080432982*^9, {3.519385528130588*^9, 
   3.519385542371977*^9}, {3.5193883000607243`*^9, 3.5193883652261133`*^9}, {
   3.519388508285117*^9, 3.519388582498032*^9}, {3.5193886830529623`*^9, 
   3.519388695387147*^9}, {3.51938885921249*^9, 3.5193888596043863`*^9}, {
   3.519388930258066*^9, 3.5193889702062283`*^9}, {3.5193894285025263`*^9, 
   3.5193894337631474`*^9}, {3.519389828531081*^9, 3.519389838193027*^9}, {
   3.519389915576782*^9, 3.519389951450931*^9}, {3.519390336429443*^9, 
   3.519390343616015*^9}, {3.5193934804621897`*^9, 3.519393505542811*^9}, {
   3.519401590823984*^9, 3.5194016059968033`*^9}, {3.519401640154385*^9, 
   3.519401709461092*^9}, {3.51940328977164*^9, 3.519403303640895*^9}, {
   3.5194230580166397`*^9, 3.519423084857607*^9}, {3.519478522021943*^9, 
   3.519478607698988*^9}, {3.5194787593108387`*^9, 3.5194787792865973`*^9}, {
   3.51948583453253*^9, 3.519485843703933*^9}, {3.519485900203926*^9, 
   3.51948590712157*^9}, {3.519497645750864*^9, 3.519497686104743*^9}, {
   3.51964059823711*^9, 3.519640598757052*^9}, {3.5196533824512987`*^9, 
   3.519653465398142*^9}, {3.5234697677623167`*^9, 3.523469777992902*^9}, {
   3.523471464165345*^9, 3.523471559060773*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "performs", " ", "\"\<n\>\"", " ", "rotations", " ", "of", 
    " ", "random", " ", "degree", " ", "on", " ", "random", " ", "vertices", 
    " ", "of", " ", "the", " ", "polygon", " ", "specified", " ", "by", " ", 
    "the", " ", "list", " ", "of", " ", "points", " ", "\"\<pList\>\""}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"rotator", "[", 
    RowBox[{"pList_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nPointList", "=", "pList"}], "\[IndentingNewLine]", "}"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"nPointList", "=", 
         RowBox[{"rotate", "[", 
          RowBox[{"nPointList", ",", 
           RowBox[{"Random", "[", 
            RowBox[{"Integer", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"Length", "[", "nPointList", "]"}]}], "}"}]}], "]"}], 
           ",", 
           RowBox[{"Random", "[", 
            RowBox[{"Real", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", "True"}], 
          "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "n"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "nPointList", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.51672307627036*^9, 3.5167231211992073`*^9}, {
  3.516723294642295*^9, 3.51672334278071*^9}, {3.516723484046073*^9, 
  3.5167234931574802`*^9}, {3.5167236070187693`*^9, 3.516723637937461*^9}, {
  3.516723751112159*^9, 3.516723770838955*^9}, {3.516724290526156*^9, 
  3.516724311918181*^9}, {3.5167244042573423`*^9, 3.516724437307523*^9}, {
  3.5169815934980717`*^9, 3.516981647784358*^9}, {3.516982317433372*^9, 
  3.5169823444950542`*^9}, {3.5169823897015543`*^9, 3.516982396932815*^9}, {
  3.516982442612183*^9, 3.516982481963553*^9}, {3.51698266566925*^9, 
  3.516982674949239*^9}, {3.517004929800284*^9, 3.517004987067153*^9}, {
  3.517005278017563*^9, 3.517005286681539*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "performs", " ", "\"\<n\>\"", " ", "rotations", " ", "of", 
    " ", "random", " ", "degree", " ", "on", " ", "random", " ", "vertices", 
    " ", "of", " ", "the", " ", "polygon", " ", "specified", " ", "by", " ", 
    "the", " ", "list", " ", "of", " ", "points", " ", "\"\<pList\>\"", " ", 
    "without", " ", "checking", " ", "for", " ", "intersection"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"rotatorF", "[", 
    RowBox[{"pList_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nPointList", "=", "pList"}], "\[IndentingNewLine]", "}"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"nPointList", "=", 
         RowBox[{"rotate", "[", 
          RowBox[{"nPointList", ",", 
           RowBox[{"Random", "[", 
            RowBox[{"Integer", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"Length", "[", "nPointList", "]"}]}], "}"}]}], "]"}], 
           ",", 
           RowBox[{"Random", "[", 
            RowBox[{"Real", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", "False"}], 
          "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "n"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "nPointList", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.519385236198502*^9, 3.519385256680628*^9}, {
  3.519653581028475*^9, 3.5196535894453583`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Reducer", "Section",
 CellChangeTimes->{{3.5234650020787354`*^9, 3.5234650031847982`*^9}}],

Cell[CellGroupData[{

Cell["initialization", "Subsection",
 CellChangeTimes->{{3.5234651398476152`*^9, 3.5234651443288717`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "should", " ", "precision", " ", "become", " ", "a", " ", "problem", " ", 
    "the", " ", "safety", " ", "parameter", " ", "controls", " ", 
    RowBox[{"in", "/", "equality"}], " ", "checks", " ", "by", " ", "looking",
     " ", "at", " ", "a", " ", "wider", " ", "range", " ", "around", " ", 
    "the", " ", "number", " ", "to", " ", "be", " ", 
    RowBox[{"checked", ".", " ", "set"}], " ", "to", " ", "0", " ", "if", " ",
     "not", " ", "a", " ", "consideration"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"safety", "=", "0"}], ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.510534781649929*^9, 3.5105347916014977`*^9}, {
   3.5105388370888863`*^9, 3.5105388371778917`*^9}, {3.510540453942365*^9, 
   3.510540454251383*^9}, {3.5105408879521894`*^9, 3.5105408885362225`*^9}, {
   3.510540948758667*^9, 3.5105409488676734`*^9}, {3.5105409902800417`*^9, 
   3.5105409908750763`*^9}, {3.5109148502095375`*^9, 3.5109148655094123`*^9}, 
   3.5247477284082065`*^9, {3.5247480521467233`*^9, 3.5247481571587296`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "getscalefrompoint", " ", "determines", " ", "the", " ", "maximum", " ", 
    "deformation", " ", "of", " ", "q2", " ", "in", " ", "the", " ", 
    "triangle", " ", "q1q2q3", 
    RowBox[{"(", 
     RowBox[{"=", "v"}], ")"}], " ", "\[IndentingNewLine]", "making", " ", 
    "q2", " ", "more", " ", "collinear", " ", "with", " ", "q1", " ", "and", 
    " ", "q3", " ", "so", " ", "that", " ", "the", " ", "deformation", " ", 
    "avoids", " ", "intersection", " ", "with", " ", "point", " ", 
    RowBox[{"s", ".", " ", "\[IndentingNewLine]", "If"}], " ", "complete", 
    " ", "collinearity", " ", "causes", " ", "intersection", " ", "the", " ", 
    "default", " ", "scale", " ", "factor", " ", "is", " ", 
    RowBox[{"0.9", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"getscalefrompoint", "[", 
     RowBox[{"v_", ",", "s_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "q1", ",", "q2", ",", "q3", ",", "r", ",", "a", ",", "b", ",", "ai", 
        ",", "bi", ",", "sol", ",", "c", ",", "d", ",", "smin"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"q1", "=", 
        RowBox[{"v", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", 
       RowBox[{"q2", "=", 
        RowBox[{"v", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", 
       RowBox[{"q3", "=", 
        RowBox[{"v", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"We", " ", "determine", " ", "the", " ", 
         RowBox[{"(", 
          RowBox[{"a", ",", "b"}], ")"}], " ", "coordinates", " ", "of", " ", 
         "s", " ", "in", " ", "the", " ", "space", " ", "spanned", " ", "by", 
         " ", "q2q1", " ", "and", " ", 
         RowBox[{"q2q3", ".", " ", "We"}], " ", "quiet", " ", "errors", " ", 
         "as", " ", "we", " ", "check", " ", "this", " ", "in", " ", "the", 
         " ", "following", " ", "if", " ", 
         RowBox[{"statement", "."}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"sol", "=", 
        RowBox[{"Quiet", "[", 
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"s", "-", "q2"}], "\[Equal]", 
            RowBox[{
             RowBox[{"a", "*", 
              RowBox[{"(", 
               RowBox[{"q1", "-", "q2"}], ")"}]}], "+", 
             RowBox[{"b", "*", 
              RowBox[{"(", 
               RowBox[{"q3", "-", "q2"}], ")"}]}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"a", ",", "b"}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "If", " ", "no", " ", "solution", " ", "was", " ", "found", " ", 
          "we", " ", "find", " ", "the", " ", "closest", " ", 
          RowBox[{"(", 
           RowBox[{"a", ",", "b"}], ")"}], " ", "coordinates", " ", "to", " ",
           "the", " ", "almost", " ", "coplanar", " ", "point", " ", "s"}], 
         ",", " ", 
         RowBox[{
         "if", " ", "any", " ", "error", " ", "arises", " ", "we", " ", 
          "cancel", " ", "the", " ", 
          RowBox[{"move", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "sol", "]"}], "\[Equal]", "0"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{
          RowBox[{"sol", "=", 
           RowBox[{"Quiet", "[", 
            RowBox[{"Check", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"FindMinimum", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", "*", 
                    RowBox[{"(", 
                    RowBox[{"q1", "-", "q2"}], ")"}]}], "+", 
                    RowBox[{"b", "*", 
                    RowBox[{"(", 
                    RowBox[{"q3", "-", "q2"}], ")"}]}]}], ")"}], "-", 
                    RowBox[{"(", 
                    RowBox[{"s", "-", "q2"}], ")"}]}], ")"}], ".", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"a", "*", 
                    RowBox[{"(", 
                    RowBox[{"q1", "-", "q2"}], ")"}]}], "+", 
                    RowBox[{"b", "*", 
                    RowBox[{"(", 
                    RowBox[{"q3", "-", "q2"}], ")"}]}]}], ")"}], "-", 
                    RowBox[{"(", 
                    RowBox[{"s", "-", "q2"}], ")"}]}], ")"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"a", ",", "b"}], "}"}]}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"a", "\[Rule]", "0"}], ",", 
                RowBox[{"b", "\[Rule]", "0"}]}], "}"}]}], "]"}], "]"}]}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "sol", "]"}], "\[Equal]", "0"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{
             RowBox[{
             "Print", "[", 
              "\"\<     As no solution can be found setting a=b=0 to cancel \
move\>\"", "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"a", "=", 
              RowBox[{"b", "=", "0"}]}], ";"}], "\[IndentingNewLine]", ",", 
            RowBox[{
             RowBox[{"a", "=", 
              RowBox[{"(", 
               RowBox[{"a", "/.", "sol"}], ")"}]}], ";", 
             RowBox[{"b", "=", 
              RowBox[{"(", 
               RowBox[{"b", "/.", "sol"}], ")"}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
         RowBox[{
          RowBox[{"a", "=", 
           RowBox[{"(", 
            RowBox[{"a", "/.", 
             RowBox[{"sol", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], ";", 
          RowBox[{"b", "=", 
           RowBox[{"(", 
            RowBox[{"b", "/.", 
             RowBox[{"sol", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "If", " ", "point", " ", "s", " ", "is", " ", "in", " ", "the", " ", 
          "triangle", " ", "q1q2q3", " ", "we", " ", "find", " ", "what", " ",
           "scale", " ", "of", " ", "the", " ", "vector", " ", "q2"}], 
         "\[Rule]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "/", "2"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"q2q1", "+", "q2q3"}], ")"}], " ", "\[IndentingNewLine]", 
          "is", " ", 
          RowBox[{"appropriate", ".", " ", "Otherwise"}], " ", "we", " ", 
          "can", " ", "make", " ", "q2", " ", "completely", " ", "collinear", 
          " ", "with", " ", "q1", " ", "and", " ", "q3"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Or", "[", 
          RowBox[{
           RowBox[{"!", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "safety"}], "\[LessEqual]", " ", "a", 
              "\[LessEqual]", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "safety"}], ")"}]}], ")"}]}], ",", 
           RowBox[{"!", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "safety"}], "\[LessEqual]", "b", "\[LessEqual]", 
              RowBox[{"(", " ", 
               RowBox[{"1", "+", "safety"}], ")"}]}], ")"}]}], ",", 
           RowBox[{
            RowBox[{"a", "+", "b", "-", "1"}], "\[GreaterEqual]", " ", 
            RowBox[{"-", "safety"}]}]}], "]"}], "\[IndentingNewLine]", ",", 
         RowBox[{
          RowBox[{"r", "=", "1"}], ";"}], "\[IndentingNewLine]", ",", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"a", "\[Equal]", "b"}], "\[IndentingNewLine]", ",", 
            RowBox[{
             RowBox[{"r", "=", 
              RowBox[{
               RowBox[{"9", "/", "10"}], "*", 
               RowBox[{"Sqrt", "[", 
                RowBox[{"2", "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"a", "^", "2"}], "+", 
                   RowBox[{"b", "^", "2"}]}], ")"}]}], "]"}]}]}], ";"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"a", "<", "b"}], "\[IndentingNewLine]", ",", 
               RowBox[{
                RowBox[{"ai", "=", 
                 RowBox[{"bi", "=", 
                  RowBox[{"a", "/", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "b", "+", "a"}], ")"}]}]}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"r", "=", 
                 RowBox[{
                  RowBox[{"9", "/", "10"}], "*", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{"2", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"ai", "^", "2"}], "+", 
                    RowBox[{"bi", "^", "2"}]}], ")"}]}], "]"}]}]}], ";"}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{
                RowBox[{"ai", "=", 
                 RowBox[{"bi", "=", 
                  RowBox[{"b", "/", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "a", "+", "b"}], ")"}]}]}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"r", "=", 
                 RowBox[{
                  RowBox[{"9", "/", "10"}], "*", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{"2", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"ai", "^", "2"}], "+", 
                    RowBox[{"bi", "^", "2"}]}], ")"}]}], "]"}]}]}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "r"}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.510100271194698*^9, 3.5101002890467186`*^9}, {
   3.510100338145527*^9, 3.5101003476930733`*^9}, {3.510100389803482*^9, 
   3.510100480311659*^9}, {3.5101020832153397`*^9, 3.51010210192941*^9}, {
   3.510102141431669*^9, 3.5101021468879814`*^9}, {3.5101021908294945`*^9, 
   3.5101021908944983`*^9}, {3.510156828737029*^9, 3.5101568371835127`*^9}, {
   3.5101569056194267`*^9, 3.5101569147069464`*^9}, {3.5102260078652005`*^9, 
   3.5102260310805283`*^9}, {3.510226493896*^9, 3.5102265078777995`*^9}, {
   3.510227071944062*^9, 3.510227073266138*^9}, {3.5102274336777525`*^9, 
   3.510227444427367*^9}, 3.5102511626584444`*^9, {3.510269930501102*^9, 
   3.5102699818440385`*^9}, {3.5102701084822817`*^9, 
   3.5102701167337537`*^9}, {3.510270305422546*^9, 3.5102703422496524`*^9}, {
   3.5102710008183203`*^9, 3.510271004279518*^9}, {3.510272104960474*^9, 
   3.510272121902443*^9}, {3.5102722025460553`*^9, 3.5102722209221067`*^9}, {
   3.510272265255642*^9, 3.5102722711279783`*^9}, {3.5102727680894027`*^9, 
   3.5102729430204077`*^9}, {3.5102730583560047`*^9, 
   3.5102730596470785`*^9}, {3.510273241827499*^9, 3.5102732438036118`*^9}, {
   3.510273964842853*^9, 3.5102740057961955`*^9}, {3.5102741587239428`*^9, 
   3.5102742760126505`*^9}, {3.510274403327933*^9, 3.510274410343334*^9}, {
   3.510274470566779*^9, 3.51027450327765*^9}, {3.510274578021925*^9, 
   3.5102747365709934`*^9}, {3.510274789110998*^9, 3.5102748254620776`*^9}, {
   3.5102749096598935`*^9, 3.510274911526*^9}, 3.51027540578627*^9, {
   3.5102761617515087`*^9, 3.510276185664877*^9}, {3.5102762267962294`*^9, 
   3.510276286003616*^9}, {3.510276340884755*^9, 3.510276623459917*^9}, {
   3.5102766624381466`*^9, 3.510277159131556*^9}, {3.510277269314858*^9, 
   3.5102772966534214`*^9}, {3.510307866466915*^9, 3.5103079625014076`*^9}, {
   3.5103080504934406`*^9, 3.510308055659736*^9}, {3.5103082462086353`*^9, 
   3.5103082700189967`*^9}, {3.5103092291948586`*^9, 3.510309241733576*^9}, {
   3.5103092756165133`*^9, 3.510309277039595*^9}, {3.510309387520914*^9, 
   3.510309399402594*^9}, {3.510309433038518*^9, 3.5103094364687138`*^9}, {
   3.510401719519663*^9, 3.5104017210297494`*^9}, {3.510401931503788*^9, 
   3.5104019327128572`*^9}, {3.5104057549146633`*^9, 
   3.5104057584048634`*^9}, {3.5104058025603886`*^9, 
   3.5104059301066837`*^9}, {3.5104060264831963`*^9, 3.510406038097861*^9}, {
   3.5104061521283827`*^9, 3.5104062090296373`*^9}, {3.510407056888132*^9, 
   3.51040705947128*^9}, {3.51040718150626*^9, 3.510407183150354*^9}, {
   3.5104823060920706`*^9, 3.5104823087202206`*^9}, {3.510482978630537*^9, 
   3.510483022267033*^9}, {3.5105341326568084`*^9, 3.5105341374140806`*^9}, {
   3.51053529952555*^9, 3.5105353911107883`*^9}, {3.5105354491771092`*^9, 
   3.51053557035604*^9}, {3.5105357915136895`*^9, 3.5105358244925756`*^9}, {
   3.510535863763822*^9, 3.5105358773936014`*^9}, {3.5105359294545794`*^9, 
   3.5105359329977818`*^9}, {3.510536021742858*^9, 3.510536025568077*^9}, 
   3.510536250378935*^9, {3.5105405208701935`*^9, 3.5105405248974237`*^9}, {
   3.510540585729903*^9, 3.5105405928683114`*^9}, {3.510540656276938*^9, 
   3.510540661953263*^9}, {3.510573123585476*^9, 3.51057315303316*^9}, {
   3.51091615242902*^9, 3.5109161555541983`*^9}, {3.5109216287582483`*^9, 
   3.5109217560505285`*^9}, {3.5247479150818834`*^9, 3.5247479415633984`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"getscalefromline", " ", "takes", " ", "q1q2q3", 
     RowBox[{"(", 
      RowBox[{"=", "v"}], ")"}], " ", "and", " ", "a", " ", "line", " ", 
     "segment", " ", "p1p2", 
     RowBox[{"(", 
      RowBox[{"=", "w"}], ")"}], " ", "and", " ", "determines", " ", "the", 
     " ", "maximum", " ", "scale", " ", "factor", " ", "\[IndentingNewLine]", 
     "of", " ", "q2", " ", "deformation", " ", "as", " ", "in", " ", 
     RowBox[{"getscalefrompoint", ".", " ", "We"}], " ", "first", " ", 
     "determine", " ", "if", " ", "w", " ", "intersects", " ", "the", " ", 
     "plane"}], ",", " ", 
    RowBox[{
    "and", " ", "if", " ", "so", " ", "we", " ", "use", " ", 
     "getscalefrompoint", " ", "on", " ", "said", " ", 
     RowBox[{"intersection", ".", " ", "Without"}], " ", "intersection", " ", 
     "we", " ", "can", " ", "make", " ", "q2", " ", "perfectly", " ", 
     "collinear", " ", "with", " ", "q1", " ", "and", " ", 
     RowBox[{"q3", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"getscalefromline", "[", 
     RowBox[{"v_", ",", "w_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "int", ",", "a", ",", "b", ",", "ai", ",", "bi", ",", "sol", ",", "s", 
        ",", "r", ",", "q", ",", "q1", ",", "q2", ",", "q3", ",", "p1", ",", 
        "p2"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"q1", "=", 
        RowBox[{"v", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", 
       RowBox[{"q2", "=", 
        RowBox[{"v", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", 
       RowBox[{"q3", "=", 
        RowBox[{"v", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"p1", "=", 
        RowBox[{"w", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", 
       RowBox[{"p2", "=", 
        RowBox[{"w", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "the", " ", "normal", " ", "to", " ", "the", " ", "triangle", " ", 
         "v"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"q", "=", 
        RowBox[{"Cross", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", 
            RowBox[{"v", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ")"}], ",", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"v", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "-", 
            RowBox[{"v", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"is", " ", "q2", " ", "already", " ", 
         RowBox[{"collinear", "?"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"q1", "-", "q2"}], ")"}], ".", 
             RowBox[{"(", 
              RowBox[{"q3", "-", "q2"}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Norm", "[", 
              RowBox[{"(", 
               RowBox[{"q1", "-", "q2"}], ")"}], "]"}], "*", 
             RowBox[{"Norm", "[", 
              RowBox[{"(", 
               RowBox[{"q3", "-", "q2"}], ")"}], "]"}]}]}], "]"}], 
          "\[LessEqual]", " ", "safety"}], "\[IndentingNewLine]", ",", 
         RowBox[{
          RowBox[{"r", "=", "1"}], ";"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "is", " ", "w", " ", "parallel", " ", "with", " ", "the", " ", 
           "plane", " ", "defined", " ", "by", " ", "the", " ", 
           RowBox[{"triangle", "?"}]}], "*)"}], "\[IndentingNewLine]", ",", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\< parallel? \>\"", ",", 
             RowBox[{
              RowBox[{"q", ".", 
               RowBox[{"(", 
                RowBox[{"p2", "-", "p1"}], ")"}]}], "\[Equal]", "0"}], ",", 
             "\"\< qp2p1(p2-p1) \>\"", ",", 
             RowBox[{"{", 
              RowBox[{"q", ",", "p2", ",", "p1", ",", 
               RowBox[{"p2", "-", "p1"}]}], "}"}]}], "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"q", ".", 
               RowBox[{"(", 
                RowBox[{"p2", "-", "p1"}], ")"}]}], "]"}], "\[LessEqual]", 
             " ", "safety"}], "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "is", " ", "w", " ", "some", " ", "distance", " ", "away", " ", 
              "if", " ", "parallel"}], "*)"}], "\[IndentingNewLine]", ",", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Abs", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"q", ".", 
                    RowBox[{"(", 
                    RowBox[{"p1", "-", "q1"}], ")"}]}], ")"}], "/", 
                  RowBox[{"Norm", "[", "q", "]"}]}], "]"}], "\[GreaterEqual]",
                 " ", "safety"}], "\[IndentingNewLine]", ",", 
               RowBox[{
                RowBox[{"r", "=", "1"}], ";"}], "\[IndentingNewLine]", ",", 
               RowBox[{
                RowBox[{"r", "=", "0"}], ";"}]}], "\[IndentingNewLine]", 
              "]"}], ";"}], "\[IndentingNewLine]", ",", 
            RowBox[{
             RowBox[{"s", "=", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"q", ".", 
                 RowBox[{"(", 
                  RowBox[{"q1", "-", "p1"}], ")"}]}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{"q", ".", 
                 RowBox[{"(", 
                  RowBox[{"p2", "-", "p1"}], ")"}]}], ")"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"is", " ", 
               RowBox[{"w", "'"}], "s", " ", "intersection", " ", "with", " ",
                "the", " ", "plane", " ", "on", " ", "the", " ", 
               RowBox[{"segment", "?"}]}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "safety"}], "\[LessEqual]", " ", "s", 
                  "\[LessEqual]", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", "safety"}], ")"}]}], ")"}]}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{
                RowBox[{"r", "=", "1"}], ";"}], "\[IndentingNewLine]", ",", 
               RowBox[{
                RowBox[{"int", "=", 
                 RowBox[{"p1", "+", 
                  RowBox[{"s", "*", 
                   RowBox[{"(", 
                    RowBox[{"p2", "-", "p1"}], ")"}]}]}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"r", "=", 
                 RowBox[{"getscalefrompoint", "[", 
                  RowBox[{"v", ",", "int"}], "]"}]}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "r"}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5100666874077735`*^9, 3.5100667154543777`*^9}, {
   3.510066767365347*^9, 3.510066820184368*^9}, {3.510066850666111*^9, 
   3.5100668595506196`*^9}, {3.5100669076983733`*^9, 
   3.5100669690498824`*^9}, {3.510067019292756*^9, 3.510067026911192*^9}, 
   3.5100670960821486`*^9, {3.510067181970061*^9, 3.510067221732335*^9}, {
   3.5100673136865945`*^9, 3.5100673459114375`*^9}, {3.5100673952632604`*^9, 
   3.5100673967323446`*^9}, {3.5100675742214966`*^9, 
   3.5100676326008353`*^9}, {3.5100680315786552`*^9, 3.51006803829704*^9}, {
   3.5100692633801107`*^9, 3.510069269763476*^9}, {3.510079238238557*^9, 
   3.5100792391096067`*^9}, {3.51007931399889*^9, 3.510079385822998*^9}, {
   3.510079427765397*^9, 3.5100794613213167`*^9}, {3.5100795286481676`*^9, 
   3.5100795670103617`*^9}, {3.51007963832244*^9, 3.510079749625807*^9}, {
   3.5100798513776264`*^9, 3.510079852629698*^9}, {3.510080102957016*^9, 
   3.5100801171418276`*^9}, {3.510080602485587*^9, 3.5100806676763163`*^9}, {
   3.5100808036660943`*^9, 3.5100808048311605`*^9}, {3.5100808954913464`*^9, 
   3.510080914528435*^9}, {3.510080955889801*^9, 3.5100810284569516`*^9}, {
   3.510081401476287*^9, 3.510081421175414*^9}, {3.5100815592363105`*^9, 
   3.510081575806258*^9}, {3.5100816180656753`*^9, 3.5100817109569883`*^9}, 
   3.510081743752864*^9, {3.510081782215064*^9, 3.510081810059657*^9}, {
   3.510081859262471*^9, 3.5100819163197346`*^9}, {3.5100822874419613`*^9, 
   3.5100823179717073`*^9}, {3.5100823656784363`*^9, 
   3.5100823674315367`*^9}, {3.5100827281521683`*^9, 
   3.5100827287812047`*^9}, {3.5100827985921974`*^9, 
   3.5100827986942034`*^9}, {3.510082896139777*^9, 3.5100829407143264`*^9}, {
   3.5100830509666324`*^9, 3.5100831090139527`*^9}, {3.510083162447009*^9, 
   3.510083187104419*^9}, {3.510083255620338*^9, 3.510083364456563*^9}, {
   3.510083558691673*^9, 3.51008364151341*^9}, {3.5100836840948453`*^9, 
   3.5100836871750216`*^9}, {3.5100845425501785`*^9, 3.5100845824054575`*^9}, 
   3.5100847305049286`*^9, {3.5100847862841187`*^9, 3.5100848083383803`*^9}, {
   3.5100887767037168`*^9, 3.5100887767867217`*^9}, {3.5100890789880066`*^9, 
   3.5100891133679733`*^9}, {3.5100891738454323`*^9, 3.510089179245741*^9}, {
   3.51008922135915*^9, 3.510089226297432*^9}, {3.5100893493894725`*^9, 
   3.510089403330558*^9}, {3.510089442668808*^9, 3.5100894526153765`*^9}, {
   3.510089488015402*^9, 3.5100894885584326`*^9}, {3.510090304305091*^9, 
   3.5100903181388817`*^9}, {3.5100907718168306`*^9, 
   3.5100907994854136`*^9}, {3.510090830970214*^9, 3.510090834975443*^9}, {
   3.510091024575288*^9, 3.510091033792815*^9}, {3.5100910887719593`*^9, 
   3.510091095979372*^9}, {3.510091133974545*^9, 3.5100911443641396`*^9}, {
   3.510091305158336*^9, 3.510091361605565*^9}, {3.5100914627963524`*^9, 
   3.5100915976290646`*^9}, {3.5100917270024643`*^9, 3.510091727566497*^9}, {
   3.5100928831585927`*^9, 3.510092913056303*^9}, {3.5100931599634247`*^9, 
   3.5100932107103276`*^9}, {3.5100942352069254`*^9, 
   3.5100942568921657`*^9}, {3.510094360852112*^9, 3.5100943617061605`*^9}, {
   3.510100157728208*^9, 3.510100158261238*^9}, {3.5101022580403385`*^9, 
   3.5101023536328063`*^9}, {3.5101024003114767`*^9, 
   3.5101024318442802`*^9}, {3.510102734685601*^9, 3.510102745765235*^9}, {
   3.5101029971146116`*^9, 3.5101030298074813`*^9}, {3.51010319937718*^9, 
   3.510103209424755*^9}, {3.5101032826179414`*^9, 3.510103339879216*^9}, {
   3.510145778682002*^9, 3.510145783101255*^9}, {3.5101568639380426`*^9, 
   3.5101568791649137`*^9}, {3.5101569211453147`*^9, 
   3.5101569219463606`*^9}, {3.510190564327257*^9, 3.5101906290859613`*^9}, {
   3.510190795524481*^9, 3.510190802376873*^9}, {3.510226578780855*^9, 
   3.5102266886901417`*^9}, {3.510227080891574*^9, 3.510227128700309*^9}, {
   3.5102273795766582`*^9, 3.5102273816237755`*^9}, {3.510227425362277*^9, 
   3.5102274277704144`*^9}, {3.5102390212389956`*^9, 3.510239025437235*^9}, {
   3.510250301232174*^9, 3.5102503077035437`*^9}, {3.510252982213517*^9, 
   3.5102529826765437`*^9}, {3.5102530440800557`*^9, 
   3.5102530442510653`*^9}, {3.5102609952460346`*^9, 
   3.5102609975391655`*^9}, {3.510269686175127*^9, 3.510269719879055*^9}, {
   3.510269834224595*^9, 3.5102698394708953`*^9}, {3.510269871843747*^9, 
   3.5102698986472797`*^9}, 3.5102710191783705`*^9, {3.5102711721091175`*^9, 
   3.510271175197294*^9}, {3.5102772205230675`*^9, 3.510277231671705*^9}, {
   3.510277326270116*^9, 3.510277643941285*^9}, {3.510308065061274*^9, 
   3.510308065201282*^9}, {3.5103214812855372`*^9, 3.510321538425805*^9}, {
   3.5103216243847218`*^9, 3.510321630414067*^9}, {3.510321741439417*^9, 
   3.5103218027049212`*^9}, {3.5103220740894437`*^9, 
   3.5103220774586363`*^9}, {3.5103223294030466`*^9, 
   3.5103223839641676`*^9}, {3.5104074776561985`*^9, 
   3.5104074782882347`*^9}, {3.510482966739857*^9, 3.510482993819406*^9}, {
   3.510534121869191*^9, 3.5105341439154525`*^9}, {3.5105350242588053`*^9, 
   3.5105351480798874`*^9}, {3.51053519079533*^9, 3.5105351992028112`*^9}, {
   3.5105352355878925`*^9, 3.5105352437933617`*^9}, {3.5109218362381153`*^9, 
   3.510921836660139*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"given", " ", "a", " ", "list", " ", "of", " ", "points", " ", 
     RowBox[{"(", "l", ")"}], " ", "and", " ", "an", " ", "index", " ", 
     RowBox[{"(", "ind", ")"}], " ", "for", " ", "the", " ", "point", " ", 
     "we", " ", "are", " ", "trying", " ", "to", " ", "deform"}], ",", 
    "\[IndentingNewLine]", " ", 
    RowBox[{
    "we", " ", "search", " ", "for", " ", "the", " ", "maximum", " ", "scale",
      " ", "factor", " ", "from", " ", "all", " ", "other", " ", "line", " ", 
     "segments", " ", "in", " ", "the", " ", 
     RowBox[{"list", ".", "\[IndentingNewLine]", "If"}], " ", "we", " ", 
     "are", " ", "trying", " ", "for", " ", "maximum", " ", "reduction", " ", 
     "we", " ", "find", " ", "the", " ", "largest", " ", "scale", " ", 
     RowBox[{"possible", ".", "Otherwise"}], "\[IndentingNewLine]", "we", " ",
      "halt", " ", "the", " ", "process", " ", "if", " ", "an", " ", 
     "intersection", " ", "scale", " ", "falls", " ", "below", " ", 
     RowBox[{"min", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"getscalefromlist", "[", 
     RowBox[{"l_", ",", "ind_", ",", "min_", ",", "fullReduce_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "v", ",", "w", ",", "r", ",", "len", ",", "c", ",", "j", ",", "i"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"len", "=", 
        RowBox[{"Length", "[", "l", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"r", "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"len", "<", " ", "6"}], "\[IndentingNewLine]", ",", 
         RowBox[{
          RowBox[{"r", "=", "0"}], ";"}], "\[IndentingNewLine]", ",", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"Or", "[", 
             RowBox[{
              RowBox[{"ind", "\[Equal]", "1"}], ",", 
              RowBox[{"ind", "\[Equal]", "len"}]}], "]"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{
             RowBox[{"v", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"l", "[", 
                 RowBox[{"[", 
                  RowBox[{"len", "-", "1"}], "]"}], "]"}], ",", 
                RowBox[{"l", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"l", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"i", "=", "2"}], ",", 
               RowBox[{"i", "\[LessEqual]", " ", 
                RowBox[{"(", 
                 RowBox[{"len", "-", "2"}], ")"}]}], ",", 
               RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"c", "=", 
                 RowBox[{"Min", "[", 
                  RowBox[{"r", ",", 
                   RowBox[{"getscalefromline", "[", 
                    RowBox[{"v", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"l", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"l", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}],
                   "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"r", "=", "c"}], ";", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"And", "[", 
                   RowBox[{
                    RowBox[{"r", "<", " ", "min"}], ",", 
                    RowBox[{"!", "fullReduce"}]}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"i", "=", "len"}], ";"}]}], "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
            RowBox[{
             RowBox[{"v", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"l", "[", 
                 RowBox[{"[", 
                  RowBox[{"ind", "-", "1"}], "]"}], "]"}], ",", 
                RowBox[{"l", "[", 
                 RowBox[{"[", "ind", "]"}], "]"}], ",", 
                RowBox[{"l", "[", 
                 RowBox[{"[", 
                  RowBox[{"ind", "+", "1"}], "]"}], "]"}]}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"i", "=", "1"}], ",", 
               RowBox[{"i", "\[LessEqual]", 
                RowBox[{"(", 
                 RowBox[{"ind", "-", "2"}], ")"}]}], ",", 
               RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"c", "=", 
                 RowBox[{"Min", "[", 
                  RowBox[{"r", ",", 
                   RowBox[{"getscalefromline", "[", 
                    RowBox[{"v", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"l", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"l", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}],
                   "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"r", "=", "c"}], ";", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"And", "[", 
                   RowBox[{
                    RowBox[{"r", "<", " ", "min"}], ",", 
                    RowBox[{"!", "fullReduce"}]}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"i", "=", "ind"}], ";"}]}], "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"r", "\[GreaterEqual]", "min"}], ","}]}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"j", "=", 
                RowBox[{"ind", "+", "1"}]}], ",", 
               RowBox[{"j", "\[LessEqual]", " ", 
                RowBox[{"(", 
                 RowBox[{"len", "-", "1"}], ")"}]}], ",", 
               RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"c", "=", 
                 RowBox[{"Min", "[", 
                  RowBox[{"r", ",", 
                   RowBox[{"getscalefromline", "[", 
                    RowBox[{"v", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"l", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", 
                    RowBox[{"l", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", "+", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}],
                   "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"r", "=", "c"}], ";", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"And", "[", 
                   RowBox[{
                    RowBox[{"r", "<", " ", "min"}], ",", 
                    RowBox[{"!", "fullReduce"}]}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"j", "=", "len"}], ";"}]}], "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"]", ";"}], "*)"}], "\[IndentingNewLine]", "]"}], ";"}]}],
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "r"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5102276740705023`*^9, 3.5102277150108438`*^9}, {
   3.5102278212889223`*^9, 3.510227825661173*^9}, {3.510228188763941*^9, 
   3.51022838822635*^9}, {3.510228420333186*^9, 3.510228465351761*^9}, {
   3.5102287480139284`*^9, 3.510228749218997*^9}, {3.510233559265588*^9, 
   3.5102335975847797`*^9}, {3.5102336286645575`*^9, 
   3.5102337210628424`*^9}, {3.510233952936105*^9, 3.510233986032998*^9}, {
   3.5102349139820733`*^9, 3.5102349498971276`*^9}, {3.510235052532998*^9, 
   3.510235102601862*^9}, {3.5102353528081727`*^9, 3.5102354614303856`*^9}, {
   3.5102355659603643`*^9, 3.5102355863805323`*^9}, {3.51024124784735*^9, 
   3.5102412693105774`*^9}, {3.5102603596976833`*^9, 
   3.5102603603527207`*^9}, {3.510261605055914*^9, 3.5102616344965973`*^9}, {
   3.5102647197460637`*^9, 3.510264719976077*^9}, {3.5102648486074343`*^9, 
   3.510264862474227*^9}, {3.510269304928321*^9, 3.510269373604249*^9}, {
   3.510269425656226*^9, 3.5102694324496145`*^9}, {3.5102694921420293`*^9, 
   3.510269524445877*^9}, {3.5102718533300815`*^9, 3.5102718620225787`*^9}, {
   3.5102778052735133`*^9, 3.5102779092954626`*^9}, {3.5103107227272835`*^9, 
   3.510310724739399*^9}, {3.5103189300816164`*^9, 3.5103189302906284`*^9}, {
   3.510319161288841*^9, 3.5103191659191055`*^9}, {3.5104829548541775`*^9, 
   3.5104829600114727`*^9}, {3.51053420122873*^9, 3.5105342678825426`*^9}, {
   3.5105343583837194`*^9, 3.5105344934504447`*^9}, {3.5105345516707745`*^9, 
   3.5105345581191435`*^9}, {3.5105393739965963`*^9, 
   3.5105393949067917`*^9}, {3.510539556556038*^9, 3.5105395611503005`*^9}, {
   3.5105410644302835`*^9, 3.510541153052352*^9}, {3.510913520698494*^9, 
   3.5109136223073053`*^9}, {3.5109137234920926`*^9, 
   3.5109137249431753`*^9}, {3.5109153909374647`*^9, 3.510915399126933*^9}, {
   3.5109154798335495`*^9, 3.510915511189343*^9}, 3.510916166897847*^9, {
   3.5109218659488144`*^9, 3.5109218692680044`*^9}, {3.510922039393735*^9, 
   3.510922103365394*^9}, {3.52474659869359*^9, 3.5247466143074837`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"given", " ", "a", " ", "list", " ", "of", " ", "points", " ", 
     RowBox[{"(", "v", ")"}]}], ",", " ", 
    RowBox[{"a", " ", "known", " ", "scale", " ", "factor", " ", 
     RowBox[{"(", "r", ")"}]}], ",", " ", 
    RowBox[{
    "and", " ", "an", " ", "index", " ", "for", " ", "the", " ", "point", " ",
      "being", " ", "deformed", " ", 
     RowBox[{"(", "i", ")"}], " ", "we", " ", "give", " ", "the", " ", 
     "vector", " ", "of", " ", "the", " ", "deformed", " ", "point"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"reduceedge", "[", 
     RowBox[{"v_", ",", "r_", ",", "i_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "len", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"len", "=", 
        RowBox[{"Length", "[", "v", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Or", "[", 
          RowBox[{
           RowBox[{"i", "\[Equal]", "1"}], ",", 
           RowBox[{"i", "\[Equal]", "len"}]}], "]"}], "\[IndentingNewLine]", 
         ",", 
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "/", "2"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"v", "[", 
                RowBox[{"[", 
                 RowBox[{"len", "-", "1"}], "]"}], "]"}], "-", 
               RowBox[{"v", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "+", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"v", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "-", 
               RowBox[{"v", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], ")"}]}]}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{
          RowBox[{"v", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r", "/", "2"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"v", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "-", "1"}], "]"}], "]"}], "-", 
               RowBox[{"v", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "+", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"v", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
               RowBox[{"v", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ")"}]}]}]}], 
        "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.510227216362323*^9, 3.5102273495149384`*^9}, {
  3.510228145351458*^9, 3.51022815290189*^9}, {3.510241591907029*^9, 
  3.5102416410818415`*^9}, {3.5102416818751745`*^9, 3.510241731004985*^9}, {
  3.510241763339834*^9, 3.510241776884609*^9}, {3.5102523593798933`*^9, 
  3.510252407090622*^9}, {3.510264792039199*^9, 3.5102647960604286`*^9}, {
  3.5102779540580235`*^9, 3.5102780150795135`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"given", " ", "a", " ", "list", " ", "of", " ", "points", " ", 
    RowBox[{"(", "v", ")"}], " ", "defining", " ", "n", " ", "segments", " ", 
    "we", " ", "randomly", " ", "pick", " ", "and", " ", "reduce", " ", "n", 
    " ", "points", " ", "of", " ", 
    RowBox[{"v", ".", " ", "we"}], " ", "return", " ", "the", " ", "deformed",
     " ", 
    RowBox[{"list", ".", "\[IndentingNewLine]", "The"}], " ", "boolean", " ", 
    "fullReduce", " ", "determines", " ", "if", " ", "we", " ", "randomly", 
    " ", "deform", " ", "to", " ", "the", " ", "maximum", " ", "possible", 
    " ", "at", " ", "each", " ", "step", " ", "or", " ", 
    RowBox[{"not", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"reducelist", "[", 
     RowBox[{"v_", ",", "onlyRemoveVertices_", ",", "fullReduce_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "l", ",", "r", ",", "s", ",", "len1", ",", "len2", ",", "type", ",", 
        "remove", ",", "sval", ",", "iter", ",", "i", ",", "ct", ",", "scale",
         ",", "poss"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ct", "=", 
        RowBox[{
         RowBox[{"Length", "[", "v", "]"}], "-", "1"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"l", "=", "v"}], ";", "\[IndentingNewLine]", 
       RowBox[{"iter", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"len1", "=", 
        RowBox[{"Length", "[", "v", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "get", " ", "the", " ", "order", " ", "of", " ", "chosen", " ", 
         "vertices", " ", "for", " ", "deformation", " ", "at", " ", 
         "random"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"s", "=", 
        RowBox[{"RandomSample", "[", 
         RowBox[{"Range", "[", 
          RowBox[{"len1", "-", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"len2", "=", 
        RowBox[{"Length", "[", "s", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"And", "[", 
          RowBox[{
           RowBox[{"len2", ">", "0"}], ",", 
           RowBox[{"iter", "<", "ct"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "randomly", " ", "decide", " ", "if", " ", "we", " ", "will", " ", 
           "attempt", " ", "to", " ", "remove", " ", "a", " ", "vertex", " ", 
           RowBox[{"(", 
            RowBox[{"type", " ", "2"}], ")"}], "\[IndentingNewLine]", "if", 
           " ", "told", " ", "to", " ", "by", " ", "the", " ", 
           "onlyRemoveVertices", " ", "parameter", " ", "we", " ", "only", 
           " ", "try", " ", "to", " ", "get", " ", "rid", " ", "of", " ", 
           "unneeded", " ", "vertices"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{"onlyRemoveVertices", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"type", "=", "2"}], ";"}], "\[IndentingNewLine]", ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"type", "=", 
              RowBox[{
               RowBox[{"RandomSample", "[", 
                RowBox[{
                 RowBox[{"Range", "[", "2", "]"}], ",", "1"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"type", "\[Equal]", "1"}], ",", 
            RowBox[{"scale", "=", 
             RowBox[{"RandomReal", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"2", "/", "10"}], ",", 
                RowBox[{"8", "/", "10"}]}], "}"}], "]"}]}], ",", 
            RowBox[{"scale", "=", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"type", "=", "1"}], ";"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"sval", "=", 
           RowBox[{"s", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "find", " ", "the", " ", "appropriate", " ", "scale", " ", "given",
             " ", "the", " ", "type", " ", "and", " ", "fullReduce", " ", 
            "value"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"fullReduce", "\[IndentingNewLine]", ",", 
            RowBox[{
             RowBox[{"r", "=", 
              RowBox[{"getscalefromlist", "[", 
               RowBox[{"l", ",", "sval", ",", "scale", ",", "True"}], "]"}]}],
              ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"And", "[", 
                RowBox[{
                 RowBox[{"r", "\[Equal]", "1"}], ",", 
                 RowBox[{"type", "\[Equal]", "2"}]}], "]"}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{
                RowBox[{"scale", "=", "1"}], ";"}], "\[IndentingNewLine]", 
               ",", 
               RowBox[{
                RowBox[{"scale", "=", 
                 RowBox[{
                  RowBox[{"RandomReal", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"2", "/", "10"}], ",", 
                    RowBox[{"8", "/", "10"}]}], "}"}], "]"}], "*", "r"}]}], 
                ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"scale", "<", 
                RowBox[{"1", "/", "10"}]}], ",", 
               RowBox[{
                RowBox[{"scale", "=", "0"}], ";"}]}], "]"}], ";"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"getscalefromlist", "[", 
                 RowBox[{"l", ",", "sval", ",", "scale", ",", "fullReduce"}], 
                 "]"}], "<", " ", "scale"}], ",", 
               RowBox[{
                RowBox[{"scale", "=", "0"}], ";"}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "as", " ", "the", " ", "first", " ", "vertex", " ", "is", " ", 
            "repeated", " ", "we", " ", "must", " ", "check", " ", "if", " ", 
            "we", " ", "have", " ", "to", " ", "copy", " ", "the", " ", 
            "result", " ", "to", " ", "the", " ", "last", " ", "vertex"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"sval", "\[Equal]", "1"}], "\[IndentingNewLine]", ",", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"And", "[", 
                RowBox[{
                 RowBox[{"type", "\[Equal]", "2"}], ",", 
                 RowBox[{"scale", "\[Equal]", "1"}]}], "]"}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{
                RowBox[{"l", "=", 
                 RowBox[{"ReplacePart", "[", 
                  RowBox[{"l", ",", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"{", "len1", "}"}]}], "}"}], "\[Rule]", 
                    RowBox[{"reduceedge", "[", 
                    RowBox[{"l", ",", "scale", ",", "1"}], "]"}]}]}], "]"}]}],
                 ";"}], "\[IndentingNewLine]", ",", 
               RowBox[{
                RowBox[{"l", "=", 
                 RowBox[{"ReplacePart", "[", 
                  RowBox[{"l", ",", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"{", "len1", "}"}]}], "}"}], "\[Rule]", 
                    RowBox[{"reduceedge", "[", 
                    RowBox[{"l", ",", "scale", ",", "1"}], "]"}]}]}], "]"}]}],
                 ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"And", "[", 
                RowBox[{
                 RowBox[{"type", "\[Equal]", "2"}], ",", 
                 RowBox[{"scale", "\[Equal]", "1"}]}], "]"}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{
                RowBox[{"l", "=", 
                 RowBox[{"ReplacePart", "[", 
                  RowBox[{"l", ",", 
                   RowBox[{"sval", "\[Rule]", 
                    RowBox[{"reduceedge", "[", 
                    RowBox[{"l", ",", "scale", ",", "sval"}], "]"}]}]}], 
                  "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
               RowBox[{
                RowBox[{"l", "=", 
                 RowBox[{"ReplacePart", "[", 
                  RowBox[{"l", ",", 
                   RowBox[{"sval", "\[Rule]", 
                    RowBox[{"reduceedge", "[", 
                    RowBox[{"l", ",", "scale", ",", "sval"}], "]"}]}]}], 
                  "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "if", " ", "removal", " ", "is", " ", "possible", " ", "we", " ", 
            "must", " ", "drop", " ", "from", " ", "the", " ", "list", " ", 
            "and", " ", "edit", " ", "the", " ", "scheduled", " ", 
            "deformation", " ", "vertices"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"And", "[", 
             RowBox[{
              RowBox[{"type", "\[Equal]", "2"}], ",", 
              RowBox[{"scale", "\[Equal]", "1"}]}], "]"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"sval", "\[Equal]", "1"}], "\[IndentingNewLine]", ",", 
               RowBox[{
                RowBox[{"l", "=", 
                 RowBox[{"Drop", "[", 
                  RowBox[{"l", ",", "1"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"len1", "=", 
                 RowBox[{"len1", "-", "1"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"l", "[", 
                  RowBox[{"[", "len1", "]"}], "]"}], "=", 
                 RowBox[{"l", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"For", "[", 
                 RowBox[{
                  RowBox[{"i", "=", "2"}], ",", 
                  RowBox[{"i", "\[LessEqual]", " ", "len2"}], ",", 
                  RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ">", "1"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", 
                    RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", "1"}]}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}]}], 
                 "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
               ",", 
               RowBox[{
                RowBox[{"l", "=", 
                 RowBox[{"Drop", "[", 
                  RowBox[{"l", ",", 
                   RowBox[{"{", 
                    RowBox[{"s", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "}"}]}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"len1", "=", 
                 RowBox[{"len1", "-", "1"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"For", "[", 
                 RowBox[{
                  RowBox[{"i", "=", "2"}], ",", 
                  RowBox[{"i", "\[LessEqual]", "len2"}], ",", 
                  RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ">", 
                    RowBox[{"s", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
                    ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", 
                    RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "-", "1"}]}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}]}], 
                 "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]",
               "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<sval \>\"", ",", "sval", ",", "\"\< r \>\"", ",", "r", ",", 
              "\"\< type \>\"", ",", "type"}], "]"}], ";"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "pop", " ", "the", " ", "deformation", " ", "schedule", " ", 
            "stack"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"s", "=", 
           RowBox[{"Drop", "[", 
            RowBox[{"s", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"len2", "=", 
           RowBox[{"len2", "-", "1"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"iter", "=", 
           RowBox[{"iter", "+", "1"}]}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", "l"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5102396580294175`*^9, 3.5102396742153435`*^9}, {
   3.5102397320616517`*^9, 3.510239823540884*^9}, {3.5102400998326874`*^9, 
   3.510240102032813*^9}, {3.5102404420782623`*^9, 3.5102404454994583`*^9}, {
   3.510240528991234*^9, 3.510240540757907*^9}, {3.510240999305134*^9, 
   3.510241003574378*^9}, {3.5102416626660757`*^9, 3.5102416669563217`*^9}, 
   3.510241789298319*^9, {3.510242458956621*^9, 3.510242497856846*^9}, {
   3.5102427552675695`*^9, 3.5102428568543797`*^9}, {3.5102430099161344`*^9, 
   3.510243010049142*^9}, {3.510243050523457*^9, 3.510243059338961*^9}, {
   3.510243538675378*^9, 3.5102435603816195`*^9}, {3.5102443302126513`*^9, 
   3.510244337973095*^9}, {3.5102445484791355`*^9, 3.510244548841156*^9}, {
   3.510244778450289*^9, 3.510244855586701*^9}, {3.5102450844557915`*^9, 
   3.510245119110773*^9}, {3.51024529774199*^9, 3.5102453332270203`*^9}, {
   3.5102454700968485`*^9, 3.5102454701898537`*^9}, {3.5102455665543656`*^9, 
   3.510245641402647*^9}, {3.5102457099795694`*^9, 3.510245724207383*^9}, {
   3.510245846738391*^9, 3.5102458534337745`*^9}, {3.5102460433316355`*^9, 
   3.510246129024537*^9}, {3.51024617085793*^9, 3.510246235841647*^9}, {
   3.5102462886376667`*^9, 3.5102463047605886`*^9}, 3.5102465285843906`*^9, {
   3.510246644476019*^9, 3.5102467416715784`*^9}, 3.510246815150781*^9, {
   3.5102469886277037`*^9, 3.5102469892387385`*^9}, {3.510247251706751*^9, 
   3.5102474843020544`*^9}, {3.510247624943099*^9, 3.5102476382918625`*^9}, {
   3.5102476898418107`*^9, 3.510247692376956*^9}, {3.510247763103001*^9, 
   3.510247769834386*^9}, {3.510248399100378*^9, 3.510248403412625*^9}, {
   3.510249025779222*^9, 3.5102490264292593`*^9}, {3.510249193919839*^9, 
   3.510249200914239*^9}, {3.5102497658315506`*^9, 3.510249778703287*^9}, {
   3.510249855721692*^9, 3.5102498586028566`*^9}, {3.510250351548052*^9, 
   3.510250388666175*^9}, {3.5102504300775433`*^9, 3.510250432412677*^9}, {
   3.5102505229448547`*^9, 3.5102506609147463`*^9}, {3.5102507054642944`*^9, 
   3.5102507266085043`*^9}, 3.510250770625022*^9, {3.5102508314485006`*^9, 
   3.5102508336586266`*^9}, {3.510251053404196*^9, 3.510251065458885*^9}, {
   3.51025170089423*^9, 3.510251712054868*^9}, {3.5102517692861414`*^9, 
   3.510251806610276*^9}, {3.5102518770653067`*^9, 3.5102519513815565`*^9}, {
   3.510251996257124*^9, 3.510251999566313*^9}, {3.510252044388877*^9, 
   3.5102520456309476`*^9}, {3.510252077560774*^9, 3.5102520832350984`*^9}, {
   3.5102521263475647`*^9, 3.5102521430275183`*^9}, {3.5102522974943533`*^9, 
   3.510252299861489*^9}, {3.510252438252404*^9, 3.510252476967619*^9}, {
   3.5102525546920643`*^9, 3.510252583233697*^9}, {3.5102629560621867`*^9, 
   3.5102629649926977`*^9}, {3.5102633982924805`*^9, 3.510263423649931*^9}, {
   3.5102636341279697`*^9, 3.5102636470507092`*^9}, {3.5102646787407184`*^9, 
   3.510264678999733*^9}, {3.510266690176766*^9, 3.510266711415981*^9}, {
   3.5102681914306326`*^9, 3.5102682671409636`*^9}, {3.510268321568076*^9, 
   3.510268329886552*^9}, {3.510268409567109*^9, 3.5102684162844934`*^9}, {
   3.5102684903787317`*^9, 3.5102685004353065`*^9}, {3.510271871925145*^9, 
   3.510271880286623*^9}, 3.5102720700724783`*^9, {3.510273102242515*^9, 
   3.51027313030412*^9}, {3.5102780329535356`*^9, 3.5102780350296545`*^9}, {
   3.510278122821676*^9, 3.51027819020653*^9}, {3.5102782314358883`*^9, 
   3.510278534365215*^9}, {3.510279166743385*^9, 3.510279209422826*^9}, {
   3.5102793025121503`*^9, 3.5102793330368958`*^9}, {3.5102794436942253`*^9, 
   3.510279450744629*^9}, {3.5103080814222097`*^9, 3.510308084350377*^9}, {
   3.5103204468453703`*^9, 3.510320496249196*^9}, {3.510322403647293*^9, 
   3.510322405412394*^9}, {3.510401916555933*^9, 3.5104019213512073`*^9}, {
   3.5104071581219225`*^9, 3.5104071658283634`*^9}, {3.510482844308854*^9, 
   3.510482948187796*^9}, {3.510483034516734*^9, 3.510483086080683*^9}, {
   3.510533958999876*^9, 3.510534007416645*^9}, {3.5105340382324076`*^9, 
   3.510534056159433*^9}, {3.5105363981123853`*^9, 3.5105364102430787`*^9}, {
   3.510538942716928*^9, 3.5105389428589363`*^9}, {3.5105390856761045`*^9, 
   3.510539089006295*^9}, {3.5105391412622843`*^9, 3.5105391416833086`*^9}, {
   3.5105392075480757`*^9, 3.510539209759202*^9}, {3.5105396680674157`*^9, 
   3.510539668769456*^9}, {3.51053970136732*^9, 3.5105397020733604`*^9}, 
   3.510913469305554*^9, {3.5109136624436007`*^9, 3.510913681428687*^9}, {
   3.510913753154789*^9, 3.510913803138648*^9}, {3.510913869309433*^9, 
   3.5109138971080227`*^9}, {3.5109139652029176`*^9, 3.510913993586541*^9}, {
   3.5109140405742283`*^9, 3.510914172490774*^9}, {3.510914205969689*^9, 
   3.510914303951293*^9}, {3.5109152475622644`*^9, 3.510915251284477*^9}, {
   3.5109158602933106`*^9, 3.5109159816942544`*^9}, {3.510917304332905*^9, 
   3.5109174271989326`*^9}, {3.510917475339686*^9, 3.5109175307328544`*^9}, {
   3.5109175652798305`*^9, 3.510917597590678*^9}, {3.510921308283918*^9, 
   3.510921316692399*^9}, {3.510921880120625*^9, 3.5109219425951986`*^9}, {
   3.5109221368363085`*^9, 3.510922263039527*^9}, {3.524743439819913*^9, 
   3.5247434412559958`*^9}, {3.5247436670719113`*^9, 3.524743722032055*^9}, {
   3.52474507289732*^9, 3.524745122079133*^9}, {3.524745802817069*^9, 
   3.524745825841386*^9}, {3.5247461582654*^9, 3.5247461831128206`*^9}, {
   3.524746234376753*^9, 3.524746237855952*^9}, {3.524746628072271*^9, 
   3.5247466299363775`*^9}, {3.524747461744954*^9, 3.5247474632920427`*^9}, {
   3.524749186660614*^9, 3.524749194730075*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["reducer functions", "Subsection",
 CellChangeTimes->{{3.523465186075259*^9, 3.52346519535879*^9}, 
   3.5234652462206993`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"reducefile", "[", "name_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v", ",", "l", ",", "fin", ",", "len", ",", "ct", ",", 
       RowBox[{"fullReduce", "=", "False"}], ",", "temp"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"v", "=", 
       RowBox[{"Import", "[", "name", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"l", "=", 
       RowBox[{"{", "v", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"len", "=", 
       RowBox[{"Length", "[", "v", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ct", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"fin", "=", "False"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"!", "fin"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"l", ",", 
           RowBox[{"reducelist", "[", 
            RowBox[{
             RowBox[{"l", "[", 
              RowBox[{"[", 
               RowBox[{"Length", "[", "l", "]"}], "]"}], "]"}], ",", "False", 
             ",", "fullReduce"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"l", "[", 
              RowBox[{"[", 
               RowBox[{"Length", "[", "l", "]"}], "]"}], "]"}], "]"}], "<", 
            "len"}], "\[IndentingNewLine]", ",", 
           RowBox[{
            RowBox[{"len", "=", 
             RowBox[{"Length", "[", 
              RowBox[{"l", "[", 
               RowBox[{"[", 
                RowBox[{"Length", "[", "l", "]"}], "]"}], "]"}], "]"}]}], ";",
             "\[IndentingNewLine]", 
            RowBox[{"ct", "=", "1"}], ";"}], "\[IndentingNewLine]", ",", 
           RowBox[{
            RowBox[{"ct", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fin", "=", 
          RowBox[{"Or", "[", 
           RowBox[{
            RowBox[{"ct", "\[GreaterEqual]", " ", "8"}], ",", 
            RowBox[{"len", "\[LessEqual]", " ", "6"}]}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "at", " ", "end", " ", "get", " ", "rid", " ", "of", " ", "unneeded", 
        " ", "vertices"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"l", ",", 
        RowBox[{"reducelist", "[", 
         RowBox[{
          RowBox[{"l", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "l", "]"}], "]"}], "]"}], ",", "True", ",",
           "fullReduce"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"l", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"Apply", "[", 
      RowBox[{"plotlist", ",", "l", ",", 
       RowBox[{"{", "1", "}"}]}], "]"}], "*)"}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5137717959413605`*^9, 3.5137718165915413`*^9}, {
  3.5234652039862833`*^9, 3.523465204365305*^9}, {3.5234725940049686`*^9, 
  3.5234725960700865`*^9}, {3.52347264613095*^9, 3.523472648317075*^9}, {
  3.5247437472174954`*^9, 3.524743807104921*^9}, {3.524743848538291*^9, 
  3.524743937188361*^9}, {3.524744947753162*^9, 3.524744957772735*^9}, {
  3.524745041373517*^9, 3.5247450604596086`*^9}, {3.5247492083018513`*^9, 
  3.5247492148232245`*^9}, {3.5247492898335147`*^9, 3.5247492909815807`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"reduce", "[", "v_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"l", ",", "fin", ",", "len", ",", "ct", ",", 
       RowBox[{"fullReduce", "=", "False"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"l", "=", 
       RowBox[{"{", "v", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"len", "=", 
       RowBox[{"Length", "[", "v", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ct", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"fin", "=", "False"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"!", "fin"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"l", ",", 
           RowBox[{"reducelist", "[", 
            RowBox[{
             RowBox[{"l", "[", 
              RowBox[{"[", 
               RowBox[{"Length", "[", "l", "]"}], "]"}], "]"}], ",", "False", 
             ",", "fullReduce"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"l", "[", 
              RowBox[{"[", 
               RowBox[{"Length", "[", "l", "]"}], "]"}], "]"}], "]"}], "<", 
            "len"}], "\[IndentingNewLine]", ",", 
           RowBox[{
            RowBox[{"len", "=", 
             RowBox[{"Length", "[", 
              RowBox[{"l", "[", 
               RowBox[{"[", 
                RowBox[{"Length", "[", "l", "]"}], "]"}], "]"}], "]"}]}], ";",
             "\[IndentingNewLine]", 
            RowBox[{"ct", "=", "1"}], ";"}], "\[IndentingNewLine]", ",", 
           RowBox[{
            RowBox[{"ct", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"fin", "=", 
          RowBox[{"Or", "[", 
           RowBox[{
            RowBox[{"ct", "\[GreaterEqual]", " ", "8"}], ",", 
            RowBox[{"len", "\[LessEqual]", " ", "6"}]}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"Length", "[", 
          RowBox[{"l", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], "]"}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "at", " ", "end", " ", "get", " ", "rid", " ", "of", " ", "unneeded", 
        " ", "vertices"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"l", ",", 
        RowBox[{"reducelist", "[", 
         RowBox[{
          RowBox[{"l", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "l", "]"}], "]"}], "]"}], ",", "True", ",",
           "fullReduce"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"Length", "[", 
          RowBox[{"l", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], "]"}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"l", "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"Apply", "[", 
      RowBox[{"plotlist", ",", "l", ",", 
       RowBox[{"{", "1", "}"}]}], "]"}], "*)"}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5105365877452316`*^9, 3.5105366992146072`*^9}, {
   3.510536764218325*^9, 3.5105369383452845`*^9}, {3.510537422120955*^9, 
   3.510537534784399*^9}, {3.510537884102379*^9, 3.5105378844473987`*^9}, {
   3.510538068664935*^9, 3.510538227775036*^9}, {3.5105382688873873`*^9, 
   3.5105383061825204`*^9}, {3.51053851247832*^9, 3.5105385653763456`*^9}, {
   3.510538880320359*^9, 3.5105388817814426`*^9}, {3.5105397272688017`*^9, 
   3.5105397279208393`*^9}, {3.510540165177849*^9, 3.5105401671249604`*^9}, {
   3.510540245923467*^9, 3.510540246760515*^9}, {3.510914361119563*^9, 
   3.510914381960755*^9}, {3.510922599741785*^9, 3.5109226154936857`*^9}, {
   3.5109226523417935`*^9, 3.5109226985634375`*^9}, {3.5137714156786103`*^9, 
   3.51377142528516*^9}, {3.5234725567848396`*^9, 3.5234725599160185`*^9}, {
   3.523472657126579*^9, 3.523472658338648*^9}, {3.524743979676791*^9, 
   3.5247440587023115`*^9}, 3.5247443290847764`*^9, {3.524744578078018*^9, 
   3.524744593889922*^9}, {3.5247446342992334`*^9, 3.524744647665998*^9}, {
   3.524744780873617*^9, 3.524744789018083*^9}, {3.524744860712184*^9, 
   3.52474487795317*^9}, {3.5247449109340563`*^9, 3.524744933324337*^9}, {
   3.5247450232044773`*^9, 3.5247450322739964`*^9}, {3.5247451384340687`*^9, 
   3.5247451534189253`*^9}, {3.5247492206385574`*^9, 3.524749227044924*^9}, {
   3.52474929673691*^9, 3.5247492977259665`*^9}, {3.5248829413538*^9, 
   3.5248829417848244`*^9}, {3.524882989158534*^9, 3.5248829908236294`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Path Calculations", "Section",
 CellChangeTimes->{{3.5234655364432993`*^9, 3.523465539016446*^9}}],

Cell[CellGroupData[{

Cell["functions", "Subsection",
 CellChangeTimes->{{3.5234723488889484`*^9, 3.523472349831002*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "acnedge", " ", "takes", " ", "4", " ", "points", " ", "in", " ", "3", " ",
     "space", " ", "P1"}], ",", "P2", ",", "Q1", ",", 
   RowBox[{
    RowBox[{
    "Q2", " ", "and", " ", "\[IndentingNewLine]", "calculates", " ", "the", 
     " ", "average", " ", "crossing", " ", "number", " ", "between", " ", 
     "the", " ", "\[IndentingNewLine]", "line", " ", "segments", " ", "vv"}], 
    "=", 
    RowBox[{
     RowBox[{"P1P2", " ", "and", " ", "ww"}], "=", 
     RowBox[{
      RowBox[{
      "Q1Q2", " ", "using", " ", "the", " ", "gauss", " ", "integral", " ", 
       "as", " ", "described", " ", "in", " ", "\[IndentingNewLine]", 
       RowBox[{"http", ":"}]}], "//", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"en", ".", "wikipedia", ".", "org"}], "/", "wiki"}], "/", 
        "Average_crossing"}], "_number", "\[IndentingNewLine]", "except", " ",
        "with", " ", "a", " ", "constant", " ", "of", " ", 
       RowBox[{"1", "/", "2"}], "Pi", " ", "to", " ", "match", " ", "the", 
       " ", "results", " ", "of", " ", "knotplot"}]}]}]}]}], "*)"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5099231740474377`*^9, 3.5099233115483017`*^9}, {
  3.509924844853002*^9, 3.509924870834488*^9}, {3.5101477305686436`*^9, 
  3.510147758851261*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"acnedge", "[", "v_", "]"}], ":=", 
   RowBox[{"Quiet", "[", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "s", ",", "t", ",", "ss", ",", "tt", ",", "num", ",", "den", ",", 
        "res", ",", "result", ",", "p1", ",", "p2", ",", "q1", ",", "q2", ",",
         "del", ",", "vv", ",", "ww", ",", "dmin", ",", "path1", ",", "path2",
         ",", "meslen"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"meslen", "=", 
        RowBox[{"Length", "[", "$MessageList", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"result", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"p1", "=", 
        RowBox[{"v", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", 
       RowBox[{"p2", "=", 
        RowBox[{"v", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", 
       RowBox[{"q1", "=", 
        RowBox[{"v", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], ";", 
       RowBox[{"q2", "=", 
        RowBox[{"v", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vv", "=", 
        RowBox[{"p2", "-", "p1"}]}], ";", 
       RowBox[{"ww", "=", 
        RowBox[{"q2", "-", "q1"}]}], ";", 
       RowBox[{"del", "=", 
        RowBox[{"p1", "-", "q1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"path1", "=", 
        RowBox[{"p1", "+", 
         RowBox[{"s", "*", "vv"}]}]}], ";", 
       RowBox[{"path2", "=", 
        RowBox[{"q1", "+", 
         RowBox[{"t", "*", "ww"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"vv", ".", "ww"}], ")"}], "^", "2"}], "\[Equal]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"vv", ".", "vv"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"ww", ".", "ww"}], ")"}]}]}], "\[IndentingNewLine]", ",", 
         RowBox[{
          RowBox[{"ss", "=", 
           RowBox[{"tt", "=", "2"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"dmin", "=", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Norm", "[", "del", "]"}], "^", "2"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"del", ".", "vv"}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"Norm", "[", "vv", "]"}], ")"}]}]}], "]"}]}], ";"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{
          RowBox[{"ss", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"vv", ".", "ww"}], ")"}], "*", 
               RowBox[{"(", 
                RowBox[{"ww", ".", "del"}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"ww", ".", "ww"}], ")"}], "*", 
               RowBox[{"(", 
                RowBox[{"vv", ".", "del"}], ")"}]}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"vv", ".", "vv"}], ")"}], "*", 
               RowBox[{"(", 
                RowBox[{"ww", ".", "ww"}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"vv", ".", "ww"}], ")"}], "^", "2"}]}], ")"}]}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"tt", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"vv", ".", "vv"}], ")"}], "*", 
               RowBox[{"(", 
                RowBox[{"ww", ".", "del"}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"vv", ".", "ww"}], ")"}], "*", 
               RowBox[{"(", 
                RowBox[{"vv", ".", "del"}], ")"}]}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"vv", ".", "vv"}], ")"}], "*", 
               RowBox[{"(", 
                RowBox[{"ww", ".", "ww"}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"vv", ".", "ww"}], ")"}], "^", "2"}]}], ")"}]}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"dmin", "=", 
           RowBox[{"Norm", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"path1", "/.", 
               RowBox[{"s", "\[Rule]", "ss"}]}], ")"}], "-", 
             RowBox[{"(", 
              RowBox[{"path2", "/.", 
               RowBox[{"t", "\[Rule]", "tt"}]}], ")"}]}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"num", " ", "=", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{"Cross", "[", 
           RowBox[{"vv", ",", "ww"}], "]"}], ".", 
          RowBox[{"(", 
           RowBox[{"path1", "-", "path2"}], ")"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"den", "=", 
        RowBox[{
         RowBox[{"Norm", "[", 
          RowBox[{"(", 
           RowBox[{"path1", "-", "path2"}], ")"}], "]"}], "^", 
         RowBox[{"(", "3", ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"And", "[", 
          RowBox[{
           RowBox[{"dmin", "\[Equal]", "0"}], ",", 
           RowBox[{"0", "<", "ss", "<", "1"}], ",", 
           RowBox[{"0", "<", "tt", "<", "1"}]}], "]"}], "\[IndentingNewLine]",
          ",", 
         RowBox[{
          RowBox[{"Print", "[", "\"\<Intersection!\>\"", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"res", "=", "0"}], ";"}], "\[IndentingNewLine]", ",", 
         RowBox[{
          RowBox[{"res", "=", 
           RowBox[{
            RowBox[{"NIntegrate", "[", 
             RowBox[{
              RowBox[{"num", "/", "den"}], ",", 
              RowBox[{"{", 
               RowBox[{"s", ",", "0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
              RowBox[{"Exclusions", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{"ss", ",", "tt"}], "}"}], "}"}]}]}], "]"}], "/", 
            RowBox[{"(", 
             RowBox[{"2", "*", "Pi"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "$MessageList", "]"}], ">", "meslen"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"meslen", "=", 
              RowBox[{"Length", "[", "$MessageList", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"res", "=", 
              RowBox[{
               RowBox[{"NIntegrate", "[", 
                RowBox[{
                 RowBox[{"num", "/", "den"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"s", ",", "0", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
                 RowBox[{"Exclusions", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"ss", ",", "tt"}], "}"}], "}"}]}], ",", 
                 RowBox[{"MinRecursion", "\[Rule]", "3"}]}], "]"}], "/", 
               RowBox[{"(", 
                RowBox[{"2", "*", "Pi"}], ")"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "$MessageList", "]"}], ">", "meslen"}],
                ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"meslen", "=", 
                 RowBox[{"Length", "[", "$MessageList", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"res", "=", 
                 RowBox[{
                  RowBox[{"NIntegrate", "[", 
                   RowBox[{
                    RowBox[{"num", "/", "den"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"s", ",", "0", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
                    RowBox[{"Exclusions", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"ss", ",", "tt"}], "}"}], "}"}]}], ",", 
                    RowBox[{"MinRecursion", "\[Rule]", "6"}]}], "]"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"2", "*", "Pi"}], ")"}]}]}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"result", ",", "res"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "$MessageList", "]"}], ">", "meslen"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"result", ",", "1"}], "]"}], ";"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"result", ",", "0"}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", "res", "]"}], ">", "1"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"result", ",", "1"}], "]"}], ";"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"result", ",", "0"}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "result"}]}], "\[IndentingNewLine]", "]"}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.509727252476162*^9, 3.5097272731323433`*^9}, {
   3.5097274679944887`*^9, 3.50972750123039*^9}, {3.509727577331743*^9, 
   3.509727594643733*^9}, {3.509727896041972*^9, 3.5097279623007617`*^9}, {
   3.5097280080303774`*^9, 3.509728078319398*^9}, {3.509728143013098*^9, 
   3.5097281672984867`*^9}, {3.509728211844035*^9, 3.5097284269703393`*^9}, {
   3.509729022596407*^9, 3.5097291530078664`*^9}, {3.5097292280591593`*^9, 
   3.509729272678711*^9}, {3.509729421003195*^9, 3.5097294431154594`*^9}, {
   3.509731913875779*^9, 3.509731979472531*^9}, {3.509732102281555*^9, 
   3.5097321023785605`*^9}, {3.509732303026037*^9, 3.509732311383515*^9}, {
   3.509732345774482*^9, 3.5097323615373836`*^9}, {3.509732418249627*^9, 
   3.50973242686412*^9}, {3.5097325029184704`*^9, 3.509732531011077*^9}, {
   3.5097325989279613`*^9, 3.5097326116656904`*^9}, {3.509732746188384*^9, 
   3.5097327462363873`*^9}, {3.509733040300207*^9, 3.5097331675144825`*^9}, {
   3.5097332085148277`*^9, 3.5097333923073406`*^9}, {3.509733921425604*^9, 
   3.5097339407977123`*^9}, {3.509734187051797*^9, 3.5097342099731083`*^9}, {
   3.5097342556077185`*^9, 3.5097342649602532`*^9}, {3.5097343378524227`*^9, 
   3.509734383530035*^9}, {3.5097349900737276`*^9, 3.509735021152505*^9}, {
   3.5097354228034782`*^9, 3.509735433539092*^9}, {3.509735554273998*^9, 
   3.509735605702939*^9}, {3.5097356731217957`*^9, 3.509735674847894*^9}, {
   3.5097357448458977`*^9, 3.5097357634759636`*^9}, {3.5097963195960817`*^9, 
   3.5097963462856083`*^9}, {3.5097964167776403`*^9, 3.509796431446479*^9}, {
   3.5097968005475903`*^9, 3.509796800647596*^9}, {3.5097968512984934`*^9, 
   3.5097968726717157`*^9}, {3.5097972627600274`*^9, 3.509797266021214*^9}, {
   3.509797299730142*^9, 3.509797301946269*^9}, {3.5097973483739243`*^9, 
   3.5097974667636957`*^9}, {3.509797506840988*^9, 3.5097975095031404`*^9}, {
   3.509798281180278*^9, 3.509798291522869*^9}, {3.5099026735309815`*^9, 
   3.50990272734906*^9}, {3.509902849900069*^9, 3.5099029352389507`*^9}, {
   3.509902967869817*^9, 3.5099029996856365`*^9}, {3.5099032334220057`*^9, 
   3.5099033011188774`*^9}, {3.509903361745345*^9, 3.5099033798583813`*^9}, {
   3.509903433038423*^9, 3.509903440117828*^9}, {3.5099035725424023`*^9, 
   3.509903604373223*^9}, {3.5099037660674715`*^9, 3.5099037682045937`*^9}, {
   3.509923337990814*^9, 3.509923383629425*^9}, {3.5101040069943733`*^9, 
   3.5101040547431045`*^9}, {3.5101041359107466`*^9, 
   3.5101041364827795`*^9}, {3.510104183262455*^9, 3.510104198069302*^9}, {
   3.510104228412038*^9, 3.5101042571656823`*^9}, {3.5101042964239273`*^9, 
   3.510104324880555*^9}, {3.5101045395978365`*^9, 3.510104542128981*^9}, {
   3.510104995504913*^9, 3.5101050044714255`*^9}, {3.510105045510773*^9, 
   3.5101050877211876`*^9}, {3.5101051297165895`*^9, 3.51010513356981*^9}, {
   3.5101052004356346`*^9, 3.5101052426750503`*^9}, 3.5101053331942277`*^9, {
   3.510105873389125*^9, 3.5101058893090353`*^9}, {3.5101461702463984`*^9, 
   3.5101462027592583`*^9}, {3.5101463539239044`*^9, 
   3.5101463802084074`*^9}, {3.5101464585478888`*^9, 3.510146460183982*^9}, {
   3.510146616815941*^9, 3.5101466270815277`*^9}, {3.5101466647856846`*^9, 
   3.5101469697281265`*^9}, {3.5101470231051793`*^9, 3.510147045199443*^9}, {
   3.510147078227332*^9, 3.510147080129441*^9}, {3.5101471180696106`*^9, 
   3.5101471613550863`*^9}, {3.510147388813096*^9, 3.510147390719206*^9}, {
   3.510147582977202*^9, 3.510147601732275*^9}, {3.5101476531362147`*^9, 
   3.5101476957316513`*^9}, {3.5101477679827833`*^9, 
   3.5101478991022835`*^9}, {3.5101480862099853`*^9, 3.510148134529749*^9}, {
   3.5101484403502407`*^9, 3.510148501944764*^9}, {3.5101485685795755`*^9, 
   3.5101485789611692`*^9}, {3.5101490206544323`*^9, 
   3.5101491316977835`*^9}, {3.510149166268761*^9, 3.5101491664167695`*^9}, {
   3.5101493375115557`*^9, 3.5101493547465415`*^9}, {3.5101494765215063`*^9, 
   3.5101494883721848`*^9}, {3.510149565804613*^9, 3.5101495838736467`*^9}, {
   3.5101499065971055`*^9, 3.5101499266492524`*^9}, {3.51015004760017*^9, 
   3.5101501658599343`*^9}, {3.5101502637375326`*^9, 
   3.5101502799214582`*^9}, {3.510150530921815*^9, 3.5101505566682873`*^9}, {
   3.510150615020625*^9, 3.5101506332626686`*^9}, {3.5101507736316967`*^9, 
   3.5101507773139076`*^9}, {3.510151342104212*^9, 3.5101513740580397`*^9}, {
   3.512378734398667*^9, 3.5123787487314863`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "wriedge", " ", "is", " ", "the", " ", "same", " ", "as", " ", "acnedge", 
   " ", "except", " ", "the", " ", "sign", " ", "of", " ", "the", " ", 
   "crossings", " ", "are", " ", "preserved"}], "*)"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5099234039175854`*^9, 3.5099234235927105`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"wriedge", "[", "v_", "]"}], ":=", 
   RowBox[{"Quiet", "[", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "s", ",", "t", ",", "ss", ",", "tt", ",", "num", ",", "den", ",", 
        "res", ",", "result", ",", "p1", ",", "p2", ",", "q1", ",", "q2", ",",
         "del", ",", "vv", ",", "ww", ",", "dmin", ",", "path1", ",", "path2",
         ",", "meslen"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"meslen", "=", 
        RowBox[{"Length", "[", "$MessageList", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"result", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"p1", "=", 
        RowBox[{"v", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", 
       RowBox[{"p2", "=", 
        RowBox[{"v", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", 
       RowBox[{"q1", "=", 
        RowBox[{"v", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], ";", 
       RowBox[{"q2", "=", 
        RowBox[{"v", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vv", "=", 
        RowBox[{"p2", "-", "p1"}]}], ";", 
       RowBox[{"ww", "=", 
        RowBox[{"q2", "-", "q1"}]}], ";", 
       RowBox[{"del", "=", 
        RowBox[{"p1", "-", "q1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"path1", "=", 
        RowBox[{"p1", "+", 
         RowBox[{"s", "*", "vv"}]}]}], ";", 
       RowBox[{"path2", "=", 
        RowBox[{"q1", "+", 
         RowBox[{"t", "*", "ww"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"vv", ".", "ww"}], ")"}], "^", "2"}], "\[Equal]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"vv", ".", "vv"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"ww", ".", "ww"}], ")"}]}]}], "\[IndentingNewLine]", ",", 
         RowBox[{
          RowBox[{"ss", "=", 
           RowBox[{"tt", "=", "2"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"dmin", "=", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Norm", "[", "del", "]"}], "^", "2"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"del", ".", "vv"}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"Norm", "[", "vv", "]"}], ")"}]}]}], "]"}]}], ";"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{
          RowBox[{"ss", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"vv", ".", "ww"}], ")"}], "*", 
               RowBox[{"(", 
                RowBox[{"ww", ".", "del"}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"ww", ".", "ww"}], ")"}], "*", 
               RowBox[{"(", 
                RowBox[{"vv", ".", "del"}], ")"}]}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"vv", ".", "vv"}], ")"}], "*", 
               RowBox[{"(", 
                RowBox[{"ww", ".", "ww"}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"vv", ".", "ww"}], ")"}], "^", "2"}]}], ")"}]}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"tt", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"vv", ".", "vv"}], ")"}], "*", 
               RowBox[{"(", 
                RowBox[{"ww", ".", "del"}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"vv", ".", "ww"}], ")"}], "*", 
               RowBox[{"(", 
                RowBox[{"vv", ".", "del"}], ")"}]}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"vv", ".", "vv"}], ")"}], "*", 
               RowBox[{"(", 
                RowBox[{"ww", ".", "ww"}], ")"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"vv", ".", "ww"}], ")"}], "^", "2"}]}], ")"}]}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"dmin", "=", 
           RowBox[{"Norm", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"path1", "/.", 
               RowBox[{"s", "\[Rule]", "ss"}]}], ")"}], "-", 
             RowBox[{"(", 
              RowBox[{"path2", "/.", 
               RowBox[{"t", "\[Rule]", "tt"}]}], ")"}]}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"num", " ", "=", " ", 
        RowBox[{
         RowBox[{"Cross", "[", 
          RowBox[{"vv", ",", "ww"}], "]"}], ".", 
         RowBox[{"(", 
          RowBox[{"path1", "-", "path2"}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"den", "=", 
        RowBox[{
         RowBox[{"Norm", "[", 
          RowBox[{"(", 
           RowBox[{"path1", "-", "path2"}], ")"}], "]"}], "^", 
         RowBox[{"(", "3", ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"And", "[", 
          RowBox[{
           RowBox[{"dmin", "\[Equal]", "0"}], ",", 
           RowBox[{"0", "<", "ss", "<", "1"}], ",", 
           RowBox[{"0", "<", "tt", "<", "1"}]}], "]"}], "\[IndentingNewLine]",
          ",", 
         RowBox[{
          RowBox[{"Print", "[", "\"\<Intersection!\>\"", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"res", "=", "0"}], ";"}], "\[IndentingNewLine]", ",", 
         RowBox[{
          RowBox[{"res", "=", 
           RowBox[{
            RowBox[{"NIntegrate", "[", 
             RowBox[{
              RowBox[{"num", "/", "den"}], ",", 
              RowBox[{"{", 
               RowBox[{"s", ",", "0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
              RowBox[{"Exclusions", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{"ss", ",", "tt"}], "}"}], "}"}]}]}], "]"}], "/", 
            RowBox[{"(", 
             RowBox[{"2", "*", "Pi"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "$MessageList", "]"}], ">", "meslen"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"meslen", "=", 
              RowBox[{"Length", "[", "$MessageList", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"res", "=", 
              RowBox[{
               RowBox[{"NIntegrate", "[", 
                RowBox[{
                 RowBox[{"num", "/", "den"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"s", ",", "0", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
                 RowBox[{"Exclusions", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"ss", ",", "tt"}], "}"}], "}"}]}], ",", 
                 RowBox[{"MinRecursion", "\[Rule]", "3"}]}], "]"}], "/", 
               RowBox[{"(", 
                RowBox[{"2", "*", "Pi"}], ")"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "$MessageList", "]"}], ">", "meslen"}],
                ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"meslen", "=", 
                 RowBox[{"Length", "[", "$MessageList", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"res", "=", 
                 RowBox[{
                  RowBox[{"NIntegrate", "[", 
                   RowBox[{
                    RowBox[{"num", "/", "den"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"s", ",", "0", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
                    RowBox[{"Exclusions", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"ss", ",", "tt"}], "}"}], "}"}]}], ",", 
                    RowBox[{"MinRecursion", "\[Rule]", "6"}]}], "]"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"2", "*", "Pi"}], ")"}]}]}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"result", ",", "res"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "$MessageList", "]"}], ">", "meslen"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"result", ",", "1"}], "]"}], ";"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"result", ",", "0"}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", "res", "]"}], ">", "1"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"result", ",", "1"}], "]"}], ";"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"result", ",", "0"}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "result"}]}], "\[IndentingNewLine]", "]"}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5097974960323696`*^9, 3.5097974971244326`*^9}, {
   3.509798505168089*^9, 3.509798507445219*^9}, {3.5101479683212423`*^9, 
   3.5101479979939394`*^9}, {3.5101508139420023`*^9, 
   3.5101508411975613`*^9}, {3.5112818050356894`*^9, 
   3.5112818306481543`*^9}, {3.511281900048124*^9, 3.5112819183081684`*^9}, {
   3.511282067237686*^9, 3.511282082021532*^9}, {3.51128221765329*^9, 
   3.5112822254817376`*^9}, {3.5112833120108833`*^9, 3.511283330996969*^9}, {
   3.5112835304653783`*^9, 3.5112835575009246`*^9}, {3.5112836140031567`*^9, 
   3.5112836156662517`*^9}, {3.511283651518302*^9, 3.5112836601397953`*^9}, {
   3.5112837412524347`*^9, 3.5112837439775906`*^9}, {3.511284913843503*^9, 
   3.5112849200198565`*^9}, {3.5112849697346997`*^9, 
   3.5112849979493136`*^9}, {3.511285303059765*^9, 3.511285317281578*^9}, {
   3.5112862388262873`*^9, 3.51128628484592*^9}, {3.511286513504998*^9, 
   3.511286518162265*^9}, {3.511286571174297*^9, 3.5112865737414436`*^9}, {
   3.5112866656597013`*^9, 3.511286713650446*^9}, {3.5112872016513577`*^9, 
   3.5112872126239853`*^9}, {3.5112876064305105`*^9, 3.511287650625038*^9}, {
   3.5112876848509955`*^9, 3.511287686525091*^9}, {3.511287772670018*^9, 
   3.511287797133418*^9}, {3.5112882143062787`*^9, 3.5112882286030965`*^9}, {
   3.5112911872691307`*^9, 3.5112911945255456`*^9}, {3.511291865592929*^9, 
   3.5112918676960487`*^9}, {3.511292247504773*^9, 3.5112922533071046`*^9}, {
   3.5112923067191596`*^9, 3.511292306809165*^9}, 3.511359011627733*^9, {
   3.51136400975161*^9, 3.511364009863616*^9}, {3.5114388715039043`*^9, 
   3.51143888751182*^9}, {3.511439715029151*^9, 3.511439736738393*^9}, {
   3.5114397704653215`*^9, 3.5114397942886844`*^9}, {3.5114401969917173`*^9, 
   3.511440216057808*^9}, {3.5114403575439005`*^9, 3.5114403679754972`*^9}, {
   3.5123764879431767`*^9, 3.5123764884572062`*^9}, {3.51237653240972*^9, 
   3.5123765353628893`*^9}, {3.5123766078400345`*^9, 
   3.5123767941326895`*^9}, {3.51237750256621*^9, 3.512377535483093*^9}, {
   3.512377658482128*^9, 3.5123778907204113`*^9}, 3.51237849913321*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "this", " ", "takes", " ", "a", " ", "list", " ", "of", " ", "any", " ", 
   "number", " ", "of", " ", "points", " ", "in", " ", "three", " ", "space", 
   " ", "and", " ", "calculates", " ", "acnedge", " ", "on", " ", "all", " ", 
   "pairs", " ", "of", " ", "segments"}], "*)"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5099234377155185`*^9, 3.509923470002365*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"acn", "[", "v_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "c", ",", "i", ",", "j", ",", "del", ",", "mod", ",", "result", ",", 
        "flag", ",", "slowcount", ",", "minslow"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"c", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"mod", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"flag", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"slowcount", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"minslow", "=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"result", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "3"}], ",", 
         RowBox[{"j", "\[LessEqual]", 
          RowBox[{
           RowBox[{"Length", "[", "v", "]"}], "-", "2"}]}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"del", "=", 
           RowBox[{"acnedge", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"v", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"v", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"v", "[", 
               RowBox[{"[", "j", "]"}], "]"}], ",", 
              RowBox[{"v", "[", 
               RowBox[{"[", 
                RowBox[{"j", "+", "1"}], "]"}], "]"}]}], "}"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"del", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ">", "0"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"\"\<Slow Conv at 1 \>\"", ",", "j"}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"slowcount", "++"}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Abs", "[", 
                 RowBox[{"del", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}], "<", "minslow"}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{
                RowBox[{"minslow", "=", 
                 RowBox[{"Abs", "[", 
                  RowBox[{"del", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"mod", "=", 
              RowBox[{"mod", "+", 
               RowBox[{"del", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"del", "[", 
              RowBox[{"[", "3", "]"}], "]"}], ">", "0"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"\"\<Bad results at 1 \>\"", ",", "j"}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"flag", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"c", "=", " ", 
           RowBox[{"c", "+", 
            RowBox[{"del", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "2"}], ",", 
         RowBox[{"i", "\[LessEqual]", " ", 
          RowBox[{
           RowBox[{"Length", "[", "v", "]"}], "-", "3"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", 
             RowBox[{"i", "+", "2"}]}], ",", 
            RowBox[{"j", "\[LessEqual]", 
             RowBox[{
              RowBox[{"Length", "[", "v", "]"}], "-", "1"}]}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"del", "=", 
              RowBox[{"acnedge", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"v", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"v", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", 
                 RowBox[{"v", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], ",", 
                 RowBox[{"v", "[", 
                  RowBox[{"[", 
                   RowBox[{"j", "+", "1"}], "]"}], "]"}]}], "}"}], "]"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"del", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ">", "0"}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{
                RowBox[{"Print", "[", 
                 RowBox[{
                 "\"\<Slow Conv at \>\"", ",", "i", ",", "\"\< \>\"", ",", 
                  "j"}], "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"slowcount", "++"}], ";", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Abs", "[", 
                    RowBox[{"del", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "<", "minslow"}], 
                  "\[IndentingNewLine]", ",", 
                  RowBox[{
                   RowBox[{"minslow", "=", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"del", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}]}], 
                 "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"mod", "=", 
                 RowBox[{"mod", "+", 
                  RowBox[{"del", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"del", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ">", "0"}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{
                RowBox[{"Print", "[", 
                 RowBox[{
                 "\"\<Bad results at \>\"", ",", "i", ",", "\"\< \>\"", ",", 
                  "j"}], "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"flag", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}],
              ";", "\[IndentingNewLine]", 
             RowBox[{"c", "=", " ", 
              RowBox[{"c", "+", 
               RowBox[{"del", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"result", ",", "c"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"result", ",", 
         RowBox[{"c", "-", "mod"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"result", ",", "slowcount"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"result", ",", "minslow"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"result", ",", "flag"}], "]"}], ";", "\[IndentingNewLine]", 
       "result"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.509729447866731*^9, 3.5097295684026256`*^9}, {
   3.509729755431323*^9, 3.5097299690225396`*^9}, {3.5097300082367826`*^9, 
   3.509730009310844*^9}, 3.5097300467069826`*^9, {3.50973008267104*^9, 
   3.5097300941666975`*^9}, {3.5097301383552246`*^9, 3.509730141644413*^9}, 
   3.5097301827707653`*^9, {3.5097302629993544`*^9, 3.5097303557046566`*^9}, {
   3.5097311241716104`*^9, 3.5097311633168497`*^9}, {3.5097313962571726`*^9, 
   3.50973139637418*^9}, {3.5097314683652973`*^9, 3.5097314684723034`*^9}, {
   3.5097971251511564`*^9, 3.5097971359487743`*^9}, {3.5097980109188194`*^9, 
   3.509798022484481*^9}, {3.5097980644048786`*^9, 3.509798121105122*^9}, {
   3.5097984380582504`*^9, 3.509798445531678*^9}, {3.5099031371274977`*^9, 
   3.5099031478841133`*^9}, {3.5099032004131174`*^9, 
   3.5099032004631205`*^9}, {3.509903327867408*^9, 3.5099033295005007`*^9}, {
   3.509903450241407*^9, 3.50990345448765*^9}, {3.509903798812344*^9, 
   3.5099037991183615`*^9}, {3.509904322490297*^9, 3.509904332632877*^9}, {
   3.50992022182358*^9, 3.509920224865754*^9}, 3.5099204707868195`*^9, {
   3.509921705071417*^9, 3.5099217122718287`*^9}, {3.509921786005046*^9, 
   3.5099217869961023`*^9}, {3.509923579325618*^9, 3.5099235798016453`*^9}, {
   3.5099240256181445`*^9, 3.50992403218052*^9}, {3.5101496883306212`*^9, 
   3.5101496883536224`*^9}, {3.5101497879773207`*^9, 
   3.5101497895914135`*^9}, {3.5101503098561707`*^9, 3.510150311782281*^9}, {
   3.510150700277501*^9, 3.5101507017655864`*^9}, {3.5109607596596627`*^9, 
   3.5109608439084816`*^9}, {3.5109610742376556`*^9, 
   3.5109610742746577`*^9}, {3.5112822005043087`*^9, 
   3.5112822006063147`*^9}, {3.512378658962352*^9, 3.512378701270772*^9}, {
   3.512378862121972*^9, 3.5123788696344013`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "similar", " ", "to", " ", "acn", " ", "except", " ", "for", " ", 
   "writhe"}], "*)"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5099235422354965`*^9, 3.509923556386306*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"wri", "[", "v_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "c", ",", "i", ",", "j", ",", "del", ",", "mod", ",", "result", ",", 
       "flag", ",", "slowcount", ",", "minslow"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"c", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"mod", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"flag", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"slowcount", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"minslow", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"result", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "3"}], ",", 
        RowBox[{"j", "\[LessEqual]", 
         RowBox[{
          RowBox[{"Length", "[", "v", "]"}], "-", "2"}]}], ",", 
        RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"del", "=", 
          RowBox[{"wriedge", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"v", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"v", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"v", "[", 
              RowBox[{"[", "j", "]"}], "]"}], ",", 
             RowBox[{"v", "[", 
              RowBox[{"[", 
               RowBox[{"j", "+", "1"}], "]"}], "]"}]}], "}"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"del", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ">", "0"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"\"\<Slow Conv at 1 \>\"", ",", "j"}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"slowcount", "++"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{"del", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "<", "minslow"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{
               RowBox[{"minslow", "=", 
                RowBox[{"Abs", "[", 
                 RowBox[{"del", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"mod", "=", 
             RowBox[{"mod", "+", 
              RowBox[{"del", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"del", "[", 
             RowBox[{"[", "3", "]"}], "]"}], ">", "0"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"\"\<Bad results at 1 \>\"", ",", "j"}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"flag", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"c", "=", " ", 
          RowBox[{"c", "+", 
           RowBox[{"del", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "2"}], ",", 
        RowBox[{"i", "\[LessEqual]", " ", 
         RowBox[{
          RowBox[{"Length", "[", "v", "]"}], "-", "3"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", 
            RowBox[{"i", "+", "2"}]}], ",", 
           RowBox[{"j", "\[LessEqual]", 
            RowBox[{
             RowBox[{"Length", "[", "v", "]"}], "-", "1"}]}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"del", "=", 
             RowBox[{"wriedge", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"v", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"v", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", 
                RowBox[{"v", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], ",", 
                RowBox[{"v", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", "+", "1"}], "]"}], "]"}]}], "}"}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"del", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ">", "0"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{
               RowBox[{"Print", "[", 
                RowBox[{
                "\"\<Slow Conv at \>\"", ",", "i", ",", "\"\< \>\"", ",", 
                 "j"}], "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"slowcount", "++"}], ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Abs", "[", 
                   RowBox[{"del", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "<", "minslow"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{
                  RowBox[{"minslow", "=", 
                   RowBox[{"Abs", "[", 
                    RowBox[{"del", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}]}], 
                "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"mod", "=", 
                RowBox[{"mod", "+", 
                 RowBox[{"del", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"del", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ">", "0"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{
               RowBox[{"Print", "[", 
                RowBox[{
                "\"\<Bad results at \>\"", ",", "i", ",", "\"\< \>\"", ",", 
                 "j"}], "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"flag", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"c", "=", " ", 
             RowBox[{"c", "+", 
              RowBox[{"del", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"result", ",", "c"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"result", ",", 
        RowBox[{"c", "-", "mod"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"result", ",", "slowcount"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"result", ",", "minslow"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"result", ",", "flag"}], "]"}], ";", "\[IndentingNewLine]", 
      "result"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQvcPyUHCG2ivHE2fLQ0A0R/iqYyB6y6XZJ0H0uUAV
7TlAOvHVZhMQLTHTqQpEt2SbVYNo5hNuVkuA9I67obYg+sRWlw8gWq+x4yOI
bvlx5t5SIP37+h0wnSAlKbUMSBvPuQ2mXcIzj4mov3LsOTURTFs9nRK1QOOV
o05SYCyI3vfvZDmI7ltwGkwvev/WxlbzlWNOykcwzf/k2g47ID0r4cpOEP3P
iuNMEpBmWt5/H0QzpMW8BdF6bWt/gOjwXTf/gugcndlMyUB6st9L81QgPT2H
wRpEM9le+xas/cpR6d71HyBaYcch9xAgvV1c0QNEt3VG+4LoW2lHAkF0bcic
UBDdva4rB0Tzhm8pAtE55+9Vg+gTM3lbQbTE4/QuEH1GvmkmiGbxuA2m1518
thtEi/zl3guiAW7owY4=
  "]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "new", " ", "method", " ", "to", " ", "compute", " ", "acn", " ", "and", 
    " ", "writhe"}], " ", "-", " ", 
   RowBox[{
    RowBox[{"May", "/", "June"}], " ", "2012"}], " ", "-", " ", 
   RowBox[{"A", ".", " ", "Montemayor"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.548011233796875*^9, 3.548011256578125*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getangle", "[", 
   RowBox[{"{", 
    RowBox[{"p1_", ",", "p2_", ",", "p3_"}], "}"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"n1", ",", "n2", ",", "ang"}], "\[IndentingNewLine]", "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n1", "=", 
      RowBox[{"Normalize", "[", 
       RowBox[{"Cross", "[", 
        RowBox[{"p1", ",", "p2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"n2", "=", 
      RowBox[{"Normalize", "[", 
       RowBox[{"Cross", "[", 
        RowBox[{"p2", ",", "p3"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ang", "=", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"n1", ".", "n2"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "ang", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5449084749212275`*^9, 3.544908659866805*^9}, {
  3.544909219326805*^9, 3.5449092219769564`*^9}, {3.544910197739767*^9, 
  3.54491020846238*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getarea", "[", 
   RowBox[{"a1_", ",", "a2_", ",", "b1_", ",", "b2_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"per", ",", "list", ",", 
      RowBox[{"ang", "=", 
       RowBox[{"{", "}"}]}], ",", "ind", ",", "cen", ",", "natest", ",", 
      "nctest", ",", "angtest", ",", "sign", ",", "na", ",", "nb", ",", 
      "vang"}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"na", "=", 
      RowBox[{"Normalize", "[", 
       RowBox[{"a2", "-", "a1"}], "]"}]}], ";", 
     RowBox[{"nb", "=", 
      RowBox[{"Normalize", "[", 
       RowBox[{"b2", "-", "b1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"vang", "=", 
      RowBox[{"ArcCos", "[", 
       RowBox[{"na", ".", "nb"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"vang", "\[Equal]", "0"}], "||", 
        RowBox[{"vang", "\[Equal]", "Pi"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Return", "[", "0", "]"}], ";"}], "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"cen", "=", 
          RowBox[{"getcenter", "[", 
           RowBox[{"a1", ",", "a2", ",", "b1", ",", "b2"}], "]"}]}], ";"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"natest", "=", 
         RowBox[{"Normalize", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"b1", "+", "b2"}], ")"}], "/", "2"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"a1", "+", "a2"}], ")"}], "/", "2"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"nctest", "=", 
         RowBox[{"Cross", "[", 
          RowBox[{
           RowBox[{"Normalize", "[", 
            RowBox[{"a2", "-", "a1"}], "]"}], ",", 
           RowBox[{"Normalize", "[", 
            RowBox[{"b2", "-", "b1"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"angtest", "=", 
         RowBox[{"ArcCos", "[", 
          RowBox[{"natest", ".", "nctest"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"sign", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"0", "\[LessEqual]", "angtest", "\[LessEqual]", 
            RowBox[{"Pi", "/", "2"}]}], ",", "1", ",", 
           RowBox[{"-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"per", "=", 
           RowBox[{"Cycles", "[", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"2", ",", "3", ",", "4", ",", "1"}], "}"}], "}"}], 
            "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"list", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"b1", "-", "a1"}], ",", 
           RowBox[{"b2", "-", "a1"}], ",", 
           RowBox[{"b2", "-", "a2"}], ",", 
           RowBox[{"b1", "-", "a2"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ang", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"getangle", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"list", "[", 
               RowBox[{"[", 
                RowBox[{"1", "+", "i"}], "]"}], "]"}], ",", 
              RowBox[{"list", "[", 
               RowBox[{"[", 
                RowBox[{"1", "+", 
                 RowBox[{"Mod", "[", 
                  RowBox[{
                   RowBox[{"i", "+", "1"}], ",", "4"}], "]"}]}], "]"}], "]"}],
               ",", 
              RowBox[{"list", "[", 
               RowBox[{"[", 
                RowBox[{"1", "+", 
                 RowBox[{"Mod", "[", 
                  RowBox[{
                   RowBox[{"i", "+", "2"}], ",", "4"}], "]"}]}], "]"}], 
               "]"}]}], "}"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "3"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"ind", "=", "1"}], ",", 
            RowBox[{"ind", "\[LessEqual]", "4"}], ",", 
            RowBox[{"ind", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"ang", ",", 
               RowBox[{"getangle", "[", 
                RowBox[{"Most", "[", "list", "]"}], "]"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"list", "=", 
              RowBox[{"Permute", "[", 
               RowBox[{"list", ",", "per"}], "]"}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"sign", "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Total", "[", "ang", "]"}], "-", 
             RowBox[{"2", "Pi"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"4", "Pi"}], ")"}]}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.544908804203061*^9, 3.5449088347508082`*^9}, {
   3.544909003342451*^9, 3.544909007752703*^9}, {3.544909052293251*^9, 
   3.5449090622798223`*^9}, {3.5449092436451955`*^9, 3.544909277276119*^9}, 
   3.5449097906324816`*^9, {3.5449102277904854`*^9, 3.5449102311656785`*^9}, {
   3.5449103817152896`*^9, 3.5449106207529616`*^9}, {3.544911372198942*^9, 
   3.5449113816344814`*^9}, {3.5449117644183755`*^9, 3.54491179072688*^9}, {
   3.5449122353383107`*^9, 3.544912454602852*^9}, {3.544912559738865*^9, 
   3.544912562048998*^9}, {3.544912628314788*^9, 3.5449126330480585`*^9}, {
   3.54491328678345*^9, 3.5449132998771987`*^9}, {3.5449140480289907`*^9, 
   3.5449140727484045`*^9}, {3.5449144170830994`*^9, 3.544914418388174*^9}, {
   3.545040988521837*^9, 3.545041095598962*^9}, {3.545041132373065*^9, 
   3.5450411501820836`*^9}, {3.545041259005308*^9, 3.545041264687633*^9}, {
   3.5450412989655933`*^9, 3.545041299057599*^9}, {3.545041330223381*^9, 
   3.5450413581469784`*^9}, {3.5450414337983055`*^9, 3.54504147146446*^9}, {
   3.5450415390483255`*^9, 3.5450415407274218`*^9}, {3.5450416139286084`*^9, 
   3.545041614519642*^9}, {3.545041705541848*^9, 3.545041705692857*^9}, {
   3.545041748163286*^9, 3.545041904061203*^9}, {3.546043700813179*^9, 
   3.5460437023812685`*^9}, {3.547940871068878*^9, 3.547940872887982*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"wriAndAcn", "[", "v_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"wri", ",", "acn", ",", "areas", ",", "len"}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"len", "=", 
      RowBox[{"Length", "[", "v", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"len", "\[LessEqual]", "4"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Return", "[", "0", "]"}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"areas", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"2", "*", 
         RowBox[{"getarea", "[", 
          RowBox[{
           RowBox[{"v", "[", 
            RowBox[{"[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"v", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], "]"}], "]"}], ",", 
           RowBox[{"v", "[", 
            RowBox[{"[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"v", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], "]"}], "]"}]}], 
          "]"}]}], "&"}], "/@", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[NotEqual]", "1"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"i", ",", "#"}], "}"}], "&"}], ")"}], "/@", 
              RowBox[{"Range", "[", 
               RowBox[{
                RowBox[{"i", "+", "2"}], ",", 
                RowBox[{"len", "-", "1"}]}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"i", ",", "#"}], "}"}], "&"}], ")"}], "/@", 
              RowBox[{"Range", "[", 
               RowBox[{"3", ",", 
                RowBox[{"len", "-", "2"}]}], "]"}]}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{
              RowBox[{"Length", "[", "v", "]"}], "-", "3"}]}], "}"}]}], "]"}],
          ",", "1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wri", "=", 
      RowBox[{"Total", "[", "areas", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"acn", "=", 
      RowBox[{"Total", "[", 
       RowBox[{"Abs", "[", "areas", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"wri", ",", "acn"}], "}"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQfUs5+aVG/ivHdS/PvgLR6Ys83oPoA9cDv4JoG5ef
HJpAelHPe2UQ7XKF2xxEW7FrW4JoT7UTSSD6wd5TYHpS2NfNILqwtHsLiM5P
nnsRRH9ZnH8JREe4aN0E0Sl5PbdAtMocqfsgelvU0Qcg2ov7DrMWiG8+mwNE
G0xxkQbRdlItYFqrhNcERN8IkDID01E8NiDa7M5DFxBtk20YDaJnCU+LA9HH
LR+VguiSP1VNYPHDDJPB6rq7poHo98L3ZoPob5M3zgHL56UuA9EiSwxWgmie
+Y1bQfQWofodIFq22n8PiC6b+usIiAYAjHeWxw==
  "]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Takes", " ", "a", " ", "list", " ", "of", " ", "3", " ", "points", " ", 
   "in", " ", "3", " ", "space", " ", 
   RowBox[{"(", 
    RowBox[{"p1", ",", "p2", ",", "p3"}], ")"}], " ", "and", " ", 
   "calculates", " ", "the", " ", "angle", " ", 
   RowBox[{"(", 
    RowBox[{"in", " ", "radians"}], ")"}], " ", "between", " ", "the", " ", 
   "lines", " ", "they", " ", "define", " ", 
   RowBox[{"(", 
    RowBox[{"P1P2", " ", "and", " ", "P2P3"}], ")"}]}], "*)"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.509923755160675*^9, 3.509923771869631*^9}, {
  3.5099238048255157`*^9, 3.5099238520302157`*^9}, {3.509924483240319*^9, 
  3.5099244855534515`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"curvEdge", "[", "v_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v1", ",", "v2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"v1", "=", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "-", 
        RowBox[{"v", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ";", 
      RowBox[{"v2", "=", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "-", 
        RowBox[{"v", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ArcCos", "[", 
       RowBox[{
        RowBox[{"v1", ".", "v2"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Norm", "[", "v1", "]"}], "*", 
          RowBox[{"Norm", "[", "v2", "]"}]}], ")"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.509920181633281*^9, 3.509920194189999*^9}, {
   3.5099202683722425`*^9, 3.509920292339613*^9}, 3.509920324847472*^9, {
   3.509920382301759*^9, 3.5099204267082987`*^9}, {3.509921136406891*^9, 
   3.509921138645019*^9}, {3.509921935101574*^9, 3.509921958392906*^9}, {
   3.509922000182296*^9, 3.5099220141720963`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Given", " ", "a", " ", "list", " ", "of", " ", "points", " ", "in", " ", 
   "3", " ", "space", " ", "sums", " ", "the", " ", "angle", " ", 
   RowBox[{"(", 
    RowBox[{"in", " ", "radians"}], ")"}], " ", "between", " ", "every", " ", 
   "segment"}], "*)"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.509924121571633*^9, 3.509924174894683*^9}, {
  3.509924487351554*^9, 3.5099244901617146`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"curv", "[", "v_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", ",", "del", ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"c", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "<", 
         RowBox[{
          RowBox[{"Length", "[", "v", "]"}], "-", "1"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"del", "=", 
          RowBox[{"curvEdge", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"v", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"v", "[", 
              RowBox[{"[", 
               RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", 
             RowBox[{"v", "[", 
              RowBox[{"[", 
               RowBox[{"i", "+", "2"}], "]"}], "]"}]}], "}"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"c", "=", " ", 
          RowBox[{"c", "+", "del"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"c", "=", 
       RowBox[{"c", "+", 
        RowBox[{"curvEdge", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"v", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"Length", "[", "v", "]"}], "-", "1"}], "]"}], "]"}], 
           ",", 
           RowBox[{"v", "[", 
            RowBox[{"[", 
             RowBox[{"Length", "[", "v", "]"}], "]"}], "]"}], ",", 
           RowBox[{"v", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "c", "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.509920436711871*^9, 3.509920449667612*^9}, {
  3.509920484971631*^9, 3.509920555399659*^9}, {3.509921031048865*^9, 
  3.509921047071781*^9}, {3.5099211543329163`*^9, 3.509921159674222*^9}, {
  3.50992120859902*^9, 3.50992121226523*^9}, {3.5099212688504667`*^9, 
  3.50992126890547*^9}, {3.5101507198556213`*^9, 3.510150721267702*^9}, {
  3.512378963083747*^9, 3.5123789644248233`*^9}, {3.5123790017659593`*^9, 
  3.512379002001973*^9}, {3.5431006722505827`*^9, 3.5431007059525104`*^9}, {
  3.5431008179169145`*^9, 3.5431008190209775`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Takes", " ", "a", " ", "list", " ", "of", " ", "4", " ", "points", " ", 
   "in", " ", "3", " ", "space", " ", 
   RowBox[{"(", 
    RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4"}], ")"}], " ", "and", " ", 
   "calculates", " ", "the", " ", "angle", " ", 
   RowBox[{"(", 
    RowBox[{"in", " ", "radians"}], ")"}], " ", "between", " ", "the", " ", 
   "planes", " ", "they", " ", "define", " ", 
   RowBox[{"(", 
    RowBox[{"p1p2p3", ",", "p2p3p4"}], ")"}]}], "*)"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.509924188755475*^9, 3.509924246919802*^9}, {
  3.509924474026792*^9, 3.509924476287921*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"torsEdge", "[", "v_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v1", ",", "v2", ",", "v3", ",", "n1", ",", "n2", ",", "ang"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"v1", "=", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "-", 
        RowBox[{"v", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ";", 
      RowBox[{"v2", "=", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "-", 
        RowBox[{"v", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]}], ";", 
      RowBox[{"v3", "=", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "-", 
        RowBox[{"v", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"n1", "=", 
       RowBox[{"Cross", "[", 
        RowBox[{"v1", ",", "v2"}], "]"}]}], ";", 
      RowBox[{"n2", "=", 
       RowBox[{"Cross", "[", 
        RowBox[{"v2", ",", "v3"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "checks", " ", "if", " ", "the", " ", "normals", " ", "are", " ", 
        "zero", " ", "for", " ", "collinearity", " ", "of", " ", "segments", 
        " ", "making", " ", "the", " ", "plane", " ", "ill", " ", "defined", 
        " ", "before", " ", "calculating", " ", "the", " ", "angle"}], "*)"}],
       "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Or", "[", 
         RowBox[{
          RowBox[{"n1", "\[Equal]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
          RowBox[{"n2", "\[Equal]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ang", "=", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"ang", "=", 
         RowBox[{"ArcCos", "[", 
          RowBox[{
           RowBox[{"n1", ".", "n2"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Norm", "[", "n1", "]"}], "*", 
             RowBox[{"Norm", "[", "n2", "]"}]}], ")"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "ang"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5099208182126913`*^9, 3.5099209785568624`*^9}, {
  3.509921105289111*^9, 3.5099211233731456`*^9}, {3.5099220276058645`*^9, 
  3.5099220419566855`*^9}, {3.5099230304752254`*^9, 3.509923091478715*^9}, {
  3.5099242585864697`*^9, 3.5099243556610217`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Given", " ", "a", " ", "list", " ", "of", " ", "points", " ", "tors", " ", 
   "sums", " ", "all", " ", "the", " ", "torsion", " ", "angles", " ", 
   RowBox[{"(", 
    RowBox[{"in", " ", "radians"}], ")"}], " ", "across", " ", "the", " ", 
   "chain"}], "*)"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5099243646615367`*^9, 3.509924387543845*^9}, {
  3.509924455352724*^9, 3.5099244674444156`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"tors", "[", "v_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", ",", "del", ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"c", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "<", 
         RowBox[{
          RowBox[{"Length", "[", "v", "]"}], "-", "2"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"del", "=", 
          RowBox[{"torsEdge", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"v", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"v", "[", 
              RowBox[{"[", 
               RowBox[{"i", "+", "1"}], "]"}], "]"}], ",", 
             RowBox[{"v", "[", 
              RowBox[{"[", 
               RowBox[{"i", "+", "2"}], "]"}], "]"}], ",", 
             RowBox[{"v", "[", 
              RowBox[{"[", 
               RowBox[{"i", "+", "3"}], "]"}], "]"}]}], "}"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"c", "=", " ", 
          RowBox[{"c", "+", "del"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"c", "=", 
       RowBox[{"c", "+", 
        RowBox[{"torsEdge", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"v", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"Length", "[", "v", "]"}], "-", "2"}], "]"}], "]"}], 
           ",", 
           RowBox[{"v", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"Length", "[", "v", "]"}], "-", "1"}], "]"}], "]"}], 
           ",", 
           RowBox[{"v", "[", 
            RowBox[{"[", 
             RowBox[{"Length", "[", "v", "]"}], "]"}], "]"}], ",", 
           RowBox[{"v", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"c", "=", 
       RowBox[{"c", "+", 
        RowBox[{"torsEdge", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"v", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"Length", "[", "v", "]"}], "-", "1"}], "]"}], "]"}], 
           ",", 
           RowBox[{"v", "[", 
            RowBox[{"[", 
             RowBox[{"Length", "[", "v", "]"}], "]"}], "]"}], ",", 
           RowBox[{"v", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", 
           RowBox[{"v", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "c", "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.509920984507203*^9, 3.5099210122717905`*^9}, {
  3.5099213526162577`*^9, 3.50992135930564*^9}, {3.5099213947626677`*^9, 
  3.5099214104225636`*^9}, {3.5101507267380147`*^9, 3.5101507279880867`*^9}, {
  3.5123789531401777`*^9, 3.512378954377249*^9}, {3.512379011536518*^9, 
  3.5123790117555304`*^9}, {3.5431005201318817`*^9, 3.54310066223601*^9}, {
  3.5431008305956397`*^9, 3.5431008321337276`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "pathDist", " ", "takes", " ", "a", " ", "list", " ", "of", " ", "points", 
   " ", "and", " ", "calculates", " ", "the", " ", "distance", " ", "between",
    "\[IndentingNewLine]", "the", " ", "first", " ", "and", " ", "middle", 
   " ", "points", " ", "of", " ", "the", " ", "list", " ", "where", " ", 
   "the", " ", "middle", " ", "is", " ", "the", " ", "floor", " ", "of", " ", 
   "the", " ", 
   RowBox[{"length", "/", "2"}]}], "*)"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.50996374256656*^9, 3.509963813581622*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pathDist", "[", "v_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"[", 
          RowBox[{"Floor", "[", 
           RowBox[{
            RowBox[{"Length", "[", "v", "]"}], "/", "2"}], "]"}], "]"}], 
         "]"}], "-", 
        RowBox[{"v", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5099635190837774`*^9, 3.5099635492885056`*^9}, {
  3.509963701515212*^9, 3.5099637383843207`*^9}, {3.5123789735413446`*^9, 
  3.5123789755374594`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "pathDist", " ", "takes", " ", "a", " ", "list", " ", "of", " ", "points", 
   " ", "and", " ", "calculates", " ", "the", " ", "mean", " ", "distance", 
   " ", "between", "\[IndentingNewLine]", "the", " ", "ith", " ", "and", " ", 
   "middle", " ", "points", " ", "of", " ", "the", " ", "list", " ", "where", 
   " ", "the", " ", "middle", " ", "is", " ", "i", " ", "plus", " ", "the", 
   " ", "floor", " ", "of", " ", "the", " ", 
   RowBox[{"length", "/", "2"}]}], "*)"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.50996374256656*^9, 3.509963813581622*^9}, {
  3.5246847244640083`*^9, 3.5246847515067873`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"meanpathDist", "[", "v_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vv", "=", 
       RowBox[{"Drop", "[", 
        RowBox[{"v", ",", 
         RowBox[{"-", "1"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"Norm", "[", 
          RowBox[{
           RowBox[{"vv", "[", 
            RowBox[{"[", 
             RowBox[{"1", "+", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"i", "-", "1"}], ")"}], "+", 
                 RowBox[{"Floor", "[", 
                  RowBox[{
                   RowBox[{"Length", "[", "v", "]"}], "/", "2"}], "]"}]}], 
                ",", 
                RowBox[{"Length", "[", "vv", "]"}]}], "]"}]}], "]"}], "]"}], 
           "-", 
           RowBox[{"vv", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "vv", "]"}]}], "}"}]}], "]"}], "/", 
       RowBox[{"Length", "[", "vv", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.524507670528607*^9, 3.524507671119246*^9}, {
  3.524507710840233*^9, 3.524507711809046*^9}, {3.524507742448711*^9, 
  3.524507833757306*^9}, {3.524507890973589*^9, 3.524507894796616*^9}, {
  3.524507996374219*^9, 3.524508006199782*^9}, {3.5245080747690163`*^9, 
  3.524508082224304*^9}, {3.5245083025805902`*^9, 3.524508303236046*^9}, {
  3.524529147772293*^9, 3.52452916098783*^9}, {3.524529200747143*^9, 
  3.524529203117155*^9}, {3.524529294246347*^9, 3.524529318198152*^9}, {
  3.524529624287271*^9, 3.5245296854665823`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"radgyr", "[", "v_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"vv", "=", 
        RowBox[{"Drop", "[", 
         RowBox[{"v", ",", 
          RowBox[{"-", "1"}]}], "]"}]}], ",", "mean"}], "}"}], ",", 
     RowBox[{
      RowBox[{"mean", "=", 
       RowBox[{"Mean", "[", "vv", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"N", "[", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Sum", "[", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"Norm", "[", 
                RowBox[{
                 RowBox[{"vv", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "-", "mean"}], "]"}], ")"}],
               "2"], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "vv", "]"}]}], "}"}]}], "]"}], "/", 
           RowBox[{"Length", "[", "vv", "]"}]}], ")"}], 
         RowBox[{"1", "/", "2"}]], "]"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQHfnqAlO50yvHuxceg2mDx7fYQfSWxz/B9PXoc9wg
+pa1hTiIXqIeLweiH9beBNOzfnZrg+i5Kcd0QPSJ2RGmILpB190MRBtNuRQI
ojf0PgfTC7ZV1DcCab858o0gesYL8TYQvWd/MpgWfnR8Ioh2Dj82BUQHG3Lu
BtF279YdAtH7Wvh2ngPSq89Wgenu3MknQDRnJ/M5EP1vycSbILrNc/ttEF32
6eoDEO0g3/EQRB973fMCRPOlrAHTWdzdH0G0/rKOTyD6ifub3yD6sbPdPxBd
4OTOch5Id4Wv4wDRALfhn/k=
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"allCalc", "[", "v_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", ",", " ", "writheandacn"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"res", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"writheandacn", "=", 
       RowBox[{"wriAndAcn", "[", "v", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"res", ",", 
        RowBox[{"{", 
         RowBox[{"writheandacn", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"res", ",", 
        RowBox[{"{", 
         RowBox[{"writheandacn", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"res", ",", 
        RowBox[{"curv", "[", "v", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"res", ",", 
        RowBox[{"tors", "[", "v", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"res", ",", 
        RowBox[{"pathDist", "[", "v", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"res", ",", 
        RowBox[{"meanpathDist", "[", "v", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"res", ",", 
        RowBox[{"radgyr", "[", "v", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "res"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.512379327809608*^9, 3.512379409395274*^9}, {
  3.524688099553773*^9, 3.5246881132022543`*^9}, {3.548011292828125*^9, 
  3.548011363359375*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"allCalcFileCount", "[", 
    RowBox[{"name_", ",", "count_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"polys", ",", "result", ",", "res", ",", "i"}], " ", 
      RowBox[{"(*", 
       RowBox[{",", "flag", ",", "slowcount"}], "*)"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"result", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"flag", "=", "0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"slowcount", "=", "0"}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "read", " ", "in", " ", "file", " ", "and", " ", "run", " ", "it", " ",
         "through", " ", "all", " ", "calc"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"polys", "=", 
       RowBox[{"Import", "[", 
        RowBox[{"\"\<polygon/\>\"", "<>", "name"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "polys", "]"}], "<", "count"}], ",", 
        RowBox[{"count", "=", 
         RowBox[{"Length", "[", "polys", "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "count"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Mod", "[", 
             RowBox[{"i", ",", "10"}], "]"}], "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"i", ",", "\"\< of \>\"", ",", "count"}], "]"}], ";"}]}],
           "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"res", "=", 
          RowBox[{"allCalc", "[", 
           RowBox[{"polys", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"slowcount", "=", 
            RowBox[{"slowcount", "+", 
             RowBox[{"res", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "3"}], "]"}], "]"}], "+", 
             RowBox[{"res", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "3"}], "]"}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"flag", "=", 
            RowBox[{"flag", "+", 
             RowBox[{"res", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "5"}], "]"}], "]"}], "+", 
             RowBox[{"res", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "5"}], "]"}], "]"}]}]}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"result", ",", "res"}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"export", " ", "results", " ", "file"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<data/pdt\>\"", "<>", 
         RowBox[{"StringDrop", "[", 
          RowBox[{
           RowBox[{"StringDrop", "[", 
            RowBox[{"name", ",", "4"}], "]"}], ",", 
           RowBox[{"-", "4"}]}], "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", "1", "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", "count", "]"}], "<>", "\"\<.wdx\>\""}], ",",
         "result"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"export", " ", "flag", " ", "file"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{"\"\<flags: \>\"", ",", "flag"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<flag/flag\>\"", "<>", 
         RowBox[{"StringDrop", "[", 
          RowBox[{
           RowBox[{"StringDrop", "[", 
            RowBox[{"name", ",", "4"}], "]"}], ",", 
           RowBox[{"-", "4"}]}], "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", "1", "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", "count", "]"}], "<>", "\"\<.txt\>\""}], ",",
         "flag"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"slowcount", ",", "flag"}], "}"}]}], "*)"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5123808121205053`*^9, 3.512380877707257*^9}, {
   3.5123809209007273`*^9, 3.512380959423931*^9}, {3.5123810006482887`*^9, 
   3.512381086062174*^9}, {3.5123813176414194`*^9, 3.512381322788714*^9}, {
   3.512381433476045*^9, 3.5123814762794933`*^9}, {3.5123815143386703`*^9, 
   3.5123816337595005`*^9}, {3.512381686284505*^9, 3.5123818051483035`*^9}, {
   3.5123818952474566`*^9, 3.5123819353207493`*^9}, {3.5123820501823187`*^9, 
   3.5123820694424205`*^9}, {3.5123821119268503`*^9, 
   3.5123821706292076`*^9}, {3.512384023538188*^9, 3.5123840314636416`*^9}, {
   3.5123842310530577`*^9, 3.51238424141565*^9}, {3.512384865514346*^9, 
   3.5123849327711935`*^9}, {3.5123925621295805`*^9, 3.512392574403282*^9}, {
   3.5123931761707015`*^9, 3.512393178290823*^9}, {3.512393325794259*^9, 
   3.512393327605363*^9}, 3.512393459565911*^9, 3.512819919206028*^9, 
   3.512819949544763*^9, {3.5234724368359785`*^9, 3.5234724374900165`*^9}, {
   3.54811691559375*^9, 3.548116932171875*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"allCalcFile", "[", "name_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"count", ",", "polys", ",", "result", ",", "res", ",", "i"}], 
      " ", 
      RowBox[{"(*", 
       RowBox[{",", "flag", ",", "slowcount"}], "*)"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"result", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"flag", "=", "0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"slowcount", "=", "0"}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "read", " ", "in", " ", "file", " ", "and", " ", "run", " ", "it", " ",
         "through", " ", "all", " ", "calc"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"polys", "=", 
       RowBox[{"Import", "[", 
        RowBox[{"\"\<polygon/\>\"", "<>", "name"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"count", "=", 
       RowBox[{"Length", "[", "polys", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "count"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Mod", "[", 
             RowBox[{"i", ",", "10"}], "]"}], "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"i", ",", "\"\< of \>\"", ",", "count"}], "]"}], ";"}]}],
           "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"res", "=", 
          RowBox[{"allCalc", "[", 
           RowBox[{"polys", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"slowcount", "=", 
            RowBox[{"slowcount", "+", 
             RowBox[{"res", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "3"}], "]"}], "]"}], "+", 
             RowBox[{"res", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "3"}], "]"}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"flag", "=", 
            RowBox[{"flag", "+", 
             RowBox[{"res", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "5"}], "]"}], "]"}], "+", 
             RowBox[{"res", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "5"}], "]"}], "]"}]}]}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"result", ",", "res"}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"export", " ", "results", " ", "file"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<data/pdt\>\"", "<>", 
         RowBox[{"StringDrop", "[", 
          RowBox[{
           RowBox[{"StringDrop", "[", 
            RowBox[{"name", ",", "4"}], "]"}], ",", 
           RowBox[{"-", "4"}]}], "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", "1", "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", "count", "]"}], "<>", "\"\<.wdx\>\""}], ",",
         "result"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"export", " ", "flag", " ", "file"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{"\"\<flags: \>\"", ",", "flag"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<flag/flag\>\"", "<>", 
         RowBox[{"StringDrop", "[", 
          RowBox[{
           RowBox[{"StringDrop", "[", 
            RowBox[{"name", ",", "4"}], "]"}], ",", 
           RowBox[{"-", "4"}]}], "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", "1", "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", "count", "]"}], "<>", "\"\<.txt\>\""}], ",",
         "flag"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"slowcount", ",", "flag"}], "}"}]}], "*)"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.51238876457636*^9, 3.512388815254259*^9}, {
  3.5123892144830933`*^9, 3.5123892179452915`*^9}, {3.512392538462227*^9, 
  3.512392555028174*^9}, {3.512393169538322*^9, 3.5123931710774097`*^9}, {
  3.5123933177397985`*^9, 3.5123933211429935`*^9}, {3.5123933962522893`*^9, 
  3.5123934407168326`*^9}, {3.512819884232027*^9, 3.5128199416723127`*^9}, {
  3.54811688203125*^9, 3.548116905984375*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"allCalcFileStartStop", "[", 
    RowBox[{"name_", ",", "start_", ",", "stop_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "count", ",", "polys", ",", "result", ",", "res", ",", "i", ",", "flag",
        ",", "slowcount"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"result", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"flag", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"slowcount", "=", "0"}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "read", " ", "in", " ", "file", " ", "and", " ", "run", " ", "it", " ",
         "through", " ", "all", " ", "calc"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"polys", "=", 
       RowBox[{"Import", "[", 
        RowBox[{"\"\<polygon/\>\"", "<>", "name"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"count", "=", 
       RowBox[{"Length", "[", "polys", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"start", "<", "1"}], ",", 
        RowBox[{"start", "=", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"start", ">", "count"}], ",", 
        RowBox[{"count", "=", "0"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"stop", "<", "1"}], ",", 
        RowBox[{"count", "=", "0"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"stop", ">", "count"}], ",", 
        RowBox[{"stop", "=", "count"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "start"}], ",", 
        RowBox[{"i", "\[LessEqual]", "stop"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Mod", "[", 
             RowBox[{"i", ",", "10"}], "]"}], "\[Equal]", "0"}], ",", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"i", ",", "\"\< of \>\"", ",", 
              RowBox[{"(", 
               RowBox[{"stop", "-", "start"}], ")"}]}], "]"}], ";"}]}], "]"}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"res", "=", 
          RowBox[{"allCalc", "[", 
           RowBox[{"polys", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"slowcount", "=", 
            RowBox[{"slowcount", "+", 
             RowBox[{"res", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "3"}], "]"}], "]"}], "+", 
             RowBox[{"res", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "3"}], "]"}], "]"}]}]}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"flag", "=", 
            RowBox[{"flag", "+", 
             RowBox[{"res", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "5"}], "]"}], "]"}], "+", 
             RowBox[{"res", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "5"}], "]"}], "]"}]}]}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"result", ",", "res"}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"export", " ", "results", " ", "file"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<data/pdt\>\"", "<>", 
         RowBox[{"StringDrop", "[", 
          RowBox[{
           RowBox[{"StringDrop", "[", 
            RowBox[{"name", ",", "4"}], "]"}], ",", 
           RowBox[{"-", "4"}]}], "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", "start", "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", "stop", "]"}], "<>", "\"\<.wdx\>\""}], ",", 
        "result"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"export", " ", "flag", " ", "file"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{"\"\<flags: \>\"", ",", "flag"}], "]"}], ";"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<flag/flag\>\"", "<>", 
         RowBox[{"StringDrop", "[", 
          RowBox[{
           RowBox[{"StringDrop", "[", 
            RowBox[{"name", ",", "4"}], "]"}], ",", 
           RowBox[{"-", "4"}]}], "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", "start", "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", "stop", "]"}], "<>", "\"\<.txt\>\""}], ",", 
        "flag"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"{", 
      RowBox[{"slowcount", ",", "flag"}], "}"}], "*)"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.512391290807865*^9, 3.5123913991950645`*^9}, {
   3.5123917502041407`*^9, 3.5123917617728024`*^9}, {3.512391792588565*^9, 
   3.5123918265195055`*^9}, {3.5123927578517747`*^9, 
   3.5123927666872807`*^9}, {3.5123931595337496`*^9, 
   3.5123931620048914`*^9}, {3.5123933109784117`*^9, 3.5123933125455017`*^9}, 
   3.51239345256351*^9, {3.512819716380427*^9, 3.5128197657612514`*^9}, {
   3.5128198010862713`*^9, 3.512819812564928*^9}, {3.512819869693196*^9, 
   3.512819873473412*^9}, {3.523472427271432*^9, 3.523472428660511*^9}, {
   3.548116816921875*^9, 3.5481168730625*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Dowker", "Section",
 CellChangeTimes->{{3.523466302713127*^9, 3.5234663034361687`*^9}}],

Cell[CellGroupData[{

Cell["initialization", "Subsection",
 CellChangeTimes->{{3.5234664591630754`*^9, 3.523466461992237*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dowSolv", "[", 
   RowBox[{
   "nX0_", ",", "nX1_", ",", "nY0_", ",", "nY1_", ",", "nA_", ",", "nB_", ",",
     "nC_", ",", "nD_"}], "]"}], ":=", 
  RowBox[{"Return", "[", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"nD", " ", "nX0"}], "-", 
        RowBox[{"nD", " ", "nX1"}], "-", 
        RowBox[{"nC", " ", "nY0"}], "+", 
        RowBox[{"nC", " ", "nY1"}]}], 
       RowBox[{
        RowBox[{
         RowBox[{"-", "nB"}], " ", "nC"}], "+", 
        RowBox[{"nA", " ", "nD"}]}]]}], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "nB"}], " ", "nX0"}], "+", 
        RowBox[{"nB", " ", "nX1"}], "+", 
        RowBox[{"nA", " ", "nY0"}], "-", 
        RowBox[{"nA", " ", "nY1"}]}], 
       RowBox[{
        RowBox[{"nB", " ", "nC"}], "-", 
        RowBox[{"nA", " ", "nD"}]}]]}]}], "}"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.51974558913544*^9, 3.5197457556344852`*^9}, {
  3.519992697713067*^9, 3.519992699654498*^9}, {3.519992821588232*^9, 
  3.519992824483912*^9}, {3.520355935266328*^9, 3.520356020046604*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"checkIndicesD", "[", 
   RowBox[{"i1_", ",", "i2_", ",", "len_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"nI1", "=", "i1"}], ",", 
      RowBox[{"nI2", "=", "i2"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i1", "\[Equal]", "len"}], ",", 
       RowBox[{"nI1", "=", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i2", "\[Equal]", "len"}], ",", 
       RowBox[{"nI2", "=", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"nI1", "\[Equal]", "nI2"}], "||", 
        RowBox[{
         RowBox[{"nI1", "+", "1"}], "\[Equal]", "nI2"}], "||", 
        RowBox[{
         RowBox[{"nI1", "-", "1"}], "\[Equal]", "nI2"}], "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nI1", "\[Equal]", 
           RowBox[{"len", "-", "1"}]}], "&&", 
          RowBox[{"nI2", "\[Equal]", "1"}]}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nI2", "\[Equal]", 
           RowBox[{"len", "-", "1"}]}], "&&", 
          RowBox[{"nI1", "\[Equal]", "1"}]}], ")"}]}], ",", 
       RowBox[{"Return", "[", "False", "]"}], ",", 
       RowBox[{"Return", "[", "True", "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.517334490612739*^9, 3.5173345626801434`*^9}, {
   3.51759451896173*^9, 3.517594531715073*^9}, {3.51759456780858*^9, 
   3.5175946070891123`*^9}, {3.519651853112482*^9, 3.519651863868976*^9}, {
   3.51999216493771*^9, 3.519992208203755*^9}, {3.519992274379037*^9, 
   3.5199922927692966`*^9}, 3.5200794665056458`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["tools", "Subsection",
 CellChangeTimes->{{3.5234665337603426`*^9, 3.523466534468383*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"zRot", " ", "=", " ", 
   RowBox[{"RotationTransform", "[", 
    RowBox[{"\[Theta]", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yRot", "=", 
   RowBox[{"RotationTransform", "[", 
    RowBox[{"\[Theta]", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.517065222865037*^9, 3.517065233686014*^9}, {
  3.520081625544074*^9, 3.52008164639902*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rotatePoly", "[", "pList_", "]"}], ":=", 
   RowBox[{"Return", "[", 
    RowBox[{
     RowBox[{"Clear", "[", "\[Theta]", "]"}], ";", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"yRot", "/.", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", "\[Rule]", 
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"2", "\[Pi]"}]}], "}"}], "]"}]}], "}"}]}], ")"}], "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"zRot", "/.", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", "\[Rule]", 
           RowBox[{"RandomReal", "[", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"2", "\[Pi]"}]}], "}"}], "]"}]}], "}"}]}], ")"}], "[", 
       "pList", "]"}], "]"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.517064245426152*^9, 3.517064296359056*^9}, {
   3.517064696209579*^9, 3.517064728133357*^9}, {3.517064784831386*^9, 
   3.5170648267831793`*^9}, {3.5170649253185377`*^9, 3.517064939682817*^9}, {
   3.5170650751580963`*^9, 3.517065121909718*^9}, {3.517065197924707*^9, 
   3.517065199506226*^9}, {3.517065278895316*^9, 3.517065304581712*^9}, {
   3.517065340659526*^9, 3.517065467760394*^9}, {3.517065526581738*^9, 
   3.5170655344203672`*^9}, 3.5170655742519608`*^9, {3.517594757238329*^9, 
   3.517594757993196*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rotatePoly", "[", 
   RowBox[{"pList_", ",", "\[Theta]1_", ",", "\[Theta]2_"}], "]"}], ":=", 
  RowBox[{"Return", "[", 
   RowBox[{
    RowBox[{"Clear", "[", "\[Theta]", "]"}], ";", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"yRot", "/.", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", "\[Rule]", "\[Theta]1"}], "}"}]}], ")"}], "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"zRot", "/.", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", "\[Rule]", "\[Theta]2"}], "}"}]}], ")"}], "[", 
      "pList", "]"}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.517594760070347*^9, 3.5175948206608257`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"checkR1", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i1_", ",", "i2_"}], "}"}], ",", "len_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"i1", "+", "1"}], "\[Equal]", "i2"}], "||", 
     RowBox[{
      RowBox[{"i1", "-", "1"}], "==", "i2"}], "||", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"i1", "\[Equal]", "1"}], "&&", 
       RowBox[{"i2", "\[Equal]", "len"}]}], ")"}], "||", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"i1", "\[Equal]", "len"}], "&&", 
       RowBox[{"i2", "\[Equal]", "1"}]}], ")"}]}], ",", 
    RowBox[{"Return", "[", "True", "]"}], ",", 
    RowBox[{"Return", "[", "False", "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.520036631220303*^9, 3.5200367093255053`*^9}, {
  3.520036766855117*^9, 3.520036791492214*^9}, {3.5200368907433777`*^9, 
  3.520036931057304*^9}, {3.520356110767654*^9, 3.520356112307219*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"checkR2", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"p11_", ",", "p12_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"p21_", ",", "p22_"}], "}"}], ",", "len_"}], "]"}], ":=", 
  RowBox[{"If", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"checkR1", "[", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"{", 
         RowBox[{"p11", ",", "p22"}], "}"}], "]"}], ",", "len"}], "]"}], "&&", 
     RowBox[{"checkR1", "[", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"{", 
         RowBox[{"p12", ",", "p21"}], "}"}], "]"}], ",", "len"}], "]"}], "&&", 
     RowBox[{
      RowBox[{"Sign", "[", "p11", "]"}], "\[NotEqual]", 
      RowBox[{"Sign", "[", "p21", "]"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"Return", "[", "True", "]"}], ",", 
    RowBox[{"Return", "[", "False", "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.520165311218254*^9, 3.5201653122119713`*^9}, {
  3.5201655020459633`*^9, 3.520165527828473*^9}, {3.5201655830601463`*^9, 
  3.5201657619775543`*^9}, {3.520165865656238*^9, 3.520165907660468*^9}, {
  3.520166288367318*^9, 3.520166292760035*^9}, {3.520166339317706*^9, 
  3.52016637112533*^9}, {3.5203561221192636`*^9, 3.5203561278535967`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"validQ1", "[", "cList_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"valid", "=", "True"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"checkR1", "[", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"cList", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"Length", "[", "cList", "]"}], "*", "2"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"valid", "=", "False"}]}], "\[IndentingNewLine]", "]"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "cList", "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "valid", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.520035959789926*^9, 3.5200359640272303`*^9}, {
   3.520036232751072*^9, 3.520036247112303*^9}, {3.520036440060458*^9, 
   3.5200365200620117`*^9}, {3.5200365885624523`*^9, 3.520036589480298*^9}, {
   3.520036695062262*^9, 3.52003674597458*^9}, {3.520036798453287*^9, 
   3.520036803755172*^9}, {3.5200369092164707`*^9, 3.520036909544622*^9}, {
   3.520037129127366*^9, 3.52003713301586*^9}, {3.520078526084971*^9, 
   3.52007855448536*^9}, {3.5200831525443773`*^9, 3.520083174918022*^9}, 
   3.5201654874747667`*^9, {3.520356221209907*^9, 3.520356222361044*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"validQ2", "[", "cList_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"valid", "=", "True"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"checkR2", "[", 
            RowBox[{
             RowBox[{"cList", "[", 
              RowBox[{"[", "i1", "]"}], "]"}], ",", 
             RowBox[{"cList", "[", 
              RowBox[{"[", "i2", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"Length", "[", "cList", "]"}], "*", "2"}]}], "]"}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"valid", "=", "False"}]}], "\[IndentingNewLine]", "]"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i2", ",", 
           RowBox[{"i1", "+", "1"}], ",", 
           RowBox[{"Length", "[", "cList", "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i1", ",", 
         RowBox[{"Length", "[", "cList", "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "valid", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.520166413324812*^9, 3.5201664954834337`*^9}, {
  3.520166538729772*^9, 3.520166569919121*^9}, {3.520166670959426*^9, 
  3.520166702580256*^9}, {3.520166809508423*^9, 3.520166852000764*^9}, {
  3.520166902777605*^9, 3.520166938357521*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"removeIntersection2", "[", 
   RowBox[{"nCode_", ",", "rPair1_", ",", "rPair2_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"rCode", "=", "nCode"}], ",", "buf1", ",", "buf2", ",", 
      "bTemp"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rCode", "=", 
      RowBox[{"Delete", "[", 
       RowBox[{"rCode", ",", 
        RowBox[{"Position", "[", 
         RowBox[{"rCode", ",", "rPair1"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rCode", "=", 
      RowBox[{"Delete", "[", 
       RowBox[{"rCode", ",", 
        RowBox[{"Position", "[", 
         RowBox[{"rCode", ",", "rPair2"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"buf1", "=", "0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"buf2", "=", "0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"rPair1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "<", 
           RowBox[{"Abs", "[", 
            RowBox[{"rCode", "[", 
             RowBox[{"[", 
              RowBox[{"dI", ",", "1"}], "]"}], "]"}], "]"}]}], ",", 
          RowBox[{"buf1", "++"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"rPair1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "<", 
           RowBox[{"Abs", "[", 
            RowBox[{"rCode", "[", 
             RowBox[{"[", 
              RowBox[{"dI", ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
          RowBox[{"buf2", "++"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"rPair1", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "<", 
           RowBox[{"Abs", "[", 
            RowBox[{"rCode", "[", 
             RowBox[{"[", 
              RowBox[{"dI", ",", "1"}], "]"}], "]"}], "]"}]}], ",", 
          RowBox[{"buf1", "++"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"rPair1", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "<", 
           RowBox[{"Abs", "[", 
            RowBox[{"rCode", "[", 
             RowBox[{"[", 
              RowBox[{"dI", ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
          RowBox[{"buf2", "++"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"rPair2", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "<", 
           RowBox[{"Abs", "[", 
            RowBox[{"rCode", "[", 
             RowBox[{"[", 
              RowBox[{"dI", ",", "1"}], "]"}], "]"}], "]"}]}], ",", 
          RowBox[{"buf1", "++"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"rPair2", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "<", 
           RowBox[{"Abs", "[", 
            RowBox[{"rCode", "[", 
             RowBox[{"[", 
              RowBox[{"dI", ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
          RowBox[{"buf2", "++"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"rPair2", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "<", 
           RowBox[{"Abs", "[", 
            RowBox[{"rCode", "[", 
             RowBox[{"[", 
              RowBox[{"dI", ",", "1"}], "]"}], "]"}], "]"}]}], ",", 
          RowBox[{"buf1", "++"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"rPair2", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "<", 
           RowBox[{"Abs", "[", 
            RowBox[{"rCode", "[", 
             RowBox[{"[", 
              RowBox[{"dI", ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
          RowBox[{"buf2", "++"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OddQ", "[", "buf1", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"bTemp", "=", 
            RowBox[{"rCode", "[", 
             RowBox[{"[", 
              RowBox[{"dI", ",", "1"}], "]"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"rCode", "[", 
             RowBox[{"[", 
              RowBox[{"dI", ",", "1"}], "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sign", "[", "bTemp", "]"}]}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"rCode", "[", 
                RowBox[{"[", 
                 RowBox[{"dI", ",", "2"}], "]"}], "]"}], "-", "buf2"}], 
              ")"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"rCode", "[", 
             RowBox[{"[", 
              RowBox[{"dI", ",", "2"}], "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"Abs", "[", "bTemp", "]"}], "-", "buf1"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", "Else", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"rCode", "[", 
             RowBox[{"[", 
              RowBox[{"dI", ",", "1"}], "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"rCode", "[", 
              RowBox[{"[", 
               RowBox[{"dI", ",", "1"}], "]"}], "]"}], "-", 
             RowBox[{"buf1", "*", 
              RowBox[{"Sign", "[", 
               RowBox[{"rCode", "[", 
                RowBox[{"[", 
                 RowBox[{"dI", ",", "1"}], "]"}], "]"}], "]"}]}]}]}], ";", 
           " ", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"rCode", "[", 
             RowBox[{"[", 
              RowBox[{"dI", ",", "2"}], "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"rCode", "[", 
              RowBox[{"[", 
               RowBox[{"dI", ",", "2"}], "]"}], "]"}], "-", "buf2"}]}]}]}], 
         "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"dI", ",", 
         RowBox[{"Length", "[", "rCode", "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"rCode", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"rCode", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"#1", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], "<", 
          RowBox[{"Abs", "[", 
           RowBox[{"#2", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "rCode", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"fixR1", "[", "dCode_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"nCode", "=", "dCode"}], ",", "rCode", ",", "remTemp", ",", 
      "buf1", ",", "buf2", ",", "bTemp", ",", 
      RowBox[{"sSwitch", "=", "0"}], ",", 
      RowBox[{"switched", "=", "False"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"nCode", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"dCode", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"2", "*", "i"}], "-", "1"}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "dCode", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"validQ1", "[", "nCode", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"checkR1", "[", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"nCode", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"Length", "[", "nCode", "]"}], "*", "2"}]}], "]"}], ",",
            "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"remTemp", "=", 
             RowBox[{"nCode", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"nCode", "=", 
             RowBox[{"Delete", "[", 
              RowBox[{"nCode", ",", 
               RowBox[{"Position", "[", 
                RowBox[{"nCode", ",", "remTemp"}], "]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"switched", "=", "False"}], ";", "\[IndentingNewLine]", 
            RowBox[{"Do", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"buf1", "=", "0"}], ";", "\[IndentingNewLine]", 
               RowBox[{"buf2", "=", "0"}], ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Abs", "[", 
                   RowBox[{"remTemp", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "<", 
                  RowBox[{"Abs", "[", 
                   RowBox[{"nCode", "[", 
                    RowBox[{"[", 
                    RowBox[{"dI", ",", "1"}], "]"}], "]"}], "]"}]}], ",", 
                 RowBox[{"buf1", "++"}]}], "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Abs", "[", 
                   RowBox[{"remTemp", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "<", 
                  RowBox[{"Abs", "[", 
                   RowBox[{"nCode", "[", 
                    RowBox[{"[", 
                    RowBox[{"dI", ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
                 RowBox[{"buf2", "++"}]}], "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Abs", "[", 
                   RowBox[{"remTemp", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "<", 
                  RowBox[{"Abs", "[", 
                   RowBox[{"nCode", "[", 
                    RowBox[{"[", 
                    RowBox[{"dI", ",", "1"}], "]"}], "]"}], "]"}]}], ",", 
                 RowBox[{"buf1", "++"}]}], "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Abs", "[", 
                   RowBox[{"remTemp", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "<", 
                  RowBox[{"Abs", "[", 
                   RowBox[{"nCode", "[", 
                    RowBox[{"[", 
                    RowBox[{"dI", ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
                 RowBox[{"buf2", "++"}]}], "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"buf1", "\[Equal]", "1"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"bTemp", "=", 
                   RowBox[{"nCode", "[", 
                    RowBox[{"[", 
                    RowBox[{"dI", ",", "1"}], "]"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"nCode", "[", 
                    RowBox[{"[", 
                    RowBox[{"dI", ",", "1"}], "]"}], "]"}], "=", 
                   RowBox[{
                    RowBox[{"Sign", "[", "bTemp", "]"}], "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nCode", "[", 
                    RowBox[{"[", 
                    RowBox[{"dI", ",", "2"}], "]"}], "]"}], "-", "1"}], 
                    ")"}]}]}], ";", 
                  RowBox[{
                   RowBox[{"nCode", "[", 
                    RowBox[{"[", 
                    RowBox[{"dI", ",", "2"}], "]"}], "]"}], "=", 
                   RowBox[{
                    RowBox[{"Abs", "[", "bTemp", "]"}], "-", "1"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"!", "switched"}], ",", 
                    RowBox[{
                    RowBox[{"sSwitch", "++"}], ";", 
                    RowBox[{"switched", "=", "True"}]}]}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"nCode", "[", 
                    RowBox[{"[", 
                    RowBox[{"dI", ",", "1"}], "]"}], "]"}], "=", 
                   RowBox[{
                    RowBox[{"nCode", "[", 
                    RowBox[{"[", 
                    RowBox[{"dI", ",", "1"}], "]"}], "]"}], "-", 
                    RowBox[{"buf1", "*", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"nCode", "[", 
                    RowBox[{"[", 
                    RowBox[{"dI", ",", "1"}], "]"}], "]"}], "]"}]}]}]}], ";", 
                  " ", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"nCode", "[", 
                    RowBox[{"[", 
                    RowBox[{"dI", ",", "2"}], "]"}], "]"}], "=", 
                   RowBox[{
                    RowBox[{"nCode", "[", 
                    RowBox[{"[", 
                    RowBox[{"dI", ",", "2"}], "]"}], "]"}], "-", 
                    RowBox[{"buf2", "*", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"nCode", "[", 
                    RowBox[{"[", 
                    RowBox[{"dI", ",", "2"}], "]"}], "]"}], "]"}]}]}]}]}]}], 
                "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"dI", ",", 
                RowBox[{"Length", "[", "nCode", "]"}]}], "}"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"nCode", "=", 
             RowBox[{"Sort", "[", 
              RowBox[{"nCode", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{"#1", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "]"}], "<", 
                 RowBox[{"Abs", "[", 
                  RowBox[{"#2", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "&"}]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"Return", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "nCode", "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rCode", "=", "nCode"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"rCode", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "=", 
        RowBox[{"nCode", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "nCode", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OddQ", "[", "sSwitch", "]"}], ",", 
       RowBox[{"rCode", "=", 
        RowBox[{"-", "rCode"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "rCode", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.520356207531982*^9, 3.520356215229838*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fixR2", "[", "dCode_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"nCode", "=", "dCode"}], ",", "rCode", ",", "tCode"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"nCode", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"dCode", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"2", "*", "i"}], "-", "1"}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "dCode", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"validQ2", "[", "nCode", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"checkR2", "[", 
              RowBox[{
               RowBox[{"nCode", "[", 
                RowBox[{"[", "i1", "]"}], "]"}], ",", 
               RowBox[{"nCode", "[", 
                RowBox[{"[", "i2", "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"Length", "[", "nCode", "]"}], "*", "2"}]}], "]"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"nCode", "=", 
               RowBox[{"removeIntersection2", "[", 
                RowBox[{"nCode", ",", 
                 RowBox[{"nCode", "[", 
                  RowBox[{"[", "i1", "]"}], "]"}], ",", 
                 RowBox[{"nCode", "[", 
                  RowBox[{"[", "i2", "]"}], "]"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"Return", "[", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"i2", ",", 
             RowBox[{"i1", "+", "1"}], ",", 
             RowBox[{"Length", "[", "nCode", "]"}]}], "}"}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i1", ",", 
           RowBox[{"Length", "[", "nCode", "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rCode", "=", "nCode"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"rCode", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "=", 
        RowBox[{"nCode", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "nCode", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "rCode", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"reduceD", "[", 
   RowBox[{"dCode_", ",", "r1_", ",", "r2_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"nCode", "=", "dCode"}], ",", 
      RowBox[{"rCode", "=", 
       RowBox[{"fixR1", "[", "dCode", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"nCode", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"rCode", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"2", "*", "i"}], "-", "1"}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "rCode", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"r1", "&&", 
          RowBox[{"!", 
           RowBox[{"validQ1", "[", "nCode", "]"}]}]}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{"r2", "&&", 
          RowBox[{"!", 
           RowBox[{"validQ2", "[", "nCode", "]"}]}]}], ")"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"rCode", "=", 
         RowBox[{"fixR2", "[", "rCode", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rCode", "=", 
         RowBox[{"fixR1", "[", "rCode", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"nCode", "=", "rCode"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"nCode", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"rCode", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"2", "*", "i"}], "-", "1"}]}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "rCode", "]"}]}], "}"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", " ", "[", "rCode", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.520356415305101*^9, 3.5203564158950253`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["to knotscape", "Subsection",
 CellChangeTimes->{{3.5234667134596205`*^9, 3.5234667150997143`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"convToKS", "[", "dCode_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"rString", ",", 
      RowBox[{"nCode", "=", 
       RowBox[{"fixD", "[", "dCode", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rString", "=", 
      RowBox[{"StringJoin", "[", 
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{"Length", "[", "nCode", "]"}], "]"}], ",", "\"\< 1\>\""}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"rString", "=", 
        RowBox[{"StringJoin", "[", 
         RowBox[{"rString", ",", "\"\< \>\"", ",", 
          RowBox[{"ToString", "[", 
           RowBox[{"nCode", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "nCode", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "rString", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"polyToKS", "[", "pointList_", "]"}], ":=", 
  RowBox[{"Return", "[", 
   RowBox[{"convToKS", "[", 
    RowBox[{"getD", "[", "pointList", "]"}], "]"}], "]"}]}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["get dt code", "Subsection",
 CellChangeTimes->{{3.5234666430025907`*^9, 3.523466648274892*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getD", "[", "pointList_", "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"intersections", "=", 
       RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"int", "=", 
       RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"tempInt", "=", 
       RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", "p1", ",", 
      "\[IndentingNewLine]", "p2", ",", "\[IndentingNewLine]", "v1", ",", 
      "\[IndentingNewLine]", "v2", ",", "\[IndentingNewLine]", "t", ",", 
      "\[IndentingNewLine]", "t1", ",", "\[IndentingNewLine]", "t2", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"sign", "=", "1"}], ",", "\[IndentingNewLine]", 
      RowBox[{"triple", "=", "False"}], ",", "\[IndentingNewLine]", 
      RowBox[{"perp", "=", "False"}], ",", "\[IndentingNewLine]", 
      RowBox[{"dowker", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"p1", "=", 
         RowBox[{"pointList", "[", 
          RowBox[{"[", "i1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"v1", "=", 
         RowBox[{
          RowBox[{"pointList", "[", 
           RowBox[{"[", 
            RowBox[{"i1", "+", "1"}], "]"}], "]"}], "-", "p1"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"v1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], "&&", 
           RowBox[{
            RowBox[{"v1", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}]}], ",", 
          RowBox[{"perp", "=", "True"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"p2", "=", 
            RowBox[{"pointList", "[", 
             RowBox[{"[", "i2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"v2", "=", 
            RowBox[{
             RowBox[{"pointList", "[", 
              RowBox[{"[", 
               RowBox[{"i2", "+", "1"}], "]"}], "]"}], "-", "p2"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"v2", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], "&&", 
              RowBox[{
               RowBox[{"v2", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}]}], ",", 
             RowBox[{"perp", "=", "True"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"checkIndicesD", "[", 
               RowBox[{"i1", ",", "i2", ",", 
                RowBox[{"Length", "[", "pointList", "]"}]}], "]"}], "&&", 
              RowBox[{
               RowBox[{
                RowBox[{"v1", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "*", 
                RowBox[{"v2", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "!=", 
               RowBox[{
                RowBox[{"v1", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "*", 
                RowBox[{"v2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}]}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"t", "=", 
               RowBox[{"dowSolv", "[", 
                RowBox[{
                 RowBox[{"p1", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"p2", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"p1", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"p2", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"v1", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"v1", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"v2", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"v2", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Element", "[", 
                  RowBox[{
                   RowBox[{"t", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "Reals"}], "]"}], "&&", 
                 RowBox[{"Element", "[", 
                  RowBox[{
                   RowBox[{"t", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "Reals"}], "]"}]}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Do", "[", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"t", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "==", 
                    RowBox[{"tempInt", "[", 
                    RowBox[{"[", 
                    RowBox[{"it", ",", "2"}], "]"}], "]"}]}], ",", 
                    RowBox[{"triple", " ", "=", " ", "True"}]}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{"it", ",", 
                    RowBox[{"Length", "[", "tempInt", "]"}]}], "}"}]}], "]"}],
                  ";", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"t", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "&&", 
                    RowBox[{
                    RowBox[{"t", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "1"}], "&&", 
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{"t", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "&&", 
                    RowBox[{
                    RowBox[{"t", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "\[LessEqual]", "1"}]}], 
                   ",", "\[IndentingNewLine]", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"tempInt", ",", 
                    RowBox[{"{", 
                    RowBox[{"i2", ",", 
                    RowBox[{"t", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"t", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}], 
                  "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
               "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"i2", ",", 
            RowBox[{
             RowBox[{"Length", "[", "pointList", "]"}], "-", "1"}]}], "}"}]}],
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempInt", "=", 
         RowBox[{"Sort", "[", 
          RowBox[{"tempInt", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#1", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "<", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"intersections", ",", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", "i1", "}"}], ",", 
              RowBox[{"tempInt", "[", 
               RowBox[{"[", "ind", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"ind", ",", 
            RowBox[{"Length", "[", "tempInt", "]"}]}], "}"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tempInt", "=", 
         RowBox[{"{", "}"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i1", ",", 
         RowBox[{
          RowBox[{"Length", "[", "pointList", "]"}], "-", "1"}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"triple", ",", 
       RowBox[{"Print", "[", "\"\<Triple\>\"", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"perp", ",", 
       RowBox[{"Print", "[", "\"\<Perpendicular\>\"", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"int", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"intersections", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"intersections", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "intersections", "]"}]}], "}"}]}], "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"int", "[", 
           RowBox[{"[", 
            RowBox[{"i1", ",", "1"}], "]"}], "]"}], "<", 
          RowBox[{"int", "[", 
           RowBox[{"[", 
            RowBox[{"i1", ",", "2"}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"p1", "=", 
           RowBox[{"pointList", "[", 
            RowBox[{"[", 
             RowBox[{"intersections", "[", 
              RowBox[{"[", 
               RowBox[{"i1", ",", "1"}], "]"}], "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"v1", "=", 
           RowBox[{
            RowBox[{"pointList", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"intersections", "[", 
                RowBox[{"[", 
                 RowBox[{"i1", ",", "1"}], "]"}], "]"}], "+", "1"}], "]"}], 
             "]"}], "-", "p1"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"p2", "=", 
           RowBox[{"pointList", "[", 
            RowBox[{"[", 
             RowBox[{"intersections", "[", 
              RowBox[{"[", 
               RowBox[{"i1", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"v2", "=", 
           RowBox[{
            RowBox[{"pointList", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"intersections", "[", 
                RowBox[{"[", 
                 RowBox[{"i1", ",", "2"}], "]"}], "]"}], "+", "1"}], "]"}], 
             "]"}], "-", "p2"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"t1", "=", 
           RowBox[{"intersections", "[", 
            RowBox[{"[", 
             RowBox[{"i1", ",", "3"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"t2", "=", 
           RowBox[{"intersections", "[", 
            RowBox[{"[", 
             RowBox[{"i1", ",", "4"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"EvenQ", "[", "i1", "]"}], ",", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"p1", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "+", 
                 RowBox[{
                  RowBox[{"v1", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], "*", "t1"}]}], "<", 
                RowBox[{
                 RowBox[{"p2", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "+", 
                 RowBox[{
                  RowBox[{"v2", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], "*", "t2"}]}]}], ",", 
               RowBox[{"sign", "=", "1"}], ",", 
               RowBox[{"sign", "=", 
                RowBox[{"-", "1"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"dowker", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Position", "[", 
                   RowBox[{"int", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"int", "[", 
                    RowBox[{"[", 
                    RowBox[{"i1", ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"int", "[", 
                    RowBox[{"[", 
                    RowBox[{"i1", ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], 
                  "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{"i1", "*", "sign"}]}], "}"}]}], "]"}]}], ",", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", "Else", "*)"}], "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"p1", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "+", 
                 RowBox[{
                  RowBox[{"v1", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], "*", "t1"}]}], "<", 
                RowBox[{
                 RowBox[{"p2", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "+", 
                 RowBox[{
                  RowBox[{"v2", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], "*", "t2"}]}]}], ",", 
               RowBox[{"sign", "=", 
                RowBox[{"-", "1"}]}], ",", 
               RowBox[{"sign", "=", "1"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"dowker", ",", 
               RowBox[{"{", 
                RowBox[{"i1", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Position", "[", 
                    RowBox[{"int", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"int", "[", 
                    RowBox[{"[", 
                    RowBox[{"i1", ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"int", "[", 
                    RowBox[{"[", 
                    RowBox[{"i1", ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], 
                   "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "*", "sign"}]}], 
                "}"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i1", ",", 
         RowBox[{"Length", "[", "int", "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"dowker", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"dowker", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "<", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"dowker", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "=", 
        RowBox[{"dowker", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "dowker", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "dowker", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"nicerD", "[", 
   RowBox[{"pointList_", ",", "tries_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tempD", ",", "bestD"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"bestD", "=", 
      RowBox[{"reduceD", "[", 
       RowBox[{
        RowBox[{"getD", "[", "pointList", "]"}], ",", "True", ",", "True"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"tempD", "=", 
         RowBox[{"reduceD", "[", 
          RowBox[{
           RowBox[{"getD", "[", 
            RowBox[{"rotatePoly", "[", "pointList", "]"}], "]"}], ",", "True",
            ",", "True"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "tempD", "]"}], "<", 
           RowBox[{"Length", "[", "bestD", "]"}]}], ",", 
          RowBox[{"bestD", "=", "tempD"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", "tries", "}"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "bestD", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5202531254057827`*^9, 3.520253126723934*^9}, {
  3.520253290951268*^9, 3.520253326555656*^9}, {3.520253551574082*^9, 
  3.520253568044718*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["decomposing DT code into diagramtically prime pieces", "Subsection",
 CellChangeTimes->{{3.524442250949638*^9, 3.5244422674478397`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "From", " ", "a", " ", "abriviated", " ", "DTcode", " ", "of", " ", 
    "pairs", " ", "generates", " ", "the", " ", "complete", " ", 
    "unabreviated", " ", "dowker", " ", "code", " ", "of", " ", "pairs"}], 
   "*)"}], 
  RowBox[{
   RowBox[{"completedt", "[", "lst_", "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dt", " ", "=", " ", "lst"}], ",", " ", "pairlst"}], "}"}], 
     ",", "\n", 
     RowBox[{
      RowBox[{"pairlst", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{"i", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"2", 
               RowBox[{"Length", "[", "dt", "]"}]}], ",", "2"}], "}"}]}], 
           "]"}], ",", "dt"}], "}"}], "]"}]}], ";", "\n", 
      RowBox[{"SortBy", "[", 
       RowBox[{
        RowBox[{"Join", "[", 
         RowBox[{"pairlst", ",", " ", 
          RowBox[{"Reverse", "[", 
           RowBox[{"pairlst", ",", "2"}], "]"}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"Part", "[", 
           RowBox[{"#", ",", "1"}], "]"}], "]"}], "&"}]}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.524152349695462*^9, 3.524152423409655*^9}, {
  3.524690857892386*^9, 3.524690860400441*^9}, {3.5246909258653917`*^9, 
  3.524690929069948*^9}, {3.524691001039299*^9, 3.524691012711186*^9}, {
  3.52475771929288*^9, 3.524757723161786*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "From", " ", "a", " ", "unabriviated", " ", "DTcode", " ", "generates", 
    " ", "the", " ", "abreviated", " ", "dowker", " ", "code"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"shortdt", "[", "lst_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", 
        RowBox[{"templst", "=", 
         RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"templst", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"lst", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{
              RowBox[{"2", "i"}], "-", "1"}], ",", "2"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Ceiling", "[", 
             RowBox[{
              RowBox[{"Length", "[", "lst", "]"}], "/", "2"}], "]"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "templst", "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.524075828866828*^9, 3.5240758739608297`*^9}, {
  3.5240759150382233`*^9, 3.524075920423908*^9}, {3.524076094391719*^9, 
  3.524076114738596*^9}, {3.524076174389057*^9, 3.524076204886162*^9}, {
  3.524076254908183*^9, 3.524076289874329*^9}, {3.5240763459981813`*^9, 
  3.524076366815278*^9}, {3.5240764223522263`*^9, 3.524076425591959*^9}, {
  3.524076571842362*^9, 3.524076576750716*^9}, {3.5240766269286423`*^9, 
  3.5240767178595552`*^9}, {3.524076830189787*^9, 3.524076831849978*^9}, {
  3.524076946154222*^9, 3.524076954526174*^9}, {3.524077000322452*^9, 
  3.524077122670051*^9}, {3.5240771765057592`*^9, 3.52407722511976*^9}, {
  3.524077263261248*^9, 3.524077271201892*^9}, {3.524077372659383*^9, 
  3.5240774289941063`*^9}, {3.524077460004613*^9, 3.524077469855328*^9}, {
  3.524077554899535*^9, 3.524077570944294*^9}, {3.524152403456498*^9, 
  3.524152417481613*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "From", " ", "a", " ", "unabriviated", " ", "DTcode", " ", "it", " ", 
    "checks", " ", "whether", " ", "it", " ", "is", " ", "diagramtically", 
    " ", "prime", " ", "or", " ", 
    RowBox[{"not", ".", "\[IndentingNewLine]", "It"}], " ", "returns", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], ")"}], " ", "if", " ", 
    RowBox[{"diam", ".", " ", "prime"}], " ", "other", " ", "with", " ", "it",
     " ", "returns", " ", 
    RowBox[{"(", 
     RowBox[{"a", ",", "b"}], ")"}], " ", "where", " ", "pairing", " ", 
    "mappes", " ", "the", " ", 
    RowBox[{"interval", " ", "[", 
     RowBox[{"a", ",", "b"}], "]"}], " ", "onto", " ", "itself"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"findComposite", "[", "dt_", "]"}], " ", ":=", "\n", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dtlst", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"dt", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "1", ",", " ", 
            RowBox[{"Length", "[", "dt", "]"}]}], "}"}]}], "]"}]}], ",", " ", 
       RowBox[{"res", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"-", "1"}]}], "}"}]}]}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Do", "[", "\n", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"If", " ", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"Sort", "[", " ", 
             RowBox[{"Take", "[", 
              RowBox[{"dtlst", ",", 
               RowBox[{"{", 
                RowBox[{"start", ",", "stop"}], "}"}]}], "]"}], "]"}], " ", "==",
             " ", 
            RowBox[{"Range", "[", 
             RowBox[{"start", ",", " ", "stop"}], "]"}]}], ",", "\n", "\t\t", 
           RowBox[{
            RowBox[{"res", "=", 
             RowBox[{"{", 
              RowBox[{"start", ",", "stop"}], "}"}]}], ";", "\n", "\t\t", 
            RowBox[{"Return", "[", "]"}]}]}], "\n", "\t", "]"}], ";"}], "\n", 
        "\t ", ",", 
        RowBox[{"{", 
         RowBox[{"start", ",", " ", "1", ",", " ", 
          RowBox[{
           RowBox[{"Length", "[", "dtlst", "]"}], "-", "2"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"stop", ",", " ", 
          RowBox[{"start", "+", "1"}], ",", " ", 
          RowBox[{
           RowBox[{"Length", "[", "dtlst", "]"}], "-", "1"}]}], "}"}]}], "\n",
        "\t", "]"}], ";", "\n", "\t", 
      RowBox[{"Return", "[", "res", "]"}], ";"}]}], "\n", "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.524152436775393*^9, 3.524152521079608*^9}, {
  3.524760530997529*^9, 3.524760538308152*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"given", " ", "the", " ", "pair", " ", 
    RowBox[{"(", 
     RowBox[{"a", ",", "b"}], ")"}], " ", "of", " ", "findComposite", " ", 
    "this", " ", "generates", " ", "the", " ", "unabriviated", " ", "DTcode", 
    " ", "of", " ", "the", " ", "knot", " ", "with", " ", "the", " ", 
    "interval", " ", 
    RowBox[{"(", 
     RowBox[{"a", ",", "b"}], ")"}], " ", "deleted"}], "*)"}], 
  RowBox[{
   RowBox[{"fixdtone", "[", 
    RowBox[{"lst_", ",", "pair_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", 
       RowBox[{"templst", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"diff", "=", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"pair", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", 
           RowBox[{"pair", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "+", "1"}]}]}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"lst", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], ">", 
            RowBox[{"Max", "[", "pair", "]"}]}], ",", 
           RowBox[{"a", "=", 
            RowBox[{
             RowBox[{"Sign", "[", 
              RowBox[{"lst", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{"lst", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "-", "diff"}],
               ")"}]}]}], ",", 
           RowBox[{"a", "=", 
            RowBox[{"lst", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"lst", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], ">", 
            RowBox[{"Max", "[", "pair", "]"}]}], ",", 
           RowBox[{"b", "=", 
            RowBox[{
             RowBox[{"Sign", "[", 
              RowBox[{"lst", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{"lst", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], "-", "diff"}],
               ")"}]}]}], ",", 
           RowBox[{"b", "=", 
            RowBox[{"lst", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"templst", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"templst", ",", 
            RowBox[{"{", 
             RowBox[{"a", ",", "b"}], "}"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "lst", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "templst", "]"}]}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.524078237082635*^9, 3.524078422669612*^9}, {
   3.524078504960676*^9, 3.5240785833778887`*^9}, {3.5240786679617653`*^9, 
   3.5240786867034683`*^9}, {3.524078747707008*^9, 3.524078840257534*^9}, {
   3.524152549194285*^9, 3.524152632048766*^9}, 3.524762673156844*^9, {
   3.5247627155752296`*^9, 3.52476275420825*^9}, 3.524763094074297*^9, {
   3.524764510195788*^9, 3.524764622194463*^9}, {3.524764746011435*^9, 
   3.524764749883421*^9}, {3.524764787775486*^9, 3.524764810859358*^9}, {
   3.524772801508342*^9, 3.524772834584241*^9}, {3.52477292946003*^9, 
   3.524772930891787*^9}, 3.524773047188501*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"given", " ", "the", " ", "pair", " ", 
    RowBox[{"(", 
     RowBox[{"a", ",", "b"}], ")"}], " ", "of", " ", "findComposite", " ", 
    "this", " ", "generates", " ", "the", " ", "unabriviated", " ", "DTcode", 
    " ", "of", " ", "the", " ", "knot", " ", "given", " ", "by", " ", "the", 
    " ", "interval", " ", 
    RowBox[{"(", 
     RowBox[{"a", ",", "b"}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"fixdttwo", "[", 
    RowBox[{"lst_", ",", "pair_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"templst", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"diff", "=", 
        RowBox[{
         RowBox[{"Min", "[", "pair", "]"}], "-", "1"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"templst", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"templst", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Sign", "[", 
               RowBox[{"lst", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Abs", "[", 
                 RowBox[{"lst", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "-", 
                "diff"}], ")"}]}], ",", 
             RowBox[{
              RowBox[{"Sign", "[", 
               RowBox[{"lst", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Abs", "[", 
                 RowBox[{"lst", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], "-", 
                "diff"}], ")"}]}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "lst", "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "templst", "]"}]}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.524078237082635*^9, 3.524078422669612*^9}, {
  3.524078504960676*^9, 3.5240785833778887`*^9}, {3.5240786679617653`*^9, 
  3.5240786867034683`*^9}, {3.524078747707008*^9, 3.524078840257534*^9}, {
  3.524079082937531*^9, 3.524079156906068*^9}, {3.5241526383476677`*^9, 
  3.524152668428063*^9}, {3.5247697834815893`*^9, 3.524769848763056*^9}, {
  3.524772987954084*^9, 3.524772988393734*^9}, {3.5247730284102373`*^9, 
  3.5247730353604383`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"given", " ", "the", " ", "pair", " ", 
    RowBox[{"(", 
     RowBox[{"a", ",", "b"}], ")"}], " ", "of", " ", "findComposite", " ", 
    "this", " ", "splites", " ", "the", " ", "DT", " ", "code", " ", "into", 
    " ", "the", " ", "two", " ", "unabriviated", " ", "DTcodes", " ", "of", 
    " ", "the", " ", "knot", " ", "summands"}], "*)"}], 
  RowBox[{
   RowBox[{"splitdt", "[", 
    RowBox[{"lst_", ",", "pair_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"templst", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"a", "=", 
        RowBox[{"Min", "[", "pair", "]"}]}], ",", 
       RowBox[{"b", "=", 
        RowBox[{"Max", "[", "pair", "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"fixdtone", "[", 
           RowBox[{
            RowBox[{"Drop", "[", 
             RowBox[{"lst", ",", "pair"}], "]"}], ",", "pair"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"Part", "[", 
             RowBox[{"#", ",", "1"}], "]"}], "]"}], "&"}]}], "]"}], ",", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"fixdttwo", "[", 
           RowBox[{
            RowBox[{"Drop", "[", 
             RowBox[{
              RowBox[{"Drop", "[", 
               RowBox[{"lst", ",", 
                RowBox[{"b", "-", 
                 RowBox[{"Length", "[", "lst", "]"}]}]}], "]"}], ",", 
              RowBox[{"a", "-", "1"}]}], "]"}], ",", "pair"}], "]"}], ",", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"Part", "[", 
             RowBox[{"#", ",", "1"}], "]"}], "]"}], "&"}]}], "]"}]}], "}"}], 
      "]"}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.524079235982059*^9, 3.524079455480756*^9}, {
  3.524079574766933*^9, 3.5240795758944693`*^9}, {3.524079640341558*^9, 
  3.524079669982913*^9}, {3.524079728571*^9, 3.5240797290669537`*^9}, {
  3.524079759462369*^9, 3.524079842912112*^9}, {3.524152673500861*^9, 
  3.524152726320221*^9}, {3.524773062007266*^9, 3.524773095983879*^9}, {
  3.524773132282022*^9, 3.5247731814100237`*^9}, {3.524773287805072*^9, 
  3.52477330705378*^9}, {3.52477339477033*^9, 3.5247734241261787`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "given", " ", "unabriviated", " ", "DTcode", " ", "this", " ", "returns", 
     " ", "a", " ", "list", " ", "of", " ", "DT", " ", "codes", " ", "that", 
     " ", "are", " ", "the", " ", "diagrammatically", " ", "prime", " ", 
     "summands", " ", "of", " ", "the", " ", "original"}], ";", " ", 
    RowBox[{
    "any", " ", "summand", " ", "has", " ", "been", " ", "reduced", " ", "by",
      " ", "R1", " ", "and", " ", "R2", " ", "moved", " ", "and", " ", "is", 
     " ", "only", " ", "returned", " ", "if", " ", "it", " ", "is", " ", 
     "not", " ", "the", " ", "unknot", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"that", " ", "is"}], ",", " ", 
       RowBox[{
        RowBox[{
        "has", " ", "three", " ", "or", " ", "more", " ", "crossings"}], ";", 
        " ", 
        RowBox[{
        "result", " ", "is", " ", "returned", " ", "as", " ", "a", " ", 
         "list", " ", "of", " ", 
         RowBox[{"DTcodes", "."}]}]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"decomposedt", "[", "lst_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"comlist", ",", " ", 
       RowBox[{"primelist", "=", 
        RowBox[{"{", "}"}]}], ",", " ", "pair", ",", " ", "xx", ",", " ", 
       "reduced"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"comlist", "=", 
       RowBox[{"{", "lst", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"comlist", "\[NotEqual]", 
         RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", "\t\t", 
        RowBox[{
         RowBox[{"reduced", " ", "=", " ", 
          RowBox[{"reduceD", "[", 
           RowBox[{
            RowBox[{"comlist", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", "True", ",", " ", 
            "True"}], "]"}]}], ";", "\[IndentingNewLine]", "\t\t", 
         RowBox[{"If", " ", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "reduced", "]"}], " ", "\[GreaterEqual]", 
            " ", "3"}], ",", "\[IndentingNewLine]", "\t\t    ", 
           RowBox[{
            RowBox[{"pair", "=", 
             RowBox[{"findComposite", "[", "reduced", "]"}]}], ";", 
            "\[IndentingNewLine]", "\t\t     ", 
            RowBox[{"If", " ", "[", 
             RowBox[{
              RowBox[{"Evaluate", "[", 
               RowBox[{"pair", "==", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", "\t\t           ", 
              RowBox[{"(*", " ", "then", " ", "*)"}], "\[IndentingNewLine]", 
              "\t\t\t ", 
              RowBox[{
               RowBox[{"primelist", "=", 
                RowBox[{"Append", "[", 
                 RowBox[{"primelist", ",", "reduced"}], "]"}]}], ";"}], ",", 
              "\[IndentingNewLine]", "\t\t\t", 
              RowBox[{"(*", " ", "else", " ", "*)"}], "\[IndentingNewLine]", 
              "\t\t\t\t", 
              RowBox[{
               RowBox[{"xx", "=", 
                RowBox[{"splitdt", "[", 
                 RowBox[{"reduced", ",", "pair"}], "]"}]}], ";", 
               "\[IndentingNewLine]", "\t\t\t\t", 
               RowBox[{"comlist", "=", 
                RowBox[{"Append", "[", 
                 RowBox[{"comlist", ",", 
                  RowBox[{"xx", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", "\t\t\t\t", 
               RowBox[{"comlist", "=", 
                RowBox[{"Append", "[", 
                 RowBox[{"comlist", ",", 
                  RowBox[{"xx", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}], ",", 
              "\[IndentingNewLine]", "\t\t\t", 
              RowBox[{"(*", " ", "neither", " ", "*)"}], 
              "\[IndentingNewLine]", "\t\t\t\t", 
              RowBox[{
               RowBox[{
               "Print", "[", "\"\<condition neither true nor false\>\"", 
                "]"}], ";"}]}], "\[IndentingNewLine]", "\t\t    ", "]"}], 
            ";"}]}], "\[IndentingNewLine]", "\t\t", "]"}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{"comlist", "=", 
          RowBox[{"Drop", "[", 
           RowBox[{"comlist", ",", "1"}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "primelist", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.525354403921875*^9, 3.525354470125*^9}, {
  3.525357249875*^9, 3.525357259078125*^9}, {3.525357304875*^9, 
  3.525357601921875*^9}, {3.525357632015625*^9, 3.525357635984375*^9}, {
  3.525357675984375*^9, 3.52535779078125*^9}, {3.525357903375*^9, 
  3.525358039453125*^9}, {3.525358074421875*^9, 3.52535809209375*^9}, {
  3.5253581440625*^9, 3.52535817165625*^9}, {3.5253585760625*^9, 
  3.5253586489375*^9}, {3.5253586960625*^9, 3.525358738453125*^9}, {
  3.525358769546875*^9, 3.5253587838125*^9}, {3.52535886375*^9, 
  3.525358907375*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Planar Diagram", "Section",
 CellChangeTimes->{{3.524341432760991*^9, 3.5243414378872843`*^9}}],

Cell[CellGroupData[{

Cell["initialization", "Subsection",
 CellChangeTimes->{{3.5243415082963114`*^9, 3.5243415113064833`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"checkIndicesPD", "[", 
   RowBox[{"i1_", ",", "i2_", ",", "len_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"nI1", "=", "i1"}], ",", 
      RowBox[{"nI2", "=", "i2"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i1", "\[Equal]", "len"}], ",", 
       RowBox[{"nI1", "=", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i2", "\[Equal]", "len"}], ",", 
       RowBox[{"nI2", "=", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"nI1", "\[Equal]", "nI2"}], "||", 
        RowBox[{
         RowBox[{"nI1", "+", "1"}], "\[Equal]", "nI2"}], "||", 
        RowBox[{
         RowBox[{"nI1", "-", "1"}], "\[Equal]", "nI2"}], "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nI1", "\[Equal]", 
           RowBox[{"len", "-", "1"}]}], "&&", 
          RowBox[{"nI2", "\[Equal]", "1"}]}], ")"}], "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nI2", "\[Equal]", 
           RowBox[{"len", "-", "1"}]}], "&&", 
          RowBox[{"nI1", "\[Equal]", "1"}]}], ")"}]}], ",", 
       RowBox[{"Return", "[", "False", "]"}], ",", 
       RowBox[{"Return", "[", "True", "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.517334490612739*^9, 3.5173345626801434`*^9}, {
   3.51759451896173*^9, 3.517594531715073*^9}, {3.51759456780858*^9, 
   3.5175946070891123`*^9}, {3.519651853112482*^9, 3.519651863868976*^9}, {
   3.51999216493771*^9, 3.519992208203755*^9}, {3.519992274379037*^9, 
   3.5199922927692966`*^9}, 3.5200794665056458`*^9, {3.524047752814123*^9, 
   3.524047753559166*^9}, 3.524341548746625*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["tools", "Subsection",
 CellChangeTimes->{{3.524341579656393*^9, 3.5243415802654276`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"isOnRight", "[", 
   RowBox[{
   "x1_", ",", "y1_", ",", "vx_", ",", "vy_", ",", "px_", ",", "py_"}], "]"}],
   ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"vx", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"vy", ">", "0"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Return", "[", 
            RowBox[{"px", ">", "x1"}], "]"}], ";"}], "\[IndentingNewLine]", 
          ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Return", "[", 
            RowBox[{"px", "<", "x1"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"vy", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"vx", ">", "0"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Return", "[", 
               RowBox[{"py", "<", "y1"}], "]"}], ";"}], "\[IndentingNewLine]",
              ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Return", "[", 
               RowBox[{"py", ">", "y1"}], "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"vx", ">", "0"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Return", "[", 
               RowBox[{"py", "<", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"vy", "/", "vx"}], ")"}], "*", 
                   RowBox[{"(", 
                    RowBox[{"px", "-", "x1"}], ")"}]}], "+", "y1"}], ")"}]}], 
               "]"}], ";"}], "\[IndentingNewLine]", ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Return", "[", 
               RowBox[{"py", ">", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"vy", "/", "vx"}], ")"}], "*", 
                   RowBox[{"(", 
                    RowBox[{"px", "-", "x1"}], ")"}]}], "+", "y1"}], ")"}]}], 
               "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5240544368994308`*^9, 3.5240547745327425`*^9}, {
  3.524054866618009*^9, 3.524054918049951*^9}, {3.524054956481149*^9, 
  3.524055034352603*^9}, {3.5240551299890733`*^9, 3.5240551456489687`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pointOnLine", "[", 
   RowBox[{
   "x1_", ",", "y1_", ",", "vx_", ",", "vy_", ",", "px_", ",", "py_"}], "]"}],
   ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"vx", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Return", "[", 
         RowBox[{"px", "\[Equal]", "x1"}], "]"}], ";"}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"vy", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Return", "[", 
            RowBox[{"py", "\[Equal]", "y1"}], "]"}], ";"}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Return", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"px", "-", "x1"}], ")"}], "/", "vx"}], ")"}], 
             "\[Equal]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"py", "-", "y1"}], ")"}], "/", "vy"}], ")"}]}], "]"}],
            ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5239864622196274`*^9, 3.5239865202169447`*^9}, {
  3.52398670249337*^9, 3.5239867054655404`*^9}, {3.5239868684328613`*^9, 
  3.5239868730111237`*^9}, {3.5239869057269945`*^9, 3.5239869977402573`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pointTvalue", "[", 
   RowBox[{
   "x1_", ",", "y1_", ",", "vx_", ",", "vy_", ",", "px_", ",", "py_"}], "]"}],
   ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"vx", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Return", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"py", "-", "y1"}], ")"}], "/", "vy"}], "]"}], ";"}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Return", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"px", "-", "x1"}], ")"}], "/", "vx"}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.52398799783746*^9, 3.5239881362803783`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"isParallel", "[", 
   RowBox[{"v1x_", ",", "v1y_", ",", "v2x_", ",", "v2y_"}], "]"}], ":=", 
  RowBox[{"Return", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"v1x", " ", "v2y"}], "-", 
      RowBox[{"v1y", " ", "v2x"}]}], ")"}], "\[Equal]", "0"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5239874293229427`*^9, 3.523987496614792*^9}, {
  3.523988567362035*^9, 3.5239885739714127`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"isPerpendicular", "[", 
   RowBox[{"v1x_", ",", "v1y_", ",", "v2x_", ",", "v2y_"}], "]"}], ":=", 
  RowBox[{"Return", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"v1x", "\[Equal]", "0"}], "&&", 
      RowBox[{"v1y", "\[Equal]", "0"}]}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"v2x", "\[Equal]", "0"}], "&&", 
      RowBox[{"v2y", "\[Equal]", "0"}]}], ")"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5240085679282875`*^9, 3.5240086206423025`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getEdgeIntersection", "[", 
   RowBox[{
   "x1_", ",", "y1_", ",", "x2_", ",", "y2_", ",", "v1x_", ",", "v1y_", ",", 
    "v2x_", ",", "v2y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tset", ",", 
      RowBox[{"valid", "=", "True"}], ",", 
      RowBox[{"inter", "=", "True"}], ",", 
      RowBox[{"print", "=", "False"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"isPerpendicular", "[", 
        RowBox[{"v1x", ",", "v1y", ",", "v2x", ",", "v2y"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{"print", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "Print", "[", "\"\<bad projection from perpendicular segment\>\"", 
            "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{"!", "valid"}], "}"}], "]"}], ";"}], "\[IndentingNewLine]", 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"isParallel", "[", 
           RowBox[{"v1x", ",", "v1y", ",", "v2x", ",", "v2y"}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"pointOnLine", "[", 
              RowBox[{
              "x1", ",", "y1", ",", "v1x", ",", "v1y", ",", "x2", ",", "y2"}],
               "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"tset", "=", 
               RowBox[{"Sort", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"pointTvalue", "[", 
                   RowBox[{
                   "x1", ",", "y1", ",", "v1x", ",", "v1y", ",", "x2", ",", 
                    "y2"}], "]"}], ",", 
                  RowBox[{"pointTvalue", "[", 
                   RowBox[{"x1", ",", "y1", ",", "v1x", ",", "v1y", ",", 
                    RowBox[{"x2", "+", "v2x"}], ",", 
                    RowBox[{"y2", "+", "v2y"}]}], "]"}]}], "}"}], "]"}]}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"0", "\[LessEqual]", 
                  RowBox[{"tset", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "1"}], "||", 
                 RowBox[{"0", "\[LessEqual]", 
                  RowBox[{"tset", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "\[LessEqual]", "1"}], "||", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"tset", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "<", "0"}], "&&", 
                   RowBox[{
                    RowBox[{"tset", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ">", "1"}]}], ")"}]}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{"print", ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    "Print", "[", 
                    "\"\<bad projection from parallel segments\>\"", "]"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Return", "[", 
                  RowBox[{"{", 
                   RowBox[{"!", "valid"}], "}"}], "]"}], ";"}], 
                "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Return", "[", 
                  RowBox[{"{", 
                   RowBox[{"valid", ",", 
                    RowBox[{"!", "inter"}]}], "}"}], "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Return", "[", 
               RowBox[{"{", 
                RowBox[{"valid", ",", 
                 RowBox[{"!", "inter"}]}], "}"}], "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tset", "=", 
            RowBox[{"{", 
             RowBox[{
              FractionBox[
               RowBox[{
                RowBox[{"v2x", 
                 RowBox[{"(", 
                  RowBox[{"y2", "-", "y1"}], ")"}]}], "-", 
                RowBox[{"v2y", 
                 RowBox[{"(", 
                  RowBox[{"x2", "-", "x1"}], ")"}]}]}], 
               RowBox[{
                RowBox[{"v2x", " ", "v1y"}], "-", 
                RowBox[{"v1x", " ", "v2y"}]}]], ",", 
              FractionBox[
               RowBox[{
                RowBox[{"v1x", 
                 RowBox[{"(", 
                  RowBox[{"y2", "-", "y1"}], ")"}]}], "-", 
                RowBox[{"v1y", 
                 RowBox[{"(", 
                  RowBox[{"x2", "-", "x1"}], ")"}]}]}], 
               RowBox[{
                RowBox[{"v2x", " ", "v1y"}], "-", 
                RowBox[{"v1x", " ", "v2y"}]}]]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"0", "<", 
               RowBox[{"tset", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "<", "1"}], "&&", 
              RowBox[{"0", "<", 
               RowBox[{"tset", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "<", "1"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Return", "[", 
               RowBox[{"{", 
                RowBox[{"valid", ",", "inter", ",", "tset"}], "}"}], "]"}], 
              ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"tset", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], "||", 
                   RowBox[{
                    RowBox[{"tset", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "1"}]}], 
                  ")"}], "&&", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"tset", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}], "||", 
                   RowBox[{
                    RowBox[{"tset", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "1"}]}], 
                  ")"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{"print", ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    "Print", "[", 
                    "\"\<bad projection from vertex placement\>\"", "]"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Return", "[", 
                  RowBox[{"{", 
                   RowBox[{"!", "valid"}], "}"}], "]"}], ";"}], 
                "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Return", "[", 
                  RowBox[{"{", 
                   RowBox[{"valid", ",", 
                    RowBox[{"!", "inter"}]}], "}"}], "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5239861382941*^9, 3.5239861639155655`*^9}, {
   3.523986200895681*^9, 3.523986221827878*^9}, {3.523986273197816*^9, 
   3.5239862748139086`*^9}, {3.523987204206067*^9, 3.5239872836206093`*^9}, {
   3.5239873364586315`*^9, 3.5239873415519223`*^9}, {3.5239876372538357`*^9, 
   3.523987679415247*^9}, {3.5239878757404766`*^9, 3.5239879064852347`*^9}, {
   3.5239881798048677`*^9, 3.523988230994796*^9}, {3.523988263879677*^9, 
   3.523988502620332*^9}, {3.5239886007019415`*^9, 3.5239886185439625`*^9}, {
   3.5239887365937147`*^9, 3.5239887448331857`*^9}, {3.523989200862269*^9, 
   3.523989262911818*^9}, {3.523989335792987*^9, 3.5239893698169327`*^9}, {
   3.5239898912537575`*^9, 3.523989898228156*^9}, {3.5239908494435625`*^9, 
   3.5239909678623357`*^9}, {3.5240083038781843`*^9, 
   3.5240083941593485`*^9}, {3.524008559859826*^9, 3.5240085635480366`*^9}, {
   3.5240086261156154`*^9, 3.524008698030729*^9}, {3.524008733827776*^9, 
   3.52400873616891*^9}, 3.5240088244139576`*^9, {3.5240435039231005`*^9, 
   3.5240435608203545`*^9}, {3.5240449907111397`*^9, 3.524044992321232*^9}, 
   3.5240450593080635`*^9, {3.524057340479506*^9, 3.5240573441217146`*^9}, {
   3.5240573748214703`*^9, 3.524057385778097*^9}, {3.524057438921137*^9, 
   3.5240574412702713`*^9}, {3.524342554288139*^9, 3.524342586498981*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sortarcs", "[", 
   RowBox[{"a1_", ",", "a2_", ",", "a3_", ",", "len_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"islesserarc", "[", 
     RowBox[{"a1", ",", "a2", ",", "len"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"a1", ",", "a2", ",", "a3"}], "}"}], "\[IndentingNewLine]", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"a3", ",", "a2", ",", "a1"}], "}"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.524598011123274*^9, 3.5245980721827664`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getopp", "[", "x_", "]"}], ":=", 
   RowBox[{"Which", "[", 
    RowBox[{
     RowBox[{"x", "\[Equal]", "1"}], ",", "3", ",", 
     RowBox[{"x", "\[Equal]", "2"}], ",", "4", ",", 
     RowBox[{"x", "\[Equal]", "3"}], ",", "1", ",", 
     RowBox[{"x", "\[Equal]", "4"}], ",", "2"}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5244453525771513`*^9, 3.5244453740053773`*^9}, {
  3.5244759646644077`*^9, 3.5244759701297207`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"islesserarc", "[", 
    RowBox[{"a1_", ",", "a2_", ",", "len_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"a2", "-", "a1"}], "\[Equal]", "1"}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"a2", "\[Equal]", "1"}], "&&", 
      RowBox[{"a1", "\[Equal]", "len"}]}], ")"}]}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.524475967407565*^9, 3.5244760152272997`*^9}, {
  3.524477101210415*^9, 3.5244771029075117`*^9}, {3.5244792858303676`*^9, 
  3.524479288579525*^9}, {3.524532413362341*^9, 3.524532428183189*^9}, {
  3.524532520359461*^9, 3.5245325241106753`*^9}, {3.5245325577846017`*^9, 
  3.524532561989842*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getlesserarc", "[", 
    RowBox[{"a1_", ",", "a2_", ",", "len_"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"a2", "-", "a1"}], "\[Equal]", "1"}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"a2", "\[Equal]", "1"}], "&&", 
        RowBox[{"a1", "\[Equal]", "len"}]}], ")"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Return", "[", "a1", "]"}], ";"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Return", "[", "a2", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.524569213829176*^9, 3.5245692778808393`*^9}, {
  3.5245694003248425`*^9, 3.524569400610859*^9}, {3.524569880804325*^9, 
  3.524569887962734*^9}, {3.5245706634140873`*^9, 3.524570683356228*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ordercrossings", "[", 
    RowBox[{
    "c1_", ",", "c2_", ",", "arc_", ",", "p1_", ",", "p2_", ",", "len_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a1", ",", "a2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a1", "=", 
       RowBox[{"c1", "[", 
        RowBox[{"[", 
         RowBox[{"getopp", "[", "p1", "]"}], "]"}], "]"}]}], ";", 
      RowBox[{"a2", "=", 
       RowBox[{"c2", "[", 
        RowBox[{"[", 
         RowBox[{"getopp", "[", "p2", "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a2", "-", "a1"}], "\[Equal]", "2"}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a1", "\[Equal]", "len"}], "&&", 
           RowBox[{"a2", "\[Equal]", "2"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a1", "\[Equal]", 
            RowBox[{"(", 
             RowBox[{"len", "-", "1"}], ")"}]}], "&&", 
           RowBox[{"a2", "\[Equal]", "1"}]}], ")"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{"c1", ",", "c2", ",", 
            RowBox[{"{", 
             RowBox[{"a1", ",", "arc", ",", "a2"}], "}"}]}], "}"}], "]"}], 
         ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{"c2", ",", "c1", ",", 
            RowBox[{"{", 
             RowBox[{"a2", ",", "arc", ",", "a1"}], "}"}]}], "}"}], "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5244455634982157`*^9, 3.524445602652455*^9}, {
  3.524445753151063*^9, 3.5244457573623037`*^9}, {3.524446040617505*^9, 
  3.524446041768571*^9}, {3.5244460773406057`*^9, 3.5244461686278267`*^9}, {
  3.5244463522723308`*^9, 3.524446433857997*^9}, {3.5244466758568387`*^9, 
  3.524446715273093*^9}, {3.524519048439488*^9, 3.524519109288968*^9}, {
  3.524573895840972*^9, 3.5245738986991353`*^9}, {3.5245739318970337`*^9, 
  3.5245739319750385`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["R1", "Subsection",
 CellChangeTimes->{{3.524613076808996*^9, 3.5246130772530217`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"findR1PD", "[", "code_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"found", "=", "False"}], ",", "res", ",", 
      RowBox[{"ind", "=", "1"}], ",", "tal", ",", "cross", ",", 
      RowBox[{"unknot", "=", "True"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"!", "found"}], "&&", 
        RowBox[{"ind", "\[LessEqual]", 
         RowBox[{"Length", "[", "code", "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "code", "]"}], "<", "3"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"found", "=", "True"}], ";", "\[IndentingNewLine]", 
           RowBox[{"res", "=", 
            RowBox[{"{", 
             RowBox[{"found", ",", "unknot"}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"cross", "=", 
         RowBox[{"code", "[", 
          RowBox[{"[", "ind", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"cross", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
           RowBox[{"cross", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"found", "=", "True"}], ";", "\[IndentingNewLine]", 
           RowBox[{"res", "=", 
            RowBox[{"{", 
             RowBox[{"found", ",", 
              RowBox[{"!", "unknot"}], ",", "ind", ",", 
              RowBox[{"cross", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"Sort", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"cross", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"cross", "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}]}], "}"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"cross", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
           RowBox[{"cross", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"found", "=", "True"}], ";", "\[IndentingNewLine]", 
           RowBox[{"res", "=", 
            RowBox[{"{", 
             RowBox[{"found", ",", 
              RowBox[{"!", "unknot"}], ",", "ind", ",", 
              RowBox[{"cross", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"Sort", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"cross", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"cross", "[", 
                  RowBox[{"[", "4", "]"}], "]"}]}], "}"}], "]"}]}], "}"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"cross", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", 
           RowBox[{"cross", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"found", "=", "True"}], ";", "\[IndentingNewLine]", 
           RowBox[{"res", "=", 
            RowBox[{"{", 
             RowBox[{"found", ",", 
              RowBox[{"!", "unknot"}], ",", "ind", ",", 
              RowBox[{"cross", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"Sort", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"cross", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"cross", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}]}], "}"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"cross", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
           RowBox[{"cross", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"found", "=", "True"}], ";", "\[IndentingNewLine]", 
           RowBox[{"res", "=", 
            RowBox[{"{", 
             RowBox[{"found", ",", 
              RowBox[{"!", "unknot"}], ",", "ind", ",", 
              RowBox[{"cross", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"Sort", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"cross", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], ",", 
                 RowBox[{"cross", "[", 
                  RowBox[{"[", "4", "]"}], "]"}]}], "}"}], "]"}]}], "}"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"ind", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"found", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Return", "[", "res", "]"}], ";"}], "\[IndentingNewLine]", 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Return", "[", 
         RowBox[{"{", "False", "}"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQvU/S+cMyx1eO2/6d+giiVylO+gWidUSjWJYDaTv5
DXwg+pngfCUQrXfZRBdEB3K46oHoF8EJob+AtKdOfDiI7ru5ogREf9AQLgXR
fM+M2kA0t9fkiSB6gv75mSBa5V/5HBAdo7dlLYhu8l2yEUQf4NI8CKJ35Hac
BNHsqpKXQfS5T243QHS8UEvfHyDtsrxkKojelP7/Goju7phwHUTv3HrpI4ie
4xT5GUSrPGP8A6KvVHYw/gXSK7pZOUE068YFIiA6LvCJNIi2m/kRTDdKpCiA
aHelxSogOq3tkwaIfrKWRQ9Ex65k0foPpOuUr+iDaKaF8wKEnV451nw8DqYB
6hyv/w==
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"reduceR1PD", "[", "code_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "res", ",", "pos", " ", ",", "arc", ",", "found", ",", "max", ",", 
      "redcode", ",", "func", ",", "reduced"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"redcode", "=", "code"}], ";", "\[IndentingNewLine]", 
     RowBox[{"res", "=", 
      RowBox[{"findR1PD", "[", "redcode", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"found", "=", 
      RowBox[{"res", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"max", "=", 
      RowBox[{"Max", "[", 
       RowBox[{"Flatten", "[", "redcode", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{"found", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"res", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"redcode", "=", 
            RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"found", "=", "False"}], ";"}], "\[IndentingNewLine]", ",",
           "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"res", "[", 
               RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "max"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"func", "[", "x_", "]"}], ":=", 
               RowBox[{"Which", "[", 
                RowBox[{
                 RowBox[{"x", "\[Equal]", 
                  RowBox[{"(", 
                   RowBox[{"max", "-", "1"}], ")"}]}], ",", "1", ",", "True", 
                 ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"res", "[", 
                  RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "1"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"func", "[", "x_", "]"}], ":=", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{"x", "\[Equal]", "max"}], ",", "1", ",", 
                    RowBox[{"x", ">", "1"}], ",", 
                    RowBox[{"x", "-", "1"}]}], "]"}]}], ";"}], 
                "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"func", "[", "x_", "]"}], ":=", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{"x", ">", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}], ",", 
                    RowBox[{"x", "-", "2"}], ",", "True", ",", "x"}], "]"}]}],
                  ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"redcode", "=", 
            RowBox[{"Replace", "[", 
             RowBox[{
              RowBox[{"Drop", "[", 
               RowBox[{"redcode", ",", 
                RowBox[{"{", 
                 RowBox[{"res", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "}"}]}], "]"}], ",", 
              RowBox[{"x_", "\[RuleDelayed]", 
               RowBox[{"func", "[", "x", "]"}]}], ",", 
              RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"res", "=", 
            RowBox[{"findR1PD", "[", "redcode", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"found", "=", 
            RowBox[{"res", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"max", "=", 
            RowBox[{"Max", "[", 
             RowBox[{"Flatten", "[", "redcode", "]"}], "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"reduced", "=", 
      RowBox[{
       RowBox[{"Length", "[", "redcode", "]"}], "<", 
       RowBox[{"Length", "[", "code", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"reduced", ",", "redcode"}], "}"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQfWFBxafFjq8c38f6fAHRN51Yd6wC0hZ/jx4D0ZyC
e5+C6LxJK1+CaNmtj1pXA2mD+vZOEH30+ESttUC6rWIPmP4447zRXyCd5HvS
HETzic61A9GrIrbZg2gT1iMuIDrb4bkbiHaUfDQTRF9K2TcPRPPYuqwF0Q5L
Vq0H0XYXDir/A9KVR7drgehAA8NbIDoib+8rEG0ZUyD6H0izdOwVA9EKOmuN
QPT1OZvA9B0vkToQPe32jkYQrfKZuQ9Ec+mf6gfRXgobpoLovr2cs0G01c9D
i0C0mf6JZSB61ee0BgYnoPvsZ7eD6N/T/9wQBtI1OZn3QXSG35fHIDro0Oun
ILqjzcxQBEg3CaWD6WxbbzMQ7bqu2w5Ez3HV6gXLx8/pA9EAD0DGZQ==
  "]]
}, Closed]],

Cell[CellGroupData[{

Cell["R2", "Subsection",
 CellChangeTimes->{{3.524613085915517*^9, 3.5246130861895328`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"findR2PD", "[", "code_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"found", "=", "False"}], ",", 
      RowBox[{"unknot", "=", "True"}], ",", "c1", ",", "c2", ",", "ab1", ",", 
      "ab2", ",", "ab3", ",", "at1", ",", "at2", ",", "at3", ",", "p11", ",", 
      "p12", ",", "p21", ",", "p22", ",", "int", ",", "res", ",", "max"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"max", "=", 
      RowBox[{"Max", "[", 
       RowBox[{"Flatten", "[", "code", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "code", "]"}], "<", "3"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"found", "=", "True"}], ";", "\[IndentingNewLine]", 
        RowBox[{"res", "=", 
         RowBox[{"{", 
          RowBox[{"found", ",", "unknot"}], "}"}]}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i1", "=", "1"}], ",", 
       RowBox[{"i1", "\[LessEqual]", 
        RowBox[{"Length", "[", "code", "]"}]}], ",", 
       RowBox[{"i1", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{"found", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"c1", "=", 
         RowBox[{"code", "[", 
          RowBox[{"[", "i1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i2", "=", 
           RowBox[{"i1", "+", "1"}]}], ",", 
          RowBox[{"i2", "\[LessEqual]", 
           RowBox[{"Length", "[", "code", "]"}]}], ",", 
          RowBox[{"i2", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"c2", "=", 
            RowBox[{"code", "[", 
             RowBox[{"[", "i2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"int", "=", 
            RowBox[{"Intersection", "[", 
             RowBox[{"c1", ",", "c2"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "int", "]"}], ">", "1"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"p11", "=", 
               RowBox[{
                RowBox[{"Position", "[", 
                 RowBox[{"c1", ",", 
                  RowBox[{"int", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
              RowBox[{"p12", "=", 
               RowBox[{
                RowBox[{"Position", "[", 
                 RowBox[{"c1", ",", 
                  RowBox[{"int", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"p21", "=", 
               RowBox[{
                RowBox[{"Position", "[", 
                 RowBox[{"c2", ",", 
                  RowBox[{"int", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
              RowBox[{"p22", "=", 
               RowBox[{
                RowBox[{"Position", "[", 
                 RowBox[{"c2", ",", 
                  RowBox[{"int", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"ab1", ",", "ab2", ",", "ab3"}], "}"}], "=", 
               RowBox[{"sortarcs", "[", 
                RowBox[{
                 RowBox[{"c1", "[", 
                  RowBox[{"[", 
                   RowBox[{"getopp", "[", "p11", "]"}], "]"}], "]"}], ",", 
                 RowBox[{"int", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"c2", "[", 
                  RowBox[{"[", 
                   RowBox[{"getopp", "[", "p21", "]"}], "]"}], "]"}], ",", 
                 "max"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"at1", ",", "at2", ",", "at3"}], "}"}], "=", 
               RowBox[{"sortarcs", "[", 
                RowBox[{
                 RowBox[{"c1", "[", 
                  RowBox[{"[", 
                   RowBox[{"getopp", "[", "p12", "]"}], "]"}], "]"}], ",", 
                 RowBox[{"int", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"c2", "[", 
                  RowBox[{"[", 
                   RowBox[{"getopp", "[", "p22", "]"}], "]"}], "]"}], ",", 
                 "max"}], "]"}]}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Mod", "[", 
                  RowBox[{"p11", ",", "2"}], "]"}], "\[Equal]", 
                 RowBox[{"Mod", "[", 
                  RowBox[{"p21", ",", "2"}], "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"found", "=", "True"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"res", "=", 
                  RowBox[{"{", 
                   RowBox[{"found", ",", 
                    RowBox[{"!", "unknot"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i1", ",", "i2"}], "}"}], ",", "int", ",", 
                    RowBox[{"{", 
                    RowBox[{"ab1", ",", "ab2", ",", "ab3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"at1", ",", "at2", ",", "at3"}], "}"}]}], "}"}]}],
                  ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"found", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Return", "[", "res", "]"}], ";"}], "\[IndentingNewLine]", 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Return", "[", 
         RowBox[{"{", "False", "}"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.524597589946184*^9, 3.524597629615453*^9}, 
   3.5245976737379766`*^9, {3.5245977154373617`*^9, 3.524597731772296*^9}, {
   3.524597782703209*^9, 3.524597805831532*^9}, {3.5245978583105335`*^9, 
   3.5245979625814977`*^9}, {3.5245981072197704`*^9, 
   3.5245982181221137`*^9}, {3.5245983198019295`*^9, 3.52459840024553*^9}, {
   3.5245984460701513`*^9, 3.5245984730866966`*^9}, 3.524598540013525*^9, {
   3.524598596074731*^9, 3.524598717342667*^9}, {3.524600659769167*^9, 
   3.5246006671205873`*^9}, {3.5246077879774923`*^9, 
   3.5246077889765496`*^9}, {3.5246078509860964`*^9, 3.524607870877234*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"reduceR2PD", "[", "code_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "res", ",", "pos", " ", ",", "arc", ",", "found", ",", "max", ",", 
      "adjmax", ",", "adjres", ",", "redcode", ",", "func1", ",", "func2", 
      ",", "reduced", ",", "a", ",", "b", ",", "testtab", ",", "testf1", ",", 
      "testf2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"redcode", "=", "code"}], ";", "\[IndentingNewLine]", 
     RowBox[{"res", "=", 
      RowBox[{"findR2PD", "[", "redcode", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"found", "=", 
      RowBox[{"res", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"max", "=", 
      RowBox[{"Max", "[", 
       RowBox[{"Flatten", "[", "redcode", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{"found", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"res", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"redcode", "=", 
            RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"found", "=", "False"}], ";"}], "\[IndentingNewLine]", ",",
           "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Print", "[", "redcode", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Print", "[", "res", "]"}], ";"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"res", "[", 
               RowBox[{"[", 
                RowBox[{"5", ",", "2"}], "]"}], "]"}], "\[Equal]", "max"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"func1", "[", "x_", "]"}], ":=", 
               RowBox[{"Which", "[", 
                RowBox[{
                 RowBox[{"x", "\[Equal]", "max"}], ",", 
                 RowBox[{
                  RowBox[{"res", "[", 
                   RowBox[{"[", 
                    RowBox[{"5", ",", "1"}], "]"}], "]"}], "-", "1"}], ",", 
                 RowBox[{"x", "\[Equal]", "1"}], ",", 
                 RowBox[{
                  RowBox[{"res", "[", 
                   RowBox[{"[", 
                    RowBox[{"5", ",", "1"}], "]"}], "]"}], "-", "1"}], ",", 
                 "True", ",", 
                 RowBox[{"x", "-", "1"}]}], "]"}]}], ";"}], 
             "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"res", "[", 
                  RowBox[{"[", 
                   RowBox[{"5", ",", "2"}], "]"}], "]"}], "\[Equal]", "1"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"func1", "[", "x_", "]"}], ":=", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{"x", "\[Equal]", "1"}], ",", 
                    RowBox[{
                    RowBox[{"res", "[", 
                    RowBox[{"[", 
                    RowBox[{"5", ",", "1"}], "]"}], "]"}], "-", "2"}], ",", 
                    RowBox[{"x", "\[Equal]", "2"}], ",", 
                    RowBox[{
                    RowBox[{"res", "[", 
                    RowBox[{"[", 
                    RowBox[{"5", ",", "1"}], "]"}], "]"}], "-", "2"}], ",", 
                    "True", ",", 
                    RowBox[{"x", "-", "2"}]}], "]"}]}], ";"}], 
                "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"func1", "[", "x_", "]"}], ":=", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{"x", "\[Equal]", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", 
                    RowBox[{"5", ",", "1"}], "]"}], "]"}]}], ",", "x", ",", 
                    RowBox[{"x", "\[Equal]", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", 
                    RowBox[{"5", ",", "2"}], "]"}], "]"}]}], ",", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", 
                    RowBox[{"5", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"x", "\[Equal]", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", 
                    RowBox[{"5", ",", "3"}], "]"}], "]"}]}], ",", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", 
                    RowBox[{"5", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"x", ">", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", 
                    RowBox[{"5", ",", "3"}], "]"}], "]"}]}], ",", 
                    RowBox[{"x", "-", "2"}], ",", "True", ",", "x"}], "]"}]}],
                  ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"adjmax", "=", 
            RowBox[{"func1", "[", "max", "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"adjres", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"func1", "[", 
               RowBox[{"res", "[", 
                RowBox[{"[", 
                 RowBox[{"6", ",", "1"}], "]"}], "]"}], "]"}], ",", 
              RowBox[{"func1", "[", 
               RowBox[{"res", "[", 
                RowBox[{"[", 
                 RowBox[{"6", ",", "2"}], "]"}], "]"}], "]"}], ",", 
              RowBox[{"func1", "[", 
               RowBox[{"res", "[", 
                RowBox[{"[", 
                 RowBox[{"6", ",", "3"}], "]"}], "]"}], "]"}]}], "}"}]}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"adjres", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "adjmax"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"func2", "[", "x_", "]"}], ":=", 
               RowBox[{"Which", "[", 
                RowBox[{
                 RowBox[{"x", "\[Equal]", "adjmax"}], ",", 
                 RowBox[{
                  RowBox[{"adjres", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ",", 
                 RowBox[{"x", "\[Equal]", "1"}], ",", 
                 RowBox[{
                  RowBox[{"adjres", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ",", "True", 
                 ",", 
                 RowBox[{"x", "-", "1"}]}], "]"}]}], ";"}], 
             "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"adjres", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "1"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"func2", "[", "x_", "]"}], ":=", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{"x", "\[Equal]", "1"}], ",", 
                    RowBox[{
                    RowBox[{"adjres", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "2"}], ",", 
                    RowBox[{"x", "\[Equal]", "2"}], ",", 
                    RowBox[{
                    RowBox[{"adjres", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "2"}], ",", "True", 
                    ",", 
                    RowBox[{"x", "-", "2"}]}], "]"}]}], ";"}], 
                "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"func2", "[", "x_", "]"}], ":=", 
                  RowBox[{"Which", "[", 
                   RowBox[{
                    RowBox[{"x", "\[Equal]", 
                    RowBox[{"adjres", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", "x", ",", 
                    RowBox[{"x", "\[Equal]", 
                    RowBox[{"adjres", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                    RowBox[{"adjres", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"x", "\[Equal]", 
                    RowBox[{"adjres", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"adjres", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"x", ">", 
                    RowBox[{"adjres", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], ",", 
                    RowBox[{"x", "-", "2"}], ",", "True", ",", "x"}], "]"}]}],
                  ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"testtab", "=", 
              RowBox[{"Table", "[", 
               RowBox[{"i", ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "max"}], "}"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"testf1", "=", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"func1", "[", "i", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "max"}], "}"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"testf2", "=", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"func2", "[", 
                 RowBox[{"func1", "[", "i", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "max"}], "}"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Print", "[", "testtab", "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Print", "[", "testf1", "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Print", "[", "testf2", "]"}], ";"}], "*)"}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"redcode", "=", 
            RowBox[{"Replace", "[", 
             RowBox[{"redcode", ",", 
              RowBox[{"x_", "\[RuleDelayed]", 
               RowBox[{"func2", "[", 
                RowBox[{"func1", "[", "x", "]"}], "]"}]}], ",", 
              RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"res", "[", 
               RowBox[{"[", 
                RowBox[{"3", ",", "1"}], "]"}], "]"}], "<", 
              RowBox[{"res", "[", 
               RowBox[{"[", 
                RowBox[{"3", ",", "2"}], "]"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"redcode", "=", 
               RowBox[{"Drop", "[", 
                RowBox[{
                 RowBox[{"Drop", "[", 
                  RowBox[{"redcode", ",", 
                   RowBox[{"{", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "1"}], "]"}], "]"}], "}"}]}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"res", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "2"}], "]"}], "]"}], "-", "1"}], 
                  "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"redcode", "=", 
               RowBox[{"Drop", "[", 
                RowBox[{
                 RowBox[{"Drop", "[", 
                  RowBox[{"redcode", ",", 
                   RowBox[{"{", 
                    RowBox[{"res", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "1"}], "]"}], "]"}], "}"}]}], "]"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"res", "[", 
                   RowBox[{"[", 
                    RowBox[{"3", ",", "2"}], "]"}], "]"}], "}"}]}], "]"}]}], 
              ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"res", "=", 
            RowBox[{"findR2PD", "[", "redcode", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"found", "=", 
            RowBox[{"res", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"max", "=", 
            RowBox[{"Max", "[", 
             RowBox[{"Flatten", "[", "redcode", "]"}], "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"reduced", "=", 
      RowBox[{
       RowBox[{"Length", "[", "redcode", "]"}], "<", 
       RowBox[{"Length", "[", "code", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"reduced", ",", "redcode"}], "}"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5246005732202168`*^9, 3.5246007090469856`*^9}, {
  3.524605433714836*^9, 3.5246054341198597`*^9}, {3.5246054687918425`*^9, 
  3.5246054964484243`*^9}, {3.5246058278273783`*^9, 3.52460626826857*^9}, {
  3.5246063007314267`*^9, 3.5246064013441815`*^9}, {3.524606436251178*^9, 
  3.524606443120571*^9}, {3.5246068312827725`*^9, 3.5246068716350803`*^9}, {
  3.524607348153336*^9, 3.524607360187024*^9}, {3.5246076039689674`*^9, 
  3.5246077292761345`*^9}, {3.5246079271004496`*^9, 3.5246079389131255`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["R3", "Subsection",
 CellChangeTimes->{{3.524613092698905*^9, 3.524613093321941*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getR3Details", "[", 
    RowBox[{"p1_", ",", "p2_", ",", "p1m_", ",", "p2m_"}], "]"}], ":=", 
   RowBox[{"Which", "[", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"return", " ", "onRight"}], ",", "m1Over"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1", ",", "p2", ",", "p1m", ",", "p2m"}], "}"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"4", ",", "2", ",", "2", ",", "3"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1", ",", "p2", ",", "p1m", ",", "p2m"}], "}"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"4", ",", "4", ",", "4", ",", "1"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1", ",", "p2", ",", "p1m", ",", "p2m"}], "}"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2", ",", "2", ",", "3"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1", ",", "p2", ",", "p1m", ",", "p2m"}], "}"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4", ",", "4", ",", "1"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1", ",", "p2", ",", "p1m", ",", "p2m"}], "}"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"4", ",", "2", ",", "3", ",", "4"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "False"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1", ",", "p2", ",", "p1m", ",", "p2m"}], "}"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"4", ",", "4", ",", "3", ",", "4"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "False"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1", ",", "p2", ",", "p1m", ",", "p2m"}], "}"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2", ",", "1", ",", "2"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "False"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1", ",", "p2", ",", "p1m", ",", "p2m"}], "}"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4", ",", "1", ",", "2"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"False", ",", "False"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1", ",", "p2", ",", "p1m", ",", "p2m"}], "}"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"4", ",", "2", ",", "2", ",", "1"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1", ",", "p2", ",", "p1m", ",", "p2m"}], "}"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"4", ",", "4", ",", "4", ",", "3"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1", ",", "p2", ",", "p1m", ",", "p2m"}], "}"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2", ",", "2", ",", "1"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1", ",", "p2", ",", "p1m", ",", "p2m"}], "}"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4", ",", "4", ",", "3"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "True"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1", ",", "p2", ",", "p1m", ",", "p2m"}], "}"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"4", ",", "2", ",", "1", ",", "4"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1", ",", "p2", ",", "p1m", ",", "p2m"}], "}"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"4", ",", "4", ",", "1", ",", "4"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1", ",", "p2", ",", "p1m", ",", "p2m"}], "}"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2", ",", "3", ",", "2"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1", ",", "p2", ",", "p1m", ",", "p2m"}], "}"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4", ",", "3", ",", "2"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}], ",", "\[IndentingNewLine]", 
     "True", ",", 
     RowBox[{"{", "}"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5244960718652143`*^9, 3.5244964357280264`*^9}, {
  3.5245778038754983`*^9, 3.5245778064576464`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"transformR3", "[", 
   RowBox[{"code_", ",", 
    RowBox[{"{", 
     RowBox[{"gi1_", ",", "gi2_", ",", "gp1m_", ",", "gp2m_", ",", 
      RowBox[{"{", 
       RowBox[{"arc_", ",", "im_"}], "}"}]}], "}"}], ",", "max_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
     "p1", ",", "p2", ",", "gc1", ",", "gc2", ",", "gp1", ",", "gp2", ",", 
      "\[IndentingNewLine]", "i1", ",", "i2", ",", "c1", ",", "c2", ",", "cm",
       ",", "p1m", ",", "p2m", ",", "\[IndentingNewLine]", "am1", ",", "am2", 
      ",", "aver", ",", "onRight", ",", "m1Over", ",", "m1ascend", ",", 
      "m2ascend", ",", "\[IndentingNewLine]", "new1", ",", "new2", ",", 
      "newm", ",", "newcode", ",", "det", ",", 
      RowBox[{"valid", "=", "True"}]}], "\[IndentingNewLine]", "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newcode", "=", "code"}], ";", "\[IndentingNewLine]", 
     RowBox[{"gc1", "=", 
      RowBox[{"code", "[", 
       RowBox[{"[", "gi1", "]"}], "]"}]}], ";", 
     RowBox[{"gc2", "=", 
      RowBox[{"code", "[", 
       RowBox[{"[", "gi2", "]"}], "]"}]}], ";", 
     RowBox[{"cm", "=", 
      RowBox[{"code", "[", 
       RowBox[{"[", "im", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"gp1", "=", 
      RowBox[{
       RowBox[{"Position", "[", 
        RowBox[{"gc1", ",", "arc"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
     RowBox[{"gp2", "=", 
      RowBox[{
       RowBox[{"Position", "[", 
        RowBox[{"gc2", ",", "arc"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"c1", ",", "c2", ",", "aver"}], "}"}], "=", 
      RowBox[{"ordercrossings", "[", 
       RowBox[{
       "gc1", ",", "gc2", ",", "arc", ",", "gp1", ",", "gp2", ",", "max"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"gc1", ",", "gc2"}], "}"}], "\[NotEqual]", 
        RowBox[{"{", 
         RowBox[{"c1", ",", "c2"}], "}"}]}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "i1", ",", "i2", ",", "p1m", ",", "p2m", ",", "p1", ",", "p2"}], 
          "}"}], "=", 
         RowBox[{"{", 
          RowBox[{
          "gi2", ",", "gi1", ",", "gp2m", ",", "gp1m", ",", "gp2", ",", 
           "gp1"}], "}"}]}], ";"}], "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "i1", ",", "i2", ",", "p1m", ",", "p2m", ",", "p1", ",", "p2"}], 
          "}"}], "=", 
         RowBox[{"{", 
          RowBox[{
          "gi1", ",", "gi2", ",", "gp1m", ",", "gp2m", ",", "gp1", ",", 
           "gp2"}], "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"gi1", ",", "gi2", ",", "i1", ",", "i2"}], "}"}], ",", 
          "aver", ",", 
          RowBox[{"{", 
           RowBox[{"p1", ",", "p2", ",", "p1m", ",", "p2m"}], "}"}]}], "}"}], 
        "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"det", "=", 
      RowBox[{"getR3Details", "[", 
       RowBox[{"p1", ",", "p2", ",", "p1m", ",", "p2m"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "det", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", "\"\<unforeseen crossing structure\>\"", "]"}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"{", 
           RowBox[{"c1", ",", "c2", ",", "cm", ",", "arc", ",", "aver"}], 
           "}"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"valid", "=", "False"}], "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"onRight", ",", "m1Over"}], "}"}], "=", "det"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"onRight", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"am1", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"c1", "[", 
               RowBox[{"[", 
                RowBox[{"getopp", "[", 
                 RowBox[{
                  RowBox[{"Position", "[", 
                   RowBox[{"c1", ",", 
                    RowBox[{"cm", "[", 
                    RowBox[{"[", "p1m", "]"}], "]"}]}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "]"}],
               ",", 
              RowBox[{"cm", "[", 
               RowBox[{"[", "p1m", "]"}], "]"}], ",", 
              RowBox[{"cm", "[", 
               RowBox[{"[", 
                RowBox[{"getopp", "[", "p1m", "]"}], "]"}], "]"}]}], "}"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"am2", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"c2", "[", 
               RowBox[{"[", 
                RowBox[{"getopp", "[", 
                 RowBox[{
                  RowBox[{"Position", "[", 
                   RowBox[{"c2", ",", 
                    RowBox[{"cm", "[", 
                    RowBox[{"[", "p2m", "]"}], "]"}]}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "]"}],
               ",", 
              RowBox[{"cm", "[", 
               RowBox[{"[", "p2m", "]"}], "]"}], ",", 
              RowBox[{"cm", "[", 
               RowBox[{"[", 
                RowBox[{"getopp", "[", "p2m", "]"}], "]"}], "]"}]}], "}"}]}], 
           ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"am1", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"cm", "[", 
               RowBox[{"[", 
                RowBox[{"getopp", "[", "p1m", "]"}], "]"}], "]"}], ",", 
              RowBox[{"cm", "[", 
               RowBox[{"[", "p1m", "]"}], "]"}], ",", 
              RowBox[{"c1", "[", 
               RowBox[{"[", 
                RowBox[{"getopp", "[", 
                 RowBox[{
                  RowBox[{"Position", "[", 
                   RowBox[{"c1", ",", 
                    RowBox[{"cm", "[", 
                    RowBox[{"[", "p1m", "]"}], "]"}]}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], 
               "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"am2", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"cm", "[", 
               RowBox[{"[", 
                RowBox[{"getopp", "[", "p2m", "]"}], "]"}], "]"}], ",", 
              RowBox[{"cm", "[", 
               RowBox[{"[", "p2m", "]"}], "]"}], ",", 
              RowBox[{"c2", "[", 
               RowBox[{"[", 
                RowBox[{"getopp", "[", 
                 RowBox[{
                  RowBox[{"Position", "[", 
                   RowBox[{"c2", ",", 
                    RowBox[{"cm", "[", 
                    RowBox[{"[", "p2m", "]"}], "]"}]}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], 
               "]"}]}], "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"m1ascend", "=", 
         RowBox[{"islesserarc", "[", 
          RowBox[{
           RowBox[{"am1", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"am1", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", "max"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"m2ascend", "=", 
         RowBox[{"islesserarc", "[", 
          RowBox[{
           RowBox[{"am2", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"am2", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", "max"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"am1", ",", "am2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"m1ascend", ",", "m2ascend"}], "}"}]}], "}"}], "]"}], 
          ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"onRight", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"m2ascend", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"new1", "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"am2", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"aver", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"am2", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], ",", 
                 RowBox[{"aver", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";"}], 
             "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"new1", "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"am2", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], ",", 
                 RowBox[{"aver", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"am2", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"aver", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"m1ascend", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"new2", "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"am1", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"aver", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"am1", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], ",", 
                 RowBox[{"aver", "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ";"}], 
             "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"new2", "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"am1", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], ",", 
                 RowBox[{"aver", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], ",", 
                 RowBox[{"am1", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"aver", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"m1Over", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"m2ascend", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"newm", "=", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"am2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"am1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"am2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"am1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";"}], 
                "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"newm", "=", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"am2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"am1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"am2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"am1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"m1ascend", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"newm", "=", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"am1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"am2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"am1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"am2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], 
                "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"newm", "=", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"am1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"am2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"am1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"am2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"m2ascend", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"new1", "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"am2", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"aver", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"am2", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"aver", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";"}], 
             "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"new1", "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"am2", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"aver", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"am2", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"aver", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"m1ascend", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"new2", "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"am1", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"aver", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"am1", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"aver", "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ";"}], 
             "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"new2", "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"am1", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"aver", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], ",", 
                 RowBox[{"am1", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"aver", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"m1Over", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"m2ascend", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"newm", "=", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"am2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"am1", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"am2", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"am1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";"}], 
                "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"newm", "=", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"am2", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"am1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"am2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"am1", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"m1ascend", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"newm", "=", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"am1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"am2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"am1", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"am2", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ";"}], 
                "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"newm", "=", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"am1", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"am2", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"am1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"am2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"newcode", "[", 
          RowBox[{"[", "i1", "]"}], "]"}], "=", "new1"}], ";", 
        RowBox[{
         RowBox[{"newcode", "[", 
          RowBox[{"[", "i2", "]"}], "]"}], "=", "new2"}], ";", 
        RowBox[{
         RowBox[{"newcode", "[", 
          RowBox[{"[", "im", "]"}], "]"}], "=", "newm"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"valid", ",", "newcode"}], "}"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.524474047741766*^9, 3.524474058399376*^9}, {
   3.524474097734626*^9, 3.5244741060010986`*^9}, {3.5244741670985928`*^9, 
   3.5244741777061996`*^9}, {3.5244743668760195`*^9, 
   3.5244743693811626`*^9}, {3.524474447198614*^9, 3.5244744488357077`*^9}, {
   3.524474501383713*^9, 3.5244745255760965`*^9}, {3.5244747119227552`*^9, 
   3.5244747150459337`*^9}, {3.5244747682029743`*^9, 
   3.5244747735912824`*^9}, {3.5244750058295655`*^9, 3.524475409329644*^9}, {
   3.5244757556394525`*^9, 3.5244757899044123`*^9}, {3.524475854253093*^9, 
   3.524475871887101*^9}, {3.5244761079226017`*^9, 3.5244761100887256`*^9}, {
   3.5244761733233423`*^9, 3.524476178581643*^9}, {3.524476229837575*^9, 
   3.5244762372810006`*^9}, {3.524476279125394*^9, 3.5244763816212564`*^9}, {
   3.524476431769125*^9, 3.524476674869029*^9}, {3.524476706385832*^9, 
   3.5244767224197493`*^9}, {3.5244767672943153`*^9, 3.5244768045134444`*^9}, 
   3.5244768622797484`*^9, {3.524476911828583*^9, 3.5244769225841975`*^9}, {
   3.524476989539027*^9, 3.5244769903010707`*^9}, {3.5244770448011885`*^9, 
   3.524477151541293*^9}, {3.52447721494092*^9, 3.5244773192248845`*^9}, {
   3.5244773646374817`*^9, 3.5244774515404525`*^9}, {3.52447748402131*^9, 
   3.5244775749305096`*^9}, {3.52447771322042*^9, 3.5244777845354986`*^9}, {
   3.52447783316428*^9, 3.524477859902809*^9}, {3.524477944682658*^9, 
   3.5244780639014773`*^9}, {3.52447813563058*^9, 3.524478263567898*^9}, {
   3.5244783558111734`*^9, 3.5244784169286695`*^9}, {3.5244784552778625`*^9, 
   3.5244784873436966`*^9}, {3.524478990951502*^9, 3.5244789918645535`*^9}, {
   3.524479047003708*^9, 3.524479064081684*^9}, {3.5244794672447443`*^9, 
   3.5244796043185844`*^9}, {3.5244799839903*^9, 3.524479987874522*^9}, {
   3.524480238497857*^9, 3.5244802386028633`*^9}, 3.5244802976322393`*^9, {
   3.5244941033086195`*^9, 3.5244941160673494`*^9}, {3.524494354325977*^9, 
   3.5244944236809435`*^9}, {3.52449457729573*^9, 3.5244946031152067`*^9}, {
   3.5244946334119396`*^9, 3.5244946597104435`*^9}, {3.524494690482204*^9, 
   3.5244947351767607`*^9}, {3.52449557928304*^9, 3.5244955805141106`*^9}, {
   3.5244964570312448`*^9, 3.5244964750232735`*^9}, {3.524496516602652*^9, 
   3.5244965209479003`*^9}, {3.5244966474551363`*^9, 3.524496692294701*^9}, {
   3.524517094272716*^9, 3.5245171730362215`*^9}, {3.524518517256106*^9, 
   3.5245185197262473`*^9}, {3.5245188311450596`*^9, 3.524518833668204*^9}, {
   3.524520468365703*^9, 3.5245205131852665`*^9}, {3.5245208627202587`*^9, 
   3.52452086921163*^9}, {3.524520961859929*^9, 3.524520968407304*^9}, {
   3.524523589260208*^9, 3.524523597925704*^9}, {3.52452385521742*^9, 
   3.524523925920464*^9}, {3.524527980329363*^9, 3.524527983568548*^9}, 
   3.5245280173414803`*^9, {3.5245295596896973`*^9, 3.5245296012380733`*^9}, {
   3.5245296413713694`*^9, 3.5245296431004677`*^9}, {3.524532360108295*^9, 
   3.5245323672067013`*^9}, {3.524532456299797*^9, 3.524532470913633*^9}, {
   3.5245325901994553`*^9, 3.524532598026903*^9}, {3.524567954965173*^9, 
   3.524567961748561*^9}, {3.524571509065456*^9, 3.5245715167298946`*^9}, {
   3.5245735436678286`*^9, 3.524573550851239*^9}, {3.5245778173482695`*^9, 
   3.524577999285675*^9}, {3.5245828420928955`*^9, 3.524582844285021*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"findR3PD", "[", 
   RowBox[{"code_", ",", "excset_", ",", "max_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "pos", ",", "c1", ",", "c2", ",", "cm", ",", "a11", ",", "a12", ",", 
      "a21", ",", "a22", ",", "p11", ",", "p12", ",", "p21", ",", "p22", ",", 
      "ord", ",", 
      RowBox[{"res", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"found", "=", "False"}], ",", "les1", ",", "les2", ",", 
      "c1ltor", ",", "c2ltor"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"arc", "=", "1"}], ",", 
       RowBox[{"arc", "\[LessEqual]", "max"}], ",", 
       RowBox[{"arc", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", "found"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"pos", "=", 
            RowBox[{"Position", "[", 
             RowBox[{"code", ",", "arc"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"pos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[NotEqual]", 
               RowBox[{"pos", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "&&", 
              RowBox[{
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{"pos", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", "2"}], "]"}], 
               "\[Equal]", "0"}], "&&", 
              RowBox[{
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{"pos", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", "2"}], "]"}], 
               "\[Equal]", "0"}]}], ",", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"c1", "=", 
               RowBox[{"code", "[", 
                RowBox[{"[", 
                 RowBox[{"pos", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}]}], ";", 
              RowBox[{"c2", "=", 
               RowBox[{"code", "[", 
                RowBox[{"[", 
                 RowBox[{"pos", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], "]"}]}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"ord", "=", 
               RowBox[{"ordercrossings", "[", 
                RowBox[{
                 RowBox[{"code", "[", 
                  RowBox[{"[", 
                   RowBox[{"pos", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], ",", 
                 RowBox[{"code", "[", 
                  RowBox[{"[", 
                   RowBox[{"pos", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], "]"}], ",", 
                 "arc", ",", 
                 RowBox[{"pos", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
                 RowBox[{"pos", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", "max"}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"c1", ",", "c2"}], "}"}], "\[NotEqual]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"ord", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{"ord", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"c1", ",", "c2"}], "}"}], "=", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"ord", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"ord", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"pos", "=", 
                  RowBox[{"Reverse", "[", "pos", "]"}]}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"a11", "=", 
               RowBox[{"c1", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ";", 
              RowBox[{"a12", "=", 
               RowBox[{"c1", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"les1", "=", 
               RowBox[{"getlesserarc", "[", 
                RowBox[{"a11", ",", "a12", ",", "max"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"a21", "=", 
               RowBox[{"c2", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ";", 
              RowBox[{"a22", "=", 
               RowBox[{"c2", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"les2", "=", 
               RowBox[{"getlesserarc", "[", 
                RowBox[{"a21", ",", "a22", ",", "max"}], "]"}]}], ";", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"c1ltor", "=", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"pos", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[Equal]", "4"}], 
                ")"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"c2ltor", "=", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"pos", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "2"}], "]"}], "]"}], "\[Equal]", "2"}], 
                ")"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"p11", "=", 
               RowBox[{"Complement", "[", 
                RowBox[{
                 RowBox[{"Position", "[", 
                  RowBox[{"code", ",", "a11"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"pos", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "1"}], "}"}], 
                  "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"p12", "=", 
               RowBox[{"Complement", "[", 
                RowBox[{
                 RowBox[{"Position", "[", 
                  RowBox[{"code", ",", "a12"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"pos", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "3"}], "}"}], 
                  "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"p21", "=", 
               RowBox[{"Complement", "[", 
                RowBox[{
                 RowBox[{"Position", "[", 
                  RowBox[{"code", ",", "a21"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"pos", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", "1"}], "}"}], 
                  "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"p22", "=", 
               RowBox[{"Complement", "[", 
                RowBox[{
                 RowBox[{"Position", "[", 
                  RowBox[{"code", ",", "a22"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"pos", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", "3"}], "}"}], 
                  "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"If", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"p11", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[Equal]", 
                  RowBox[{"p21", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "&&", 
                 RowBox[{
                  RowBox[{"p11", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[NotEqual]", " ", 
                  RowBox[{"pos", "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "&&", 
                 RowBox[{
                  RowBox[{"p21", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[NotEqual]", 
                  RowBox[{"pos", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "&&", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"c1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "les1"}], 
                    ")"}], "\[Equal]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"c2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "les2"}], 
                    ")"}]}], "&&", 
                    RowBox[{"c1ltor", "\[Equal]", "c2ltor"}]}], ")"}], "||", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"c1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "les1"}], 
                    ")"}], "\[NotEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"c2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "les2"}], 
                    ")"}]}], "&&", 
                    RowBox[{"c1ltor", "\[NotEqual]", "c2ltor"}]}], ")"}]}], 
                  ")"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"FreeQ", "[", 
                    RowBox[{"excset", ",", 
                    RowBox[{"{", 
                    RowBox[{"arc", ",", 
                    RowBox[{"p11", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], 
                   ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"found", "=", "True"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"res", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"pos", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"pos", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"p11", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"p21", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"arc", ",", 
                    RowBox[{"p11", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}]}], "}"}]}],
                     ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
                "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"p11", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[Equal]", 
                    RowBox[{"p22", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "&&", 
                    RowBox[{
                    RowBox[{"p11", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[NotEqual]", " ", 
                    RowBox[{"pos", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "&&", 
                    RowBox[{
                    RowBox[{"p22", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[NotEqual]", 
                    RowBox[{"pos", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"c1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "les1"}], 
                    ")"}], "\[Equal]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"c2", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "les2"}], 
                    ")"}]}], "&&", 
                    RowBox[{"c1ltor", "\[Equal]", "c2ltor"}]}], ")"}], "||", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"c1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "les1"}], 
                    ")"}], "\[NotEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"c2", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "les2"}], 
                    ")"}]}], "&&", 
                    RowBox[{"c1ltor", "\[NotEqual]", "c2ltor"}]}], ")"}]}], 
                    ")"}]}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"excset", ",", 
                    RowBox[{"{", 
                    RowBox[{"arc", ",", 
                    RowBox[{"p11", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"found", "=", "True"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"res", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"pos", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"pos", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"p11", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"p22", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"arc", ",", 
                    RowBox[{"p11", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}]}], "}"}]}],
                     ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
                   "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"p12", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[Equal]", 
                    RowBox[{"p21", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "&&", 
                    RowBox[{
                    RowBox[{"p12", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[NotEqual]", " ", 
                    RowBox[{"pos", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "&&", 
                    RowBox[{
                    RowBox[{"p21", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[NotEqual]", 
                    RowBox[{"pos", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"c1", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "les1"}], 
                    ")"}], "\[Equal]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"c2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "les2"}], 
                    ")"}]}], "&&", 
                    RowBox[{"c1ltor", "\[Equal]", "c2ltor"}]}], ")"}], "||", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"c1", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "les1"}], 
                    ")"}], "\[NotEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"c2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "les2"}], 
                    ")"}]}], "&&", 
                    RowBox[{"c1ltor", "\[NotEqual]", "c2ltor"}]}], ")"}]}], 
                    ")"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"excset", ",", 
                    RowBox[{"{", 
                    RowBox[{"arc", ",", 
                    RowBox[{"p12", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"found", "=", "True"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"res", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"pos", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"pos", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"p12", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"p21", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"arc", ",", 
                    RowBox[{"p12", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}]}], "}"}]}],
                     ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
                    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"p12", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[Equal]", 
                    RowBox[{"p22", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "&&", 
                    RowBox[{
                    RowBox[{"p12", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[NotEqual]", " ", 
                    RowBox[{"pos", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "&&", 
                    RowBox[{
                    RowBox[{"p22", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[NotEqual]", 
                    RowBox[{"pos", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"c1", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "les1"}], 
                    ")"}], "\[Equal]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"c2", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "les2"}], 
                    ")"}]}], "&&", 
                    RowBox[{"c1ltor", "\[Equal]", "c2ltor"}]}], ")"}], "||", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"c1", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "les1"}], 
                    ")"}], "\[NotEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"c2", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "les2"}], 
                    ")"}]}], "&&", 
                    RowBox[{"c1ltor", "\[NotEqual]", "c2ltor"}]}], ")"}]}], 
                    ")"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"excset", ",", 
                    RowBox[{"{", 
                    RowBox[{"arc", ",", 
                    RowBox[{"p12", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"found", "=", "True"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"res", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"pos", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"pos", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"p12", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"p22", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"arc", ",", 
                    RowBox[{"p12", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}]}], "}"}]}],
                     ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}]}], 
                  "\[IndentingNewLine]", "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
            "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"found", ",", "res"}], "}"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.524419831821156*^9, 3.524419841908733*^9}, {
   3.5244219796460047`*^9, 3.524422015623062*^9}, {3.5244222251170444`*^9, 
   3.5244222253950605`*^9}, {3.52442249096325*^9, 3.5244225010208254`*^9}, {
   3.524422676420858*^9, 3.524422678193959*^9}, {3.5244227390004373`*^9, 
   3.524422746237851*^9}, {3.5244228365910187`*^9, 3.5244228505148153`*^9}, {
   3.5244237033105927`*^9, 3.524423769214362*^9}, {3.5244239176768537`*^9, 
   3.524423970644883*^9}, {3.524427611263011*^9, 3.524427724132467*^9}, {
   3.5244278095793543`*^9, 3.524427834213763*^9}, {3.5244278703618307`*^9, 
   3.5244278863407445`*^9}, {3.5244279203146877`*^9, 
   3.5244280749185305`*^9}, {3.5244281168449287`*^9, 3.524428212665409*^9}, {
   3.5244282676375537`*^9, 3.5244282718117924`*^9}, {3.524428550789749*^9, 
   3.524428610286152*^9}, 3.5244288341059537`*^9, {3.5244290035716467`*^9, 
   3.524429004106677*^9}, {3.524429480943599*^9, 3.524429527023235*^9}, {
   3.524429668507327*^9, 3.5244296958988943`*^9}, {3.524429829255522*^9, 
   3.524429985494458*^9}, {3.5244300165642347`*^9, 3.524430066072067*^9}, {
   3.5244303758237834`*^9, 3.524430390118601*^9}, {3.524431084212301*^9, 
   3.5244311029423723`*^9}, {3.524431369020591*^9, 3.524431418267408*^9}, {
   3.52443164506538*^9, 3.52443176185606*^9}, 3.5244443938603163`*^9, {
   3.524444798739474*^9, 3.5244448013376226`*^9}, {3.52447379167812*^9, 
   3.524473799977595*^9}, 3.524474026200534*^9, {3.5244742130242195`*^9, 
   3.5244742214817038`*^9}, 3.5244743515791445`*^9, {3.5244757211464796`*^9, 
   3.524475725738742*^9}, {3.5244798652135067`*^9, 3.524479867806655*^9}, 
   3.524479997990101*^9, {3.5245186939132104`*^9, 3.5245187014856434`*^9}, 
   3.5245194229619093`*^9, {3.5245216771528416`*^9, 3.5245216828811693`*^9}, 
   3.524521906769975*^9, {3.5245267908963313`*^9, 3.524526881999542*^9}, {
   3.5245278103516407`*^9, 3.524527899627747*^9}, {3.524568217489188*^9, 
   3.5245682292068586`*^9}, {3.5245684962911353`*^9, 
   3.5245686391263046`*^9}, {3.5245686856889677`*^9, 
   3.5245687149666424`*^9}, {3.5245687861597147`*^9, 3.524568787754806*^9}, {
   3.524568834930504*^9, 3.524568850471393*^9}, {3.5245688870174837`*^9, 
   3.5245688884365644`*^9}, {3.5245689369163375`*^9, 3.524568947825961*^9}, {
   3.5245690331718426`*^9, 3.5245690592123327`*^9}, {3.524569161870204*^9, 
   3.5245691870446444`*^9}, {3.524569319516221*^9, 3.524569347786838*^9}, {
   3.524569546175185*^9, 3.524569605545581*^9}, {3.524570283630365*^9, 
   3.5245703488510957`*^9}, {3.524570388399358*^9, 3.5245703925705957`*^9}, {
   3.524570650533351*^9, 3.524570651255392*^9}, {3.524570703928405*^9, 
   3.524570705311484*^9}, {3.5245707463258295`*^9, 3.5245707897353125`*^9}, {
   3.5245708470295897`*^9, 3.524571037029457*^9}, {3.524574073057108*^9, 
   3.524574094654343*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"reduceR3PD", "[", "code_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"redcode", ",", "res", ",", 
      RowBox[{"excset", "=", 
       RowBox[{"{", "}"}]}], ",", "i1", ",", "i2", ",", "im", ",", "c1", ",", 
      "c2", ",", "cm", ",", 
      RowBox[{"ct", "=", "100"}], ",", "max", ",", 
      RowBox[{"exclist", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"list", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "code", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Return", "[", 
         RowBox[{"{", "}"}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"redcode", "=", "code"}], ";", "\[IndentingNewLine]", 
        RowBox[{"max", "=", 
         RowBox[{"Max", "[", 
          RowBox[{"Flatten", "[", "code", "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"res", "=", 
         RowBox[{"findR3PD", "[", 
          RowBox[{"redcode", ",", "excset", ",", "max"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"res", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "&&", 
           RowBox[{
            RowBox[{"Length", "[", "excset", "]"}], "\[LessEqual]", " ", 
            "ct"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Print", "[", "res", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"list", ",", "redcode"}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"exclist", ",", "excset"}], "]"}], ";"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"excset", ",", 
             RowBox[{"res", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "5"}], "]"}], "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"redcode", "=", 
            RowBox[{
             RowBox[{"transformR3", "[", 
              RowBox[{"redcode", ",", 
               RowBox[{"res", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ",", "max"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"res", "=", 
            RowBox[{"findR3PD", "[", 
             RowBox[{"redcode", ",", "excset", ",", "max"}], "]"}]}], ";"}]}],
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "redcode", "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5244301778494596`*^9, 3.5244301979106073`*^9}, {
   3.5244302880827646`*^9, 3.524430364779152*^9}, {3.524430401933277*^9, 
   3.5244306838244*^9}, 3.524431275139221*^9, {3.524431463532997*^9, 
   3.5244314636160016`*^9}, {3.524431509150606*^9, 3.524431537436224*^9}, {
   3.524431569349049*^9, 3.5244315980826926`*^9}, {3.5244317837583127`*^9, 
   3.524431811820918*^9}, {3.524431915326838*^9, 3.524431998906618*^9}, {
   3.524432042945137*^9, 3.5244320444552236`*^9}, {3.5244320868406477`*^9, 
   3.524432089510801*^9}, {3.5244321331742983`*^9, 3.5244321349333987`*^9}, {
   3.524432462929159*^9, 3.5244324697315483`*^9}, {3.5244742261219687`*^9, 
   3.5244742428499255`*^9}, {3.5244785287160635`*^9, 
   3.5244785395346823`*^9}, {3.5244786229594536`*^9, 
   3.5244786857420444`*^9}, {3.5244789096698523`*^9, 3.524478909752857*^9}, {
   3.5244796554585094`*^9, 3.5244797321088934`*^9}, {3.524479768912998*^9, 
   3.524479775961402*^9}, {3.5244798088622837`*^9, 3.5244798092843075`*^9}, {
   3.524480284021461*^9, 3.5244802841264668`*^9}, {3.5244804009631495`*^9, 
   3.5244804012191644`*^9}, {3.5244805711888857`*^9, 3.524480571236889*^9}, {
   3.5245171925163355`*^9, 3.524517192882356*^9}, {3.5245172547978973`*^9, 
   3.5245172554759364`*^9}, {3.524518483839195*^9, 3.5245184850382633`*^9}, {
   3.5245205327343845`*^9, 3.5245205328573923`*^9}, {3.524520814518502*^9, 
   3.5245208187087417`*^9}, {3.524521670336452*^9, 3.5245216705364637`*^9}, {
   3.524521896852408*^9, 3.524521897378438*^9}, {3.524522090864505*^9, 
   3.524522101166094*^9}, {3.5245221596934414`*^9, 3.524522182969773*^9}, {
   3.5245266357954597`*^9, 3.524526637631565*^9}, {3.5245266735676203`*^9, 
   3.524526712702859*^9}, {3.524527929975483*^9, 3.524527963617407*^9}, {
   3.5245290678425655`*^9, 3.5245291069978046`*^9}, {3.52452918419022*^9, 
   3.5245292083396015`*^9}, {3.5245294407238927`*^9, 
   3.5245294462472086`*^9}, {3.5245296116256676`*^9, 3.524529613959801*^9}, {
   3.524532619612138*^9, 3.524532642013419*^9}, {3.524567923743387*^9, 
   3.524567937321164*^9}, {3.5245714874702206`*^9, 3.524571495974707*^9}, {
   3.524573513844123*^9, 3.5245735253757825`*^9}, {3.5245736340119963`*^9, 
   3.5245736399473352`*^9}, {3.5245742995460625`*^9, 
   3.5245743018841963`*^9}, {3.5245780638033657`*^9, 3.524578120399603*^9}, {
   3.5245840957476006`*^9, 3.524584099266802*^9}, {3.524584140725173*^9, 
   3.5245841428552947`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["PD connected sum parser", "Subsection",
 CellChangeTimes->{{3.524684849844653*^9, 3.5246848571660714`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"findCompositePD", "[", "pd_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"res", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", "max", ",", "check"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"max", "=", 
      RowBox[{"Max", "[", 
       RowBox[{"Flatten", "[", "pd", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"start", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"check", "=", 
            RowBox[{"Append", "[", 
             RowBox[{
              RowBox[{"Range", "[", 
               RowBox[{"start", ",", "stop"}], "]"}], ",", "max"}], "]"}]}], 
           ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"stop", "\[Equal]", "max"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"check", "=", 
               RowBox[{"Prepend", "[", 
                RowBox[{
                 RowBox[{"Range", "[", 
                  RowBox[{
                   RowBox[{"start", "-", "1"}], ",", "stop"}], "]"}], ",", 
                 "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"check", "=", 
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{"start", "-", "1"}], ",", 
                 RowBox[{"stop", "+", "1"}]}], "]"}]}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Sort", "[", 
            RowBox[{"DeleteDuplicates", "[", 
             RowBox[{"Flatten", "[", 
              RowBox[{"Select", "[", 
               RowBox[{"pd", ",", 
                RowBox[{
                 RowBox[{"!", 
                  RowBox[{"FreeQ", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{"x_", "/;", 
                    RowBox[{
                    "start", "\[LessEqual]", "x", "\[LessEqual]", 
                    "stop"}]}]}], "]"}]}], "&"}]}], "]"}], "]"}], "]"}], 
            "]"}], "\[Equal]", "check"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"res", "=", 
            RowBox[{"{", 
             RowBox[{"start", ",", "stop"}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
         ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"start", ",", "1", ",", 
         RowBox[{"max", "-", "5"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"stop", ",", 
         RowBox[{"start", "+", "5"}], ",", 
         RowBox[{"Min", "[", 
          RowBox[{"max", ",", 
           RowBox[{"max", "-", 
            RowBox[{"(", 
             RowBox[{"5", "-", "start"}], ")"}]}]}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "res", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5246773559221106`*^9, 3.524677370896967*^9}, {
  3.5246774224929185`*^9, 3.5246774407439623`*^9}, {3.524677576778743*^9, 
  3.5246776088015747`*^9}, {3.524677680341666*^9, 3.5246776863610106`*^9}, {
  3.5246785878595734`*^9, 3.524678615444151*^9}, {3.5246790156640425`*^9, 
  3.524679049990006*^9}, {3.524679153142906*^9, 3.5246791701548786`*^9}, {
  3.52467922700113*^9, 3.524679432652893*^9}, {3.524679468103921*^9, 
  3.5246795359248*^9}, {3.5246796587658257`*^9, 3.524679661868003*^9}, {
  3.524679722697482*^9, 3.5246797617037134`*^9}, {3.52468131015928*^9, 
  3.5246813182767444`*^9}, {3.525347062037942*^9, 3.525347072819558*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"splitPD", "[", 
   RowBox[{"pd_", ",", "pair_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"inner", ",", "outer", ",", "finner", ",", "fouter", ",", 
      RowBox[{"a", "=", 
       RowBox[{"Min", "[", "pair", "]"}]}], ",", 
      RowBox[{"b", "=", 
       RowBox[{"Max", "[", "pair", "]"}]}], ",", "prea", ",", "postb", ",", 
      "max"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"max", "=", 
      RowBox[{"Max", "[", 
       RowBox[{"Flatten", "[", "pd", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"inner", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"pd", ",", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"FreeQ", "[", 
           RowBox[{"#", ",", 
            RowBox[{"x_", "/;", 
             RowBox[{"a", "\[LessEqual]", "x", "\[LessEqual]", "b"}]}]}], 
           "]"}]}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"outer", "=", 
      RowBox[{"Complement", "[", 
       RowBox[{"pd", ",", "inner"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"a", "\[Equal]", "1"}], ",", 
       RowBox[{"prea", "=", "max"}], ",", 
       RowBox[{"prea", "=", 
        RowBox[{"a", "-", "1"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"b", "\[Equal]", "max"}], ",", 
       RowBox[{"postb", "=", "1"}], ",", 
       RowBox[{"postb", "=", 
        RowBox[{"b", "+", "1"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"finner", "[", "x_", "]"}], ":=", 
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "\[Equal]", "prea"}], "||", 
         RowBox[{"x", "\[Equal]", "postb"}]}], ",", 
        RowBox[{"postb", "-", 
         RowBox[{"(", 
          RowBox[{"a", "-", "1"}], ")"}]}], ",", "True", ",", 
        RowBox[{"x", "-", 
         RowBox[{"(", 
          RowBox[{"a", "-", "1"}], ")"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Which", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"a", "\[Equal]", "1"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"fouter", "[", "x_", "]"}], ":=", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "\[Equal]", "prea"}], "||", 
            RowBox[{"x", "\[Equal]", "postb"}]}], ",", "1", ",", "True", ",", 
           RowBox[{"x", "-", "b"}]}], "]"}]}], ";"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"b", "\[Equal]", "max"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"fouter", "[", "x_", "]"}], ":=", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"x", "\[Equal]", "prea"}], ",", "1", ",", "True", ",", 
           "x"}], "]"}]}], ";"}], ",", "\[IndentingNewLine]", "True", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"fouter", "[", "x_", "]"}], ":=", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"x", ">", "b"}], ",", 
           RowBox[{"x", "-", 
            RowBox[{"(", 
             RowBox[{"postb", "-", "prea"}], ")"}]}], ",", "True", ",", "x"}],
           "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"inner", "=", 
      RowBox[{"Replace", "[", 
       RowBox[{"inner", ",", 
        RowBox[{"x_", "\[RuleDelayed]", 
         RowBox[{"finner", "[", "x", "]"}]}], ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"outer", "=", 
      RowBox[{"Replace", "[", 
       RowBox[{"outer", ",", 
        RowBox[{"x_", "\[RuleDelayed]", 
         RowBox[{"fouter", "[", "x", "]"}]}], ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"inner", ",", "outer"}], "}"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.524680916828783*^9, 3.524681052382536*^9}, {
  3.5246811355372925`*^9, 3.5246811473569684`*^9}, {3.5246813602781467`*^9, 
  3.5246814876764336`*^9}, {3.524681526132633*^9, 3.52468161367064*^9}, {
  3.5246816443093925`*^9, 3.524681732896459*^9}, {3.5246821069368534`*^9, 
  3.5246822578874874`*^9}, {3.524682314164706*^9, 3.524682442286034*^9}, {
  3.5246824755289354`*^9, 3.5246824763289814`*^9}, {3.5246825318321557`*^9, 
  3.5246825691692915`*^9}, {3.5246826090315714`*^9, 3.524682609164579*^9}, {
  3.5246827615372944`*^9, 3.524682843003954*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"decomposePD", "[", "pd_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"comlist", ",", 
      RowBox[{"primelist", "=", 
       RowBox[{"{", "}"}]}], ",", "pair", ",", "xx"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"comlist", "=", 
      RowBox[{"{", "pd", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"comlist", "\[NotEqual]", 
        RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"pair", "=", 
         RowBox[{"findCompositePD", "[", 
          RowBox[{"comlist", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"pair", "\[Equal]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"primelist", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"primelist", ",", 
              RowBox[{"comlist", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";"}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"xx", "=", 
            RowBox[{"Map", "[", 
             RowBox[{"reducePD", ",", 
              RowBox[{"splitPD", "[", 
               RowBox[{
                RowBox[{"comlist", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "pair"}], "]"}], ",", 
              RowBox[{"{", "1", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"xx", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[NotEqual]", "0"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"comlist", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"comlist", ",", 
                 RowBox[{"xx", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"xx", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "]"}], "\[NotEqual]", "0"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"comlist", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"comlist", ",", 
                 RowBox[{"xx", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "\"\<condition neither true or false in decomposePD\>\"", "]"}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "comlist", "]"}], "\[NotEqual]", "0"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"comlist", "=", 
            RowBox[{"Drop", "[", 
             RowBox[{"comlist", ",", "1"}], "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "primelist", "]"}], "\[NotEqual]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Return", "[", "primelist", "]"}], ";"}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Return", "[", 
         RowBox[{"{", "}"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5246805918741965`*^9, 3.5246807490511866`*^9}, {
  3.5246825867922993`*^9, 3.524682685328935*^9}, {3.5246827240191483`*^9, 
  3.5246827271523275`*^9}, {3.5246828019766073`*^9, 3.5246828042367363`*^9}, {
  3.5246829397704887`*^9, 3.5246829746804852`*^9}, {3.5253092697580843`*^9, 
  3.5253092981747103`*^9}, {3.5253465764681683`*^9, 3.525346588525858*^9}, {
  3.5253470440629134`*^9, 3.525347053711465*^9}, {3.525347256484063*^9, 
  3.5253472669146595`*^9}, {3.5253503703165565`*^9, 3.5253504713333344`*^9}, {
  3.5253505502978506`*^9, 3.5253505729121447`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["get PD", "Subsection",
 CellChangeTimes->{{3.5243416693495235`*^9, 3.5243416743538094`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"unmappd", "[", "code_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"code", "===", 
      RowBox[{"PD", "[", 
       RowBox[{"Loop", "[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Return", "[", 
       RowBox[{"{", "}"}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Return", "[", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"Level", "[", 
          RowBox[{"code", ",", 
           RowBox[{"{", 
            RowBox[{"-", "1"}], "}"}]}], "]"}], ",", "4"}], "]"}], "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5246978824323177`*^9, 3.5246979242057076`*^9}, {
  3.5246979607677984`*^9, 3.524697983087075*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mappd", "[", "code_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "code", "]"}], "\[Equal]", "0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Return", "[", 
       RowBox[{"PD", "[", 
        RowBox[{"Loop", "[", "1", "]"}], "]"}], "]"}], ";"}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Return", "[", 
       RowBox[{"Apply", "[", 
        RowBox[{"PD", ",", 
         RowBox[{"Apply", "[", 
          RowBox[{"X", ",", "code", ",", "1"}], "]"}]}], "]"}], "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.524521169938831*^9, 3.5245211962453356`*^9}, {
  3.524521280295143*^9, 3.524521281396206*^9}, {3.5246609855847807`*^9, 
  3.524661011566267*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getPD", "[", "pointlist_", "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"p1", ",", "p2", ",", "v1", ",", "v2", ",", "intres", ",", 
      RowBox[{"valid", "=", "True"}], ",", "tempint", ",", "tempio", ",", 
      RowBox[{"intlist", "=", 
       RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"edgeintposlist", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"edgeintIOlist", "=", 
       RowBox[{"{", "}"}]}], ",", "temppos", ",", "arc", ",", 
      RowBox[{"pd", "=", 
       RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", "t1", ",", "t2", ",",
       "io1", ",", "io2", ",", "pos", ",", "twoOnRight", ",", "oneOver", ",", 
      "nonempind", ",", 
      RowBox[{"print", "=", "False"}]}], "\[IndentingNewLine]", "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Catch", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"p1", "=", 
          RowBox[{"pointlist", "[", 
           RowBox[{"[", "i1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"v1", "=", 
          RowBox[{
           RowBox[{"pointlist", "[", 
            RowBox[{"[", 
             RowBox[{"i1", "+", "1"}], "]"}], "]"}], "-", "p1"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"tempint", "=", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"p2", "=", 
             RowBox[{"pointlist", "[", 
              RowBox[{"[", "i2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"v2", "=", 
             RowBox[{
              RowBox[{"pointlist", "[", 
               RowBox[{"[", 
                RowBox[{"i2", "+", "1"}], "]"}], "]"}], "-", "p2"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"checkIndicesPD", "[", 
               RowBox[{"i1", ",", "i2", ",", 
                RowBox[{"Length", "[", "pointlist", "]"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"intres", "=", 
                RowBox[{"getEdgeIntersection", "[", 
                 RowBox[{
                  RowBox[{"p1", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"p1", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"p2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"p2", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"v1", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"v1", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"v2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"v2", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"intres", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"intres", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"FreeQ", "[", 
                    RowBox[{"tempint", ",", 
                    RowBox[{"intres", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "1"}], "]"}], "]"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"tempint", ",", 
                    RowBox[{"{", 
                    RowBox[{"i1", ",", "i2", ",", 
                    RowBox[{"intres", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"intres", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}], 
                    ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"print", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "Print", "[", "\"\<bad projection from triple point\>\"", 
                    "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Throw", "[", 
                    RowBox[{"{", 
                    RowBox[{"!", "valid"}], "}"}], "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]",
                  ",", "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{"invalid", " ", "proj", " ", "return"}], "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Throw", "[", 
                   RowBox[{"{", 
                    RowBox[{"!", "valid"}], "}"}], "]"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
             "]"}], ";"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"i2", ",", 
             RowBox[{
              RowBox[{"Length", "[", "pointlist", "]"}], "-", "1"}]}], 
            "}"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"intlist", ",", 
           RowBox[{"Sort", "[", 
            RowBox[{"tempint", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#1", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "<", 
               RowBox[{"#2", "[", 
                RowBox[{"[", "3", "]"}], "]"}]}], "&"}]}], "]"}]}], "]"}], 
         ";"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i1", ",", 
          RowBox[{
           RowBox[{"Length", "[", "pointlist", "]"}], "-", "1"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"arc", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"nonempind", "=", 
       RowBox[{"Position", "[", 
        RowBox[{"intlist", ",", 
         RowBox[{"x_", "/;", 
          RowBox[{
           RowBox[{"Length", "[", "x", "]"}], ">", "0"}]}], ",", "1"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "nonempind", "]"}], "\[Equal]", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"print", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", "\"\<no intersections\>\"", "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Throw", "[", 
          RowBox[{"{", 
           RowBox[{"valid", ",", 
            RowBox[{"{", "}"}]}], "}"}], "]"}], ";"}], "\[IndentingNewLine]", 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"nonempind", "=", 
          RowBox[{"nonempind", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i1", "=", "1"}], ",", 
        RowBox[{"i1", "\[LessEqual]", 
         RowBox[{"Length", "[", "intlist", "]"}]}], ",", 
        RowBox[{"i1", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tempio", "=", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"temppos", "=", 
          RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i2", "=", "1"}], ",", 
           RowBox[{"i2", "\[LessEqual]", 
            RowBox[{"Length", "[", 
             RowBox[{"intlist", "[", 
              RowBox[{"[", "i1", "]"}], "]"}], "]"}]}], ",", 
           RowBox[{"i2", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"i1", "\[Equal]", "nonempind"}], "&&", 
               RowBox[{"i2", "\[Equal]", 
                RowBox[{"Length", "[", 
                 RowBox[{"intlist", "[", 
                  RowBox[{"[", "i1", "]"}], "]"}], "]"}]}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"tempio", ",", 
                 RowBox[{"{", 
                  RowBox[{"arc", ",", "1"}], "}"}]}], "]"}], ";"}], 
              "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"tempio", ",", 
                 RowBox[{"{", 
                  RowBox[{"arc", ",", 
                   RowBox[{"arc", "+", "1"}]}], "}"}]}], "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"arc", "++"}], ";", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"temppos", ",", 
              RowBox[{"intlist", "[", 
               RowBox[{"[", 
                RowBox[{"i1", ",", "i2", ",", "3"}], "]"}], "]"}]}], "]"}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"edgeintIOlist", ",", "tempio"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"edgeintposlist", ",", "temppos"}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i1", "=", "1"}], ",", 
        RowBox[{"i1", "\[LessEqual]", 
         RowBox[{"Length", "[", "intlist", "]"}]}], ",", 
        RowBox[{"i1", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i2", "=", "1"}], ",", 
           RowBox[{"i2", "\[LessEqual]", 
            RowBox[{"Length", "[", 
             RowBox[{"intlist", "[", 
              RowBox[{"[", "i1", "]"}], "]"}], "]"}]}], ",", 
           RowBox[{"i2", "++"}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"intlist", "[", 
                RowBox[{"[", 
                 RowBox[{"i1", ",", "i2", ",", "1"}], "]"}], "]"}], "<", 
               RowBox[{"intlist", "[", 
                RowBox[{"[", 
                 RowBox[{"i1", ",", "i2", ",", "2"}], "]"}], "]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"p1", "=", 
                RowBox[{"pointlist", "[", 
                 RowBox[{"[", "i1", "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"v1", "=", 
                RowBox[{
                 RowBox[{"pointlist", "[", 
                  RowBox[{"[", 
                   RowBox[{"i1", "+", "1"}], "]"}], "]"}], "-", "p1"}]}], ";",
                "\[IndentingNewLine]", 
               RowBox[{"p2", "=", 
                RowBox[{"pointlist", "[", 
                 RowBox[{"[", 
                  RowBox[{"intlist", "[", 
                   RowBox[{"[", 
                    RowBox[{"i1", ",", "i2", ",", "2"}], "]"}], "]"}], "]"}], 
                 "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"v2", "=", 
                RowBox[{
                 RowBox[{"pointlist", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"intlist", "[", 
                    RowBox[{"[", 
                    RowBox[{"i1", ",", "i2", ",", "2"}], "]"}], "]"}], "+", 
                    "1"}], "]"}], "]"}], "-", "p2"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"t1", "=", 
                RowBox[{"intlist", "[", 
                 RowBox[{"[", 
                  RowBox[{"i1", ",", "i2", ",", "3"}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"t2", "=", 
                RowBox[{"intlist", "[", 
                 RowBox[{"[", 
                  RowBox[{"i1", ",", "i2", ",", "4"}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"io1", "=", 
                RowBox[{"edgeintIOlist", "[", 
                 RowBox[{"[", 
                  RowBox[{"i1", ",", "i2"}], "]"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"pos", "=", 
                RowBox[{"Position", "[", 
                 RowBox[{
                  RowBox[{"edgeintposlist", "[", 
                   RowBox[{"[", 
                    RowBox[{"intlist", "[", 
                    RowBox[{"[", 
                    RowBox[{"i1", ",", "i2", ",", "2"}], "]"}], "]"}], "]"}], 
                   "]"}], ",", "t2"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "pos", "]"}], "!=", "1"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{"print", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    "Print", "[", "\"\<error in position lookup\>\"", "]"}]}],
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"Throw", "[", 
                   RowBox[{"{", 
                    RowBox[{"!", "valid"}], "}"}], "]"}], ";"}], 
                 "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"io2", "=", 
                   RowBox[{"edgeintIOlist", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"intlist", "[", 
                    RowBox[{"[", 
                    RowBox[{"i1", ",", "i2", ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"pos", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}]}], 
                  ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"oneOver", "=", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"p1", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "+", 
                   RowBox[{
                    RowBox[{"v1", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "*", "t1"}]}], ")"}], ">", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"p2", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "+", 
                   RowBox[{
                    RowBox[{"v2", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "*", "t2"}]}], ")"}]}]}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"p1", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "+", 
                    RowBox[{
                    RowBox[{"v1", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "*", "t1"}]}], ")"}], 
                  "\[Equal]", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"p2", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "+", 
                    RowBox[{
                    RowBox[{"v2", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "*", "t2"}]}], ")"}]}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Print", "[", "\"\<segment intersection\>\"", "]"}],
                   ";", "\[IndentingNewLine]", 
                  RowBox[{"Abort", "[", "]"}], ";"}]}], "\[IndentingNewLine]",
                 "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"twoOnRight", "=", 
                RowBox[{"isOnRight", "[", 
                 RowBox[{
                  RowBox[{"p1", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"p1", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"v1", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"v1", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"p2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"p2", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{"oneOver", ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{"twoOnRight", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"pd", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"io2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"io1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"io2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"io1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ";"}], 
                    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"pd", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"io2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"io1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"io2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"io1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ";"}]}],
                    "\[IndentingNewLine]", "]"}], ";"}], 
                 "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{"twoOnRight", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"pd", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"io1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"io2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"io1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"io2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ";"}], 
                    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"pd", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"io1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"io2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"io1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"io2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ";"}]}],
                    "\[IndentingNewLine]", "]"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
             "]"}], ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Throw", "[", 
       RowBox[{"{", 
        RowBox[{"valid", ",", "pd"}], "}"}], "]"}], ";"}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5240474642876205`*^9, 3.524047509307195*^9}, {
   3.524047599291342*^9, 3.5240477325989666`*^9}, {3.5240477700951114`*^9, 
   3.5240481639616394`*^9}, {3.5240481985146155`*^9, 
   3.5240481993806653`*^9}, {3.5240482547218304`*^9, 
   3.5240483995641146`*^9}, {3.5240484611386366`*^9, 3.52404853829805*^9}, {
   3.5240487340662475`*^9, 3.524048778678799*^9}, {3.5240488217322617`*^9, 
   3.52404887921655*^9}, 3.5240490339654007`*^9, {3.5240491690101247`*^9, 
   3.5240491758755174`*^9}, {3.5240494585996885`*^9, 3.524049483910136*^9}, {
   3.5240498622617764`*^9, 3.524049867372069*^9}, {3.524049899847926*^9, 
   3.524050044696211*^9}, {3.5240500829974017`*^9, 3.5240500922189293`*^9}, {
   3.524050262831688*^9, 3.524050299683796*^9}, {3.5240508070368147`*^9, 
   3.5240508624439836`*^9}, {3.5240510354758806`*^9, 
   3.5240510856147485`*^9}, {3.524051117777588*^9, 3.5240511377387295`*^9}, {
   3.5240518085140953`*^9, 3.524051824572014*^9}, {3.5240521386989813`*^9, 
   3.524052289368599*^9}, {3.5240523337501373`*^9, 3.5240523379463778`*^9}, {
   3.5240528149526606`*^9, 3.5240528322896523`*^9}, {3.5240529503264036`*^9, 
   3.524052951227455*^9}, {3.524053053450302*^9, 3.524053061614769*^9}, {
   3.524053180034542*^9, 3.5240534042753677`*^9}, {3.524053439780399*^9, 
   3.5240534928574347`*^9}, {3.5240535261593394`*^9, 
   3.5240538112806473`*^9}, {3.5240538478417387`*^9, 3.524053853184044*^9}, {
   3.524053920731908*^9, 3.5240539264462347`*^9}, {3.524053963680364*^9, 
   3.524054010321032*^9}, {3.524055165752119*^9, 3.5240553065331707`*^9}, {
   3.5240553595952063`*^9, 3.5240555309780083`*^9}, {3.52405557383846*^9, 
   3.524055597247799*^9}, {3.5240567268784103`*^9, 3.5240567325737357`*^9}, {
   3.5240568767489824`*^9, 3.5240568975891743`*^9}, {3.524056946131951*^9, 
   3.5240569479340534`*^9}, {3.5240569955727787`*^9, 3.524057015421914*^9}, {
   3.5240570472897367`*^9, 3.5240571023078833`*^9}, {3.5240575366827283`*^9, 
   3.5240575384798307`*^9}, {3.5240575982422495`*^9, 3.524057618758423*^9}, {
   3.524057785171941*^9, 3.5240577884161263`*^9}, 3.524057867312639*^9, {
   3.5240581580412683`*^9, 3.524058184609788*^9}, {3.5240583858372974`*^9, 
   3.524058434946106*^9}, {3.5240585618353634`*^9, 3.5240585690417757`*^9}, {
   3.5240586306092973`*^9, 3.524058709403804*^9}, {3.524058760715739*^9, 
   3.524058922541995*^9}, {3.5240945755848246`*^9, 3.524094575713832*^9}, {
   3.5243075772157607`*^9, 3.5243076127477927`*^9}, {3.524311642057708*^9, 
   3.524311647315009*^9}, 3.5243119196845875`*^9, {3.5243351607512803`*^9, 
   3.5243351847916555`*^9}, {3.5243352953289776`*^9, 3.524335301961357*^9}, {
   3.5243357478528605`*^9, 3.524335764302801*^9}, {3.52434261025734*^9, 
   3.5243426427001953`*^9}, 3.5246950666502647`*^9, {3.524695145407769*^9, 
   3.5246952048601694`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"reducePD", "[", "code_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"done", "=", "False"}], ",", 
      RowBox[{"r1r2done", "=", "False"}], ",", "redcode", ",", "tempcode", 
      ",", "res1", ",", "res2"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"redcode", "=", "code"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "code", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Return", "[", 
         RowBox[{"{", "}"}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"!", "done"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tempcode", "=", "redcode"}], ";", "\[IndentingNewLine]", 
           RowBox[{"r1r2done", "=", "False"}], ";", "\[IndentingNewLine]", 
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{"!", "r1r2done"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"res1", "=", 
               RowBox[{"reduceR1PD", "[", "tempcode", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"res2", "=", 
               RowBox[{"reduceR2PD", "[", 
                RowBox[{"res1", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"r1r2done", "=", 
               RowBox[{"!", 
                RowBox[{"res2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"tempcode", "=", 
               RowBox[{"res2", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "tempcode", "]"}], "<", 
              RowBox[{"Length", "[", "redcode", "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"Print", "[", "tempcode", "]"}], ";"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"redcode", "=", 
               RowBox[{"reduceR3PD", "[", "tempcode", "]"}]}], ";"}], 
             "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"done", "=", "True"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "redcode", "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.524306989301134*^9, 3.524307010060321*^9}, {
   3.5243072458998103`*^9, 3.52430724659585*^9}, {3.5245219711306562`*^9, 
   3.524522009807869*^9}, {3.5245220769747105`*^9, 3.5245220825210276`*^9}, {
   3.5245292657778864`*^9, 3.5245292859970427`*^9}, {3.524565909967206*^9, 
   3.5245659113242836`*^9}, {3.5245659430170965`*^9, 3.524566077320778*^9}, {
   3.524566183377844*^9, 3.52456618838313*^9}, {3.5245672517029486`*^9, 
   3.524567260790468*^9}, {3.524571553666007*^9, 3.5245715551610923`*^9}, {
   3.524573501801434*^9, 3.5245735042725754`*^9}, {3.5245742010294275`*^9, 
   3.524574201618461*^9}, {3.524578130200163*^9, 3.5245781311342163`*^9}, {
   3.524578370090884*^9, 3.5245783730670547`*^9}, {3.5245834885908732`*^9, 
   3.5245834981074176`*^9}, {3.5245840420045266`*^9, 
   3.5245840435136127`*^9}, {3.5246079938602686`*^9, 3.52460799582238*^9}, 
   3.5247581206426086`*^9, {3.5247594507996893`*^9, 3.524759458736143*^9}, {
   3.524759589413617*^9, 3.5247596104188185`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"getReducedPD", "[", "polygon_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"done", "=", "False"}], ",", 
      RowBox[{"valid", "=", "False"}], ",", "code", ",", "coderes", ",", 
      "redcode", ",", "res1", ",", "res2"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Print", "[", "polygon", "]"}], ";"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"coderes", "=", 
      RowBox[{"getPD", "[", "polygon", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"coderes", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"code", "=", 
         RowBox[{"coderes", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"valid", "=", "True"}], ";"}], "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Return", "[", 
         RowBox[{"{", "False", "}"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "code", "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "code", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"redcode", "=", 
        RowBox[{"{", "}"}]}], "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"redcode", "=", 
         RowBox[{"reducePD", "[", "code", "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"valid", ",", "redcode"}], "}"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5243066274394364`*^9, 3.524306770182601*^9}, {
  3.5243068025024495`*^9, 3.524306983533804*^9}, {3.5243072369712996`*^9, 
  3.52430723767234*^9}, {3.5243076462527094`*^9, 3.5243077032539697`*^9}, {
  3.5243077436442795`*^9, 3.5243078374896474`*^9}, {3.5243382433485947`*^9, 
  3.5243382869140863`*^9}, {3.524566289585919*^9, 3.524566309070033*^9}, {
  3.524567062970154*^9, 3.5245670848614063`*^9}, {3.524567138970501*^9, 
  3.524567141698657*^9}, {3.5245715751412354`*^9, 3.524571576760328*^9}, {
  3.5245839348873997`*^9, 3.5245839405087214`*^9}, {3.524608198016945*^9, 
  3.5246081999340553`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nicerPD", "[", 
   RowBox[{"polygon_", ",", "retries_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"done", ",", "res", ",", "best", ",", "temp", ",", "poly", ",", 
      RowBox[{"polylist", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"AppendTo", "[", 
       RowBox[{"polylist", ",", "polygon"}], "]"}], ";"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"res", "=", 
      RowBox[{"getReducedPD", "[", "polygon", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"res", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"poly", "=", 
         RowBox[{"rotatePoly", "[", "polygon", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"res", "=", 
         RowBox[{"getReducedPD", "[", "poly", "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"polylist", ",", "poly"}], "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"best", "=", 
      RowBox[{"res", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"poly", "=", 
         RowBox[{"rotatePoly", "[", "polygon", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"res", "=", 
         RowBox[{"getReducedPD", "[", "poly", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"res", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"poly", "=", 
            RowBox[{"rotatePoly", "[", "polygon", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"res", "=", 
            RowBox[{"getReducedPD", "[", "poly", "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"polylist", ",", "poly"}], "]"}], ";"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"temp", "=", 
         RowBox[{"res", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "temp", "]"}], "<", 
           RowBox[{"Length", "[", "best", "]"}]}], ",", 
          RowBox[{"best", "=", " ", "temp"}]}], "]"}], ";"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", "retries", "}"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "best", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.524307276645569*^9, 3.524307296534706*^9}, {
  3.524307344798467*^9, 3.5243074728547916`*^9}, {3.524307849126313*^9, 
  3.5243080784184275`*^9}, {3.5245669998585443`*^9, 3.524567006179906*^9}, {
  3.524567104352521*^9, 3.5245671070866776`*^9}, {3.524576110247628*^9, 
  3.5245762648214693`*^9}, {3.524576315999397*^9, 3.524576324932908*^9}, {
  3.524578318662943*^9, 3.524578339995163*^9}, {3.5369675790625*^9, 
  3.53696765428125*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["PD to polygon", "Subsection",
 CellChangeTimes->{{3.524684944159047*^9, 3.5246849462421665`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"polygonFromPD", "[", "pd_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"poly", "=", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "0"}], "}"}], "}"}]}], ",", 
       RowBox[{"ystr", "=", "1"}], ",", 
       RowBox[{"xpos", "=", "1"}], ",", 
       RowBox[{"index", "=", "1"}], ",", 
       RowBox[{"closed", "=", "False"}], ",", "entry", ",", "mlink", ",", 
       "tojoin"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "pd", "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}], 
         ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"mlink", "=", 
       RowBox[{"MorseLink", "[", 
        RowBox[{"mappd", "[", "pd", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"!", "closed"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"entry", "=", 
          RowBox[{"mlink", "[", 
           RowBox[{"[", "index", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Head", "[", "entry", "]"}], "===", "Cup"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Which", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"xpos", "<", "index"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"ystr", "\[GreaterEqual]", " ", 
                  RowBox[{"Min", "[", 
                   RowBox[{
                    RowBox[{"entry", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"entry", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"tojoin", "=", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "+", "1"}], ",", 
                    RowBox[{"ystr", "+", "2"}], ",", "0"}], "}"}], "}"}]}], 
                  ";", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"xpos", ",", "ystr", ",", "0"}], "}"}], 
                    "\[NotEqual]", 
                    RowBox[{"poly", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"PrependTo", "[", 
                    RowBox[{"tojoin", ",", 
                    RowBox[{"{", 
                    RowBox[{"xpos", ",", "ystr", ",", "0"}], "}"}]}], "]"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"poly", "=", 
                   RowBox[{"Join", "[", 
                    RowBox[{"poly", ",", "tojoin"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"xpos", "++"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"ystr", "+=", "2"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"index", "++"}], ";"}], "\[IndentingNewLine]", ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"poly", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "+", "1"}], ",", "ystr", ",", "0"}], 
                    "}"}]}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"xpos", "++"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"index", "++"}], ";"}]}], "\[IndentingNewLine]", 
                "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
              ",", 
              RowBox[{"xpos", "\[Equal]", "index"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Which", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"ystr", ">", 
                  RowBox[{"Max", "[", 
                   RowBox[{
                    RowBox[{"entry", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"entry", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"tojoin", "=", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "-", "1"}], ",", 
                    RowBox[{"ystr", "-", "2"}], ",", "0"}], "}"}], "}"}]}], 
                  ";", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"xpos", ",", "ystr", ",", "0"}], "}"}], 
                    "\[NotEqual]", 
                    RowBox[{"poly", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"PrependTo", "[", 
                    RowBox[{"tojoin", ",", 
                    RowBox[{"{", 
                    RowBox[{"xpos", ",", "ystr", ",", "0"}], "}"}]}], "]"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"poly", "=", 
                   RowBox[{"Join", "[", 
                    RowBox[{"poly", ",", "tojoin"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"xpos", "--"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"ystr", "-=", "2"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"index", "--"}], ";"}], "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"ystr", "\[Equal]", 
                  RowBox[{"entry", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"tojoin", "=", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"xpos", ",", 
                    RowBox[{"entry", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "0"}], "}"}], 
                    "}"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"xpos", ",", "ystr", ",", "0"}], "}"}], 
                    "\[NotEqual]", 
                    RowBox[{"poly", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"PrependTo", "[", 
                    RowBox[{"tojoin", ",", 
                    RowBox[{"{", 
                    RowBox[{"xpos", ",", "ystr", ",", "0"}], "}"}]}], "]"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"poly", "=", 
                   RowBox[{"Join", "[", 
                    RowBox[{"poly", ",", "tojoin"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"ystr", "=", 
                   RowBox[{"entry", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"index", "++"}], ";"}], "\[IndentingNewLine]", 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"ystr", "<", 
                  RowBox[{"Min", "[", 
                   RowBox[{
                    RowBox[{"entry", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"entry", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"poly", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "-", "1"}], ",", "ystr", ",", "0"}], 
                    "}"}]}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"xpos", "--"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"index", "--"}], ";"}]}], "\[IndentingNewLine]", 
                "]"}], ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
             "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Head", "[", "entry", "]"}], "===", "X"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Which", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"xpos", "<", "index"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Which", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"ystr", "\[Equal]", 
                  RowBox[{"entry", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"entry", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "===", "Under"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"poly", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"poly", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "+", 
                    RowBox[{"1", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "+", 
                    RowBox[{"1", "/", "4"}]}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "+", 
                    RowBox[{"1", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "+", 
                    RowBox[{"1", "/", "4"}]}], ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], "/", "2"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "+", 
                    RowBox[{"3", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "+", 
                    RowBox[{"3", "/", "4"}]}], ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], "/", "2"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "+", 
                    RowBox[{"3", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "+", 
                    RowBox[{"3", "/", "4"}]}], ",", "0"}], "}"}]}], "}"}]}], 
                    "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"poly", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"poly", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "+", 
                    RowBox[{"1", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "+", 
                    RowBox[{"1", "/", "4"}]}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "+", 
                    RowBox[{"3", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "+", 
                    RowBox[{"3", "/", "4"}]}], ",", "0"}], "}"}]}], "}"}]}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"xpos", "++"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"ystr", "++"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"index", "++"}], ";"}], "\[IndentingNewLine]", 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"poly", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"poly", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "+", 
                    RowBox[{"1", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "+", 
                    RowBox[{"1", "/", "4"}]}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "+", 
                    RowBox[{"1", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "+", 
                    RowBox[{"1", "/", "4"}]}], ",", 
                    RowBox[{"1", "/", "2"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "+", 
                    RowBox[{"3", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "+", 
                    RowBox[{"3", "/", "4"}]}], ",", 
                    RowBox[{"1", "/", "2"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "+", 
                    RowBox[{"3", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "+", 
                    RowBox[{"3", "/", "4"}]}], ",", "0"}], "}"}]}], "}"}]}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"xpos", "++"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"ystr", "++"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"index", "++"}], ";"}]}], "\[IndentingNewLine]", 
                   "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]",
                  ",", 
                 RowBox[{"ystr", "\[Equal]", 
                  RowBox[{
                   RowBox[{"entry", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "1"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"entry", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "===", "Under"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"poly", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"poly", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "+", 
                    RowBox[{"1", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "-", 
                    RowBox[{"1", "/", "4"}]}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "+", 
                    RowBox[{"1", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "-", 
                    RowBox[{"1", "/", "4"}]}], ",", 
                    RowBox[{"1", "/", "2"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "+", 
                    RowBox[{"3", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "-", 
                    RowBox[{"3", "/", "4"}]}], ",", 
                    RowBox[{"1", "/", "2"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "+", 
                    RowBox[{"3", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "-", 
                    RowBox[{"3", "/", "4"}]}], ",", "0"}], "}"}]}], "}"}]}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"xpos", "++"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"ystr", "--"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"index", "++"}], ";"}], "\[IndentingNewLine]", 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"poly", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"poly", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "+", 
                    RowBox[{"1", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "-", 
                    RowBox[{"1", "/", "4"}]}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "+", 
                    RowBox[{"1", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "-", 
                    RowBox[{"1", "/", "4"}]}], ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], "/", "2"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "+", 
                    RowBox[{"3", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "-", 
                    RowBox[{"3", "/", "4"}]}], ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], "/", "2"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "+", 
                    RowBox[{"3", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "-", 
                    RowBox[{"3", "/", "4"}]}], ",", "0"}], "}"}]}], "}"}]}], 
                    "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"poly", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"poly", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "+", 
                    RowBox[{"1", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "-", 
                    RowBox[{"1", "/", "4"}]}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "+", 
                    RowBox[{"3", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "-", 
                    RowBox[{"3", "/", "4"}]}], ",", "0"}], "}"}]}], "}"}]}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"xpos", "++"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"ystr", "--"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"index", "++"}], ";"}]}], "\[IndentingNewLine]", 
                   "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]",
                  ",", "True", ",", "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"poly", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "+", "1"}], ",", "ystr", ",", "0"}], 
                    "}"}]}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"xpos", "++"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"index", "++"}], ";"}]}], "\[IndentingNewLine]", 
                "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
              ",", 
              RowBox[{"xpos", "\[Equal]", "index"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Which", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"ystr", "\[Equal]", 
                  RowBox[{"entry", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"entry", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "===", "Under"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"poly", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"poly", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "-", 
                    RowBox[{"1", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "+", 
                    RowBox[{"1", "/", "4"}]}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "-", 
                    RowBox[{"1", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "+", 
                    RowBox[{"1", "/", "4"}]}], ",", 
                    RowBox[{"1", "/", "2"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "-", 
                    RowBox[{"3", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "+", 
                    RowBox[{"3", "/", "4"}]}], ",", 
                    RowBox[{"1", "/", "2"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "-", 
                    RowBox[{"3", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "+", 
                    RowBox[{"3", "/", "4"}]}], ",", "0"}], "}"}]}], "}"}]}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"xpos", "--"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"ystr", "++"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"index", "--"}], ";"}], "\[IndentingNewLine]", 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"poly", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"poly", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "-", 
                    RowBox[{"1", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "+", 
                    RowBox[{"1", "/", "4"}]}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "-", 
                    RowBox[{"1", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "+", 
                    RowBox[{"1", "/", "4"}]}], ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], "/", "2"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "-", 
                    RowBox[{"3", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "+", 
                    RowBox[{"3", "/", "4"}]}], ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], "/", "2"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "-", 
                    RowBox[{"3", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "+", 
                    RowBox[{"3", "/", "4"}]}], ",", "0"}], "}"}]}], "}"}]}], 
                    "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"poly", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"poly", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "-", 
                    RowBox[{"1", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "+", 
                    RowBox[{"1", "/", "4"}]}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "-", 
                    RowBox[{"3", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "+", 
                    RowBox[{"3", "/", "4"}]}], ",", "0"}], "}"}]}], "}"}]}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"xpos", "--"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"ystr", "++"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"index", "--"}], ";"}]}], "\[IndentingNewLine]", 
                   "]"}], ";"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"ystr", "\[Equal]", 
                  RowBox[{
                   RowBox[{"entry", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "1"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"entry", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "===", "Under"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"poly", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"poly", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "-", 
                    RowBox[{"1", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "-", 
                    RowBox[{"1", "/", "4"}]}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "-", 
                    RowBox[{"1", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "-", 
                    RowBox[{"1", "/", "4"}]}], ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], "/", "2"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "-", 
                    RowBox[{"3", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "-", 
                    RowBox[{"3", "/", "4"}]}], ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], "/", "2"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "-", 
                    RowBox[{"3", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "-", 
                    RowBox[{"3", "/", "4"}]}], ",", "0"}], "}"}]}], "}"}]}], 
                    "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"poly", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"poly", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "-", 
                    RowBox[{"1", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "-", 
                    RowBox[{"1", "/", "4"}]}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "-", 
                    RowBox[{"3", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "-", 
                    RowBox[{"3", "/", "4"}]}], ",", "0"}], "}"}]}], "}"}]}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"xpos", "--"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"ystr", "--"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"index", "--"}], ";"}], "\[IndentingNewLine]", 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"poly", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"poly", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "-", 
                    RowBox[{"1", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "-", 
                    RowBox[{"1", "/", "4"}]}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "-", 
                    RowBox[{"1", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "-", 
                    RowBox[{"1", "/", "4"}]}], ",", 
                    RowBox[{"1", "/", "2"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "-", 
                    RowBox[{"3", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "-", 
                    RowBox[{"3", "/", "4"}]}], ",", 
                    RowBox[{"1", "/", "2"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "-", 
                    RowBox[{"3", "/", "4"}]}], ",", 
                    RowBox[{"ystr", "-", 
                    RowBox[{"3", "/", "4"}]}], ",", "0"}], "}"}]}], "}"}]}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"xpos", "--"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"ystr", "--"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"index", "--"}], ";"}]}], "\[IndentingNewLine]", 
                   "]"}], ";"}], "\[IndentingNewLine]", ",", "True", ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"poly", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "-", "1"}], ",", "ystr", ",", "0"}], 
                    "}"}]}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"xpos", "--"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"index", "--"}], ";"}]}], "\[IndentingNewLine]", 
                "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Head", "[", "entry", "]"}], "===", "Cap"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Which", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"xpos", "<", "index"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Which", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"ystr", ">", 
                  RowBox[{"Max", "[", 
                   RowBox[{
                    RowBox[{"entry", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"entry", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"tojoin", "=", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "+", "1"}], ",", 
                    RowBox[{"ystr", "-", "2"}], ",", "0"}], "}"}], "}"}]}], 
                  ";", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"xpos", ",", "ystr", ",", "0"}], "}"}], 
                    "\[NotEqual]", 
                    RowBox[{"poly", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"PrependTo", "[", 
                    RowBox[{"tojoin", ",", 
                    RowBox[{"{", 
                    RowBox[{"xpos", ",", "ystr", ",", "0"}], "}"}]}], "]"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"poly", "=", 
                   RowBox[{"Join", "[", 
                    RowBox[{"poly", ",", "tojoin"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"xpos", "++"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"ystr", "-=", "2"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"index", "++"}], ";"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"ystr", "<", 
                  RowBox[{"Min", "[", 
                   RowBox[{
                    RowBox[{"entry", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"entry", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"poly", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "+", "1"}], ",", "ystr", ",", "0"}], 
                    "}"}]}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"xpos", "++"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"index", "++"}], ";"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"ystr", "\[Equal]", 
                  RowBox[{"entry", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"tojoin", "=", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"xpos", ",", 
                    RowBox[{"entry", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "0"}], "}"}], 
                    "}"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"xpos", ",", "ystr", ",", "0"}], "}"}], 
                    "\[NotEqual]", 
                    RowBox[{"poly", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"PrependTo", "[", 
                    RowBox[{"tojoin", ",", 
                    RowBox[{"{", 
                    RowBox[{"xpos", ",", "ystr", ",", "0"}], "}"}]}], "]"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"poly", "=", 
                   RowBox[{"Join", "[", 
                    RowBox[{"poly", ",", "tojoin"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"ystr", "=", 
                   RowBox[{"entry", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"index", "--"}], ";"}]}], "\[IndentingNewLine]", 
                "]"}], ";"}], "\[IndentingNewLine]", ",", 
              RowBox[{"xpos", "\[Equal]", "index"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"ystr", "\[GreaterEqual]", 
                  RowBox[{"Min", "[", 
                   RowBox[{
                    RowBox[{"entry", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"entry", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"tojoin", "=", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "-", "1"}], ",", 
                    RowBox[{"ystr", "+", "2"}], ",", "0"}], "}"}], "}"}]}], 
                  ";", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"xpos", ",", "ystr", ",", "0"}], "}"}], 
                    "\[NotEqual]", 
                    RowBox[{"poly", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"PrependTo", "[", 
                    RowBox[{"tojoin", ",", 
                    RowBox[{"{", 
                    RowBox[{"xpos", ",", "ystr", ",", "0"}], "}"}]}], "]"}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"poly", "=", 
                   RowBox[{"Join", "[", 
                    RowBox[{"poly", ",", "tojoin"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"xpos", "--"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"ystr", "+=", "2"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"index", "--"}], ";"}], "\[IndentingNewLine]", ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"poly", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xpos", "-", "1"}], ",", "ystr", ",", "0"}], 
                    "}"}]}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"xpos", "--"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"index", "--"}], ";"}]}], "\[IndentingNewLine]", 
                "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"xpos", ",", "ystr", ",", "0"}], "}"}], "\[Equal]", 
            RowBox[{"poly", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"closed", "=", "True"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"poly", "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}], "\[NotEqual]", 
               RowBox[{"poly", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"poly", ",", 
                 RowBox[{"poly", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{
        RowBox[{"ReflectionTransform", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1"}], "}"}], "]"}], "[", "poly", "]"}],
        "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.524660327749155*^9, 3.52466034409809*^9}, {
   3.5246605987306542`*^9, 3.524660606618105*^9}, {3.5246606980513353`*^9, 
   3.5246607392076893`*^9}, {3.524660800803212*^9, 3.524660827222723*^9}, {
   3.524660864095832*^9, 3.5246608763295317`*^9}, {3.524661146774*^9, 
   3.5246611490111284`*^9}, {3.5246613845285993`*^9, 3.524661436203555*^9}, {
   3.524661474022718*^9, 3.5246614809011116`*^9}, 3.524661612666648*^9, {
   3.5246660353096085`*^9, 3.524666089495708*^9}, {3.5246662104586267`*^9, 
   3.5246662784095135`*^9}, {3.5246663457743664`*^9, 
   3.5246663738639727`*^9}, {3.52466663239676*^9, 3.5246666540439987`*^9}, {
   3.524666723285959*^9, 3.5246667493124475`*^9}, {3.524667020390952*^9, 
   3.524667083750576*^9}, {3.5246671573447857`*^9, 3.52466718854357*^9}, {
   3.524667260825704*^9, 3.524667364269621*^9}, {3.5246674020657825`*^9, 
   3.5246674432861404`*^9}, {3.524667499940381*^9, 3.5246675367364855`*^9}, {
   3.5246675936107388`*^9, 3.524667962685848*^9}, {3.524668038175166*^9, 
   3.5246681348606963`*^9}, {3.524668242869874*^9, 3.524668286267356*^9}, {
   3.524668321073347*^9, 3.5246683833889112`*^9}, {3.52466842760044*^9, 
   3.524668644410841*^9}, {3.52466869299362*^9, 3.524668794650434*^9}, {
   3.5246688369138513`*^9, 3.5246690299628935`*^9}, {3.524669095379635*^9, 
   3.524669102941067*^9}, {3.524669146220543*^9, 3.5246692224709044`*^9}, {
   3.524669269380587*^9, 3.5246695015118637`*^9}, {3.5246695354148035`*^9, 
   3.524669539628044*^9}, {3.524669628600133*^9, 3.5246696320493307`*^9}, {
   3.524669699287176*^9, 3.5246698984705687`*^9}, {3.524670177506529*^9, 
   3.5246702763731833`*^9}, {3.524670315034395*^9, 3.524670327484107*^9}, {
   3.524670531874798*^9, 3.5246705885180373`*^9}, {3.5246706844015217`*^9, 
   3.524670794791836*^9}, {3.5246708400234227`*^9, 3.5246708418925295`*^9}, {
   3.5246711721404185`*^9, 3.5246712703230343`*^9}, {3.524671303868953*^9, 
   3.52467149089365*^9}, {3.5246718402986355`*^9, 3.5246718522863207`*^9}, {
   3.5246744814036975`*^9, 3.524674524853183*^9}, {3.5246746330853734`*^9, 
   3.5246746365295706`*^9}, {3.5246747447807617`*^9, 3.52467474806995*^9}, {
   3.5246849631151314`*^9, 3.524684990977725*^9}, {3.5247494127985477`*^9, 
   3.52474941510968*^9}, {3.5247494460264487`*^9, 3.5247495471002297`*^9}, {
   3.5247497261834726`*^9, 3.5247497567362204`*^9}, {3.5247509615251303`*^9, 
   3.524751034291292*^9}, {3.524751127553626*^9, 3.524751128278668*^9}, {
   3.5247512052600713`*^9, 3.524751251324706*^9}, 3.5247514991128783`*^9, {
   3.524751753486428*^9, 3.52475176646517*^9}, {3.5247518141208963`*^9, 
   3.524751831997918*^9}, {3.524751862288651*^9, 3.5247518983497133`*^9}, {
   3.524751945034384*^9, 3.524751971805915*^9}, {3.524752003062703*^9, 
   3.524752268486884*^9}, {3.5247525642738023`*^9, 3.5247526544959626`*^9}, {
   3.5247531540935383`*^9, 3.524753262248724*^9}, {3.529365571765625*^9, 
   3.529365596765625*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Display Tools", "Section",
 CellChangeTimes->{{3.5234669286249275`*^9, 3.5234669335012064`*^9}}],

Cell[CellGroupData[{

Cell["functions", "Subsection",
 CellChangeTimes->{{3.523466951473234*^9, 3.523466952488292*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "package", " ", "useful", " ", "graphics", " ", "for", " ", "the", " ", 
    "vertex", " ", "lists"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"plotlist", "[", "v_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"lab", ",", "i", ",", "a"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"a", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "\[LessEqual]", 
           RowBox[{
            RowBox[{"Length", "[", "v", "]"}], "-", "1"}]}], ",", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"a", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"a", ",", 
              RowBox[{"Graphics3D", "[", 
               RowBox[{"{", 
                RowBox[{"Text", "[", 
                 RowBox[{"i", ",", 
                  RowBox[{
                   RowBox[{"v", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "+", 
                   RowBox[{"{", 
                    RowBox[{"0.1", ",", "0.1", ",", "0.1"}], "}"}]}]}], "]"}],
                 "}"}], "]"}]}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Labeled", "[", 
       RowBox[{
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"Graphics3D", "[", 
           RowBox[{"{", 
            RowBox[{"Line", "[", "v", "]"}], "}"}], "]"}], ",", 
          RowBox[{"Graphics3D", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "[", "Large", "]"}], ",", "Red", ",", 
             RowBox[{"Point", "[", 
              RowBox[{"v", "[", 
               RowBox[{"[", 
                RowBox[{"2", ";;", 
                 RowBox[{
                  RowBox[{"Length", "[", "v", "]"}], "-", "1"}]}], "]"}], 
               "]"}], "]"}]}], "}"}], "]"}], ",", 
          RowBox[{"Graphics3D", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "[", "Large", "]"}], ",", "Blue", ",", 
             RowBox[{"Point", "[", 
              RowBox[{"v", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Graphics3D", "[", 
           RowBox[{"Arrow", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"v", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"v", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], "]"}]}], "]"}],
         ",", 
        RowBox[{"Length", "[", "v", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5102662305114746`*^9, 3.5102662907599206`*^9}, {
  3.51026715635743*^9, 3.510267446340016*^9}, {3.5102738897145557`*^9, 
  3.5102738898285627`*^9}, {3.5102750374462023`*^9, 3.510275039780336*^9}, {
  3.5102785592396374`*^9, 3.5102785628628445`*^9}, {3.5102785954247074`*^9, 
  3.510278615425851*^9}, {3.510309548016094*^9, 3.510309549082155*^9}, {
  3.5103224224543686`*^9, 3.5103224355121155`*^9}, {3.5109133824585867`*^9, 
  3.5109133850167327`*^9}, {3.510914913829176*^9, 3.510914921783631*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"project", "[", "pointList_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nPointList", "=", 
      RowBox[{"{", "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"nPointList", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"pointList", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"pointList", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "pointList", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", " ", "[", "nPointList", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.517064221000345*^9, 3.517064241162353*^9}, {
  3.517064320599306*^9, 3.517064387983012*^9}, {3.517064449133391*^9, 
  3.517064456645051*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Make", " ", "a", " ", "list", " ", "of", " ", "lines", " ", "between", 
    " ", "the", " ", "points", " ", "to", " ", "make", " ", "the", " ", 
    "polygon", " ", "look", " ", "like", " ", "a", " ", 
    RowBox[{"polygon", ".", " ", "Works"}], " ", "for", " ", "2", "D", " ", 
    "and", " ", "3", 
    RowBox[{"D", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"makeLines", "[", "pointList_", "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"lineList", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"nPointList", "=", "pointList"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"nPointList", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "\[NotEqual]", " ", 
          RowBox[{"nPointList", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "nPointList", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"nPointList", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "nPointList", "]"}], "]"}], "]"}], " ", 
          "=", " ", 
          RowBox[{"nPointList", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"lineList", ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"nPointList", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"nPointList", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}], "]"}]}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{
            RowBox[{"Length", "[", "pointList", "]"}], "-", "1"}]}], "}"}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "lineList", "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Optionally", " ", "specify", " ", "a", " ", "point", " ", "of", " ", 
     "interest"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"makeLines", "[", 
     RowBox[{"pointList_", ",", "iPoint_"}], "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"lineList", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"nPointList", "=", "pointList"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"nPointList", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "\[NotEqual]", " ", 
          RowBox[{"nPointList", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "nPointList", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"nPointList", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "nPointList", "]"}], "]"}], "]"}], " ", 
          "=", " ", 
          RowBox[{"nPointList", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"lineList", ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"nPointList", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"nPointList", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}], "]"}]}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{
            RowBox[{"Length", "[", "pointList", "]"}], "-", "1"}]}], "}"}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"lineList", "=", 
        RowBox[{"Join", "[", 
         RowBox[{"lineList", ",", 
          RowBox[{"{", 
           RowBox[{"Blue", ",", 
            RowBox[{"PointSize", "->", ".02"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"nPointList", "[", 
              RowBox[{"[", "iPoint", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "lineList", "]"}]}]}], "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.517009797777792*^9, 3.517009819446487*^9}, {
  3.5170102216814833`*^9, 3.517010260564521*^9}, {3.520356573643571*^9, 
  3.520356578338529*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"This", " ", "one", " ", "makes", " ", "the", " ", "cylinders"}], 
    ",", " ", 
    RowBox[{
    "highlighting", " ", "the", " ", "index", " ", "marked", " ", "by", " ", 
     RowBox[{"rI", ".", " ", "cylSize"}], " ", "is", " ", "the", " ", "size", 
     " ", "of", " ", "the", " ", "cylinders"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"prettyReturn", "[", 
      RowBox[{"pointList_", ",", "rI_", ",", "cylSize_"}], "]"}], ":=", 
     RowBox[{"Module", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"nPointList", " ", "=", " ", "pointList"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"gList", " ", "=", " ", 
          RowBox[{"{", "Green", "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"sI", " ", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"rI", "\[Equal]", "1"}], ",", 
            RowBox[{
             RowBox[{"Length", "[", "pointList", "]"}], "-", "1"}], ",", 
            RowBox[{"rI", "-", "1"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"fI", " ", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"rI", "\[Equal]", 
             RowBox[{"Length", "[", "pointList", "]"}]}], ",", "2", ",", 
            RowBox[{"rI", "+", "1"}]}], "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"nPointList", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", "\[NotEqual]", " ", 
           RowBox[{"nPointList", "[", 
            RowBox[{"[", 
             RowBox[{"Length", "[", "nPointList", "]"}], "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"nPointList", "[", 
            RowBox[{"[", 
             RowBox[{"Length", "[", "nPointList", "]"}], "]"}], "]"}], " ", 
           "=", " ", 
           RowBox[{"nPointList", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"i", "\[NotEqual]", "rI"}], "&&", 
             RowBox[{
              RowBox[{"i", "+", "1"}], "\[NotEqual]", "rI"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"gList", ",", "\[IndentingNewLine]", 
              RowBox[{"Cylinder", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"nPointList", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", 
                  RowBox[{"nPointList", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
                "cylSize"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             RowBox[{"Length", "[", "nPointList", "]"}], "-", "1"}]}], 
           "}"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"gList", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"gList", ",", 
           RowBox[{"{", 
            RowBox[{"Red", ",", 
             RowBox[{"Cylinder", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"nPointList", "[", 
                  RowBox[{"[", "sI", "]"}], "]"}], ",", 
                 RowBox[{"nPointList", "[", 
                  RowBox[{"[", "rI", "]"}], "]"}]}], "}"}], ",", "cylSize"}], 
              "]"}], ",", 
             RowBox[{"Cylinder", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"nPointList", "[", 
                  RowBox[{"[", "rI", "]"}], "]"}], ",", 
                 RowBox[{"nPointList", "[", 
                  RowBox[{"[", "fI", "]"}], "]"}]}], "}"}], ",", "cylSize"}], 
              "]"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "gList", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"This", " ", "one", " ", 
     RowBox[{"doesn", "'"}], "t", " ", "highlight", " ", "any", " ", 
     RowBox[{"indices", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"prettyReturn", "[", 
     RowBox[{"pointList_", ",", "cylSize_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"nPointList", " ", "=", " ", "pointList"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"gList", " ", "=", " ", 
         RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"nPointList", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "\[NotEqual]", " ", 
          RowBox[{"nPointList", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "nPointList", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"nPointList", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "nPointList", "]"}], "]"}], "]"}], " ", 
          "=", " ", 
          RowBox[{"nPointList", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"gList", ",", "\[IndentingNewLine]", 
           RowBox[{"Cylinder", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"nPointList", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"nPointList", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
             "cylSize"}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{
            RowBox[{"Length", "[", "nPointList", "]"}], "-", "1"}]}], "}"}]}],
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "gList", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.519055512992598*^9, 3.519055553075832*^9}, {
   3.5190556525918093`*^9, 3.519055692737472*^9}, {3.519063042968256*^9, 
   3.519063086027651*^9}, {3.519063129046357*^9, 3.519063129111642*^9}, {
   3.5190632334610567`*^9, 3.51906326645234*^9}, {3.5190634524474173`*^9, 
   3.5190634622625504`*^9}, {3.519063799653021*^9, 3.519063922372716*^9}, {
   3.519066220089203*^9, 3.5190662323673763`*^9}, {3.519067643467211*^9, 
   3.5190676705625763`*^9}, 3.519067786494568*^9, {3.519123326322857*^9, 
   3.519123328243235*^9}, {3.519123450118863*^9, 3.519123450723873*^9}, {
   3.5191237721650877`*^9, 3.51912380332454*^9}, {3.5191239162649717`*^9, 
   3.519123923359171*^9}, {3.519653711544276*^9, 3.519653839890465*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PolyinSphere", "[", 
   RowBox[{"pointList_", ",", "cylSize_", ",", "confinR_", ",", "offset_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Graphics3D", "[", 
        RowBox[{"prettyReturn", "[", 
         RowBox[{"pointList", ",", "cylSize"}], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Graphics3D", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "cylSize", "]"}], ",", 
            RowBox[{"Point", "[", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0"}], "}"}], "}"}], "]"}]}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
            RowBox[{"Sphere", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "offset"}], "}"}], ",", 
              "confinR"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], 
        "]"}]}], "}"}], "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.524874325404118*^9, 3.524874386963071*^9}, {
   3.5248744350049267`*^9, 3.524874477452754*^9}, {3.524874511212887*^9, 
   3.524874646716341*^9}, {3.524874696019923*^9, 3.52487470991499*^9}, {
   3.524874895386778*^9, 3.5248748980900307`*^9}, {3.52487493450531*^9, 
   3.5248749844413567`*^9}, 3.524875023940113*^9, 3.524912062203412*^9, 
   3.524913033962393*^9, 3.52491308415455*^9, {3.524913824262414*^9, 
   3.524913847992414*^9}, {3.524913886758357*^9, 3.524913890670025*^9}, 
   3.524914120083852*^9, 3.524914160126705*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"drawpd", "[", "pd_", "]"}], ":=", 
  RowBox[{"Return", "[", 
   RowBox[{"DrawMorseLink", "[", 
    RowBox[{
     RowBox[{"mappd", "[", "pd", "]"}], ",", 
     RowBox[{"Gap", "\[Rule]", "0.2"}]}], "]"}], "]"}]}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Knot Finder", "Section",
 CellChangeTimes->{{3.5234679674283433`*^9, 3.523467969083438*^9}}],

Cell[CellGroupData[{

Cell["initialization", "Subsection",
 CellChangeTimes->{{3.5234680151940756`*^9, 3.523468018475263*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"knotcounts", "=", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "1", ",", "2", ",", "3", ",", "7", ",", 
     "21", ",", "49"}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5232671846813455`*^9, 3.523267190742692*^9}, {
   3.5232674684185743`*^9, 3.523267482971407*^9}, 3.523267512998124*^9, {
   3.5232677922700977`*^9, 3.523267793619175*^9}, {3.5232683522201247`*^9, 
   3.523268359342532*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"homflypolys", "=", 
   RowBox[{"{", "1", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"k", "=", "3"}], ",", 
    RowBox[{"k", "\[LessEqual]", "6"}], ",", 
    RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", " ", 
        RowBox[{"knotcounts", "[", 
         RowBox[{"[", "k", "]"}], "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"homflypolys", ",", 
          RowBox[{
           RowBox[{"HOMFLYPT", "[", 
            RowBox[{"Knot", "[", 
             RowBox[{"k", ",", "i"}], "]"}], "]"}], "[", 
           RowBox[{"v", ",", "z"}], "]"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"homflypolys", ",", 
    RowBox[{
     RowBox[{"HOMFLYPT", "[", 
      RowBox[{"ConnectedSum", "[", 
       RowBox[{
        RowBox[{"Knot", "[", 
         RowBox[{"3", ",", "1"}], "]"}], ",", 
        RowBox[{"Knot", "[", 
         RowBox[{"3", ",", "1"}], "]"}]}], "]"}], "]"}], "[", 
     RowBox[{"v", ",", "z"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"homflypolys", ",", 
    RowBox[{
     RowBox[{"HOMFLYPT", "[", 
      RowBox[{"ConnectedSum", "[", 
       RowBox[{
        RowBox[{"Mirror", "[", 
         RowBox[{"Knot", "[", 
          RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"Mirror", "[", 
         RowBox[{"Knot", "[", 
          RowBox[{"3", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], "[", 
     RowBox[{"v", ",", "z"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"homflypolys", ",", 
    RowBox[{
     RowBox[{"HOMFLYPT", "[", 
      RowBox[{"ConnectedSum", "[", 
       RowBox[{
        RowBox[{"Knot", "[", 
         RowBox[{"3", ",", "1"}], "]"}], ",", 
        RowBox[{"Mirror", "[", 
         RowBox[{"Knot", "[", 
          RowBox[{"3", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], "[", 
     RowBox[{"v", ",", "z"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"knotcounts", "[", 
      RowBox[{"[", "7", "]"}], "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"AppendTo", "[", 
      RowBox[{"homflypolys", ",", 
       RowBox[{
        RowBox[{"HOMFLYPT", "[", 
         RowBox[{"Knot", "[", 
          RowBox[{"7", ",", "i"}], "]"}], "]"}], "[", 
        RowBox[{"v", ",", "z"}], "]"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"homflypolys", ",", 
    RowBox[{
     RowBox[{"HOMFLYPT", "[", 
      RowBox[{"ConnectedSum", "[", 
       RowBox[{
        RowBox[{"Knot", "[", 
         RowBox[{"3", ",", "1"}], "]"}], ",", 
        RowBox[{"Knot", "[", 
         RowBox[{"4", ",", "1"}], "]"}]}], "]"}], "]"}], "[", 
     RowBox[{"v", ",", "z"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"homflypolys", ",", 
    RowBox[{
     RowBox[{"HOMFLYPT", "[", 
      RowBox[{"ConnectedSum", "[", 
       RowBox[{
        RowBox[{"Mirror", "[", 
         RowBox[{"Knot", "[", 
          RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"Knot", "[", 
         RowBox[{"4", ",", "1"}], "]"}]}], "]"}], "]"}], "[", 
     RowBox[{"v", ",", "z"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"knotcounts", "[", 
      RowBox[{"[", "8", "]"}], "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"AppendTo", "[", 
      RowBox[{"homflypolys", ",", 
       RowBox[{
        RowBox[{"HOMFLYPT", "[", 
         RowBox[{"Knot", "[", 
          RowBox[{"8", ",", "i"}], "]"}], "]"}], "[", 
        RowBox[{"v", ",", "z"}], "]"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"homflypolys", ",", 
    RowBox[{
     RowBox[{"HOMFLYPT", "[", 
      RowBox[{"ConnectedSum", "[", 
       RowBox[{
        RowBox[{"Knot", "[", 
         RowBox[{"3", ",", "1"}], "]"}], ",", 
        RowBox[{"Knot", "[", 
         RowBox[{"5", ",", "1"}], "]"}]}], "]"}], "]"}], "[", 
     RowBox[{"v", ",", "z"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"homflypolys", ",", 
    RowBox[{
     RowBox[{"HOMFLYPT", "[", 
      RowBox[{"ConnectedSum", "[", 
       RowBox[{
        RowBox[{"Mirror", "[", 
         RowBox[{"Knot", "[", 
          RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"Mirror", "[", 
         RowBox[{"Knot", "[", 
          RowBox[{"5", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], "[", 
     RowBox[{"v", ",", "z"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"homflypolys", ",", 
    RowBox[{
     RowBox[{"HOMFLYPT", "[", 
      RowBox[{"ConnectedSum", "[", 
       RowBox[{
        RowBox[{"Knot", "[", 
         RowBox[{"3", ",", "1"}], "]"}], ",", 
        RowBox[{"Mirror", "[", 
         RowBox[{"Knot", "[", 
          RowBox[{"5", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], "[", 
     RowBox[{"v", ",", "z"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"homflypolys", ",", 
    RowBox[{
     RowBox[{"HOMFLYPT", "[", 
      RowBox[{"ConnectedSum", "[", 
       RowBox[{
        RowBox[{"Mirror", "[", 
         RowBox[{"Knot", "[", 
          RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"Knot", "[", 
         RowBox[{"5", ",", "1"}], "]"}]}], "]"}], "]"}], "[", 
     RowBox[{"v", ",", "z"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"homflypolys", ",", 
    RowBox[{
     RowBox[{"HOMFLYPT", "[", 
      RowBox[{"ConnectedSum", "[", 
       RowBox[{
        RowBox[{"Knot", "[", 
         RowBox[{"3", ",", "1"}], "]"}], ",", 
        RowBox[{"Knot", "[", 
         RowBox[{"5", ",", "2"}], "]"}]}], "]"}], "]"}], "[", 
     RowBox[{"v", ",", "z"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"homflypolys", ",", 
    RowBox[{
     RowBox[{"HOMFLYPT", "[", 
      RowBox[{"ConnectedSum", "[", 
       RowBox[{
        RowBox[{"Mirror", "[", 
         RowBox[{"Knot", "[", 
          RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"Mirror", "[", 
         RowBox[{"Knot", "[", 
          RowBox[{"5", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}], "[", 
     RowBox[{"v", ",", "z"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"homflypolys", ",", 
    RowBox[{
     RowBox[{"HOMFLYPT", "[", 
      RowBox[{"ConnectedSum", "[", 
       RowBox[{
        RowBox[{"Knot", "[", 
         RowBox[{"3", ",", "1"}], "]"}], ",", 
        RowBox[{"Mirror", "[", 
         RowBox[{"Knot", "[", 
          RowBox[{"5", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}], "[", 
     RowBox[{"v", ",", "z"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"homflypolys", ",", 
    RowBox[{
     RowBox[{"HOMFLYPT", "[", 
      RowBox[{"ConnectedSum", "[", 
       RowBox[{
        RowBox[{"Mirror", "[", 
         RowBox[{"Knot", "[", 
          RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"Knot", "[", 
         RowBox[{"5", ",", "2"}], "]"}]}], "]"}], "]"}], "[", 
     RowBox[{"v", ",", "z"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"homflypolys", ",", 
    RowBox[{
     RowBox[{"HOMFLYPT", "[", 
      RowBox[{"ConnectedSum", "[", 
       RowBox[{
        RowBox[{"Knot", "[", 
         RowBox[{"4", ",", "1"}], "]"}], ",", 
        RowBox[{"Knot", "[", 
         RowBox[{"4", ",", "1"}], "]"}]}], "]"}], "]"}], "[", 
     RowBox[{"v", ",", "z"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"knotcounts", "[", 
      RowBox[{"[", "9", "]"}], "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"AppendTo", "[", 
      RowBox[{"homflypolys", ",", 
       RowBox[{
        RowBox[{"HOMFLYPT", "[", 
         RowBox[{"Knot", "[", 
          RowBox[{"9", ",", "i"}], "]"}], "]"}], "[", 
        RowBox[{"v", ",", "z"}], "]"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.523267551934351*^9, 3.5232676186261654`*^9}, {
  3.523267652500103*^9, 3.523267744395359*^9}, {3.5232678815542045`*^9, 
  3.523267886077463*^9}, {3.5232683762665005`*^9, 3.523268389169238*^9}, {
  3.5232709788153577`*^9, 3.523270982252554*^9}, {3.5232710861334953`*^9, 
  3.5232710891346674`*^9}, {3.523396455800951*^9, 3.523396494662174*^9}, {
  3.5233966055675173`*^9, 3.523396992663658*^9}, {3.523400740323012*^9, 
  3.5234007404420185`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"KnotTheory", "::", "loading"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Loading precomputed data in \
\[NoBreak]\\!\\(\\\"PD4Knots`\\\"\\)\[NoBreak].\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.561985058530981*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"KnotTheory", "::", "credits"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\\"The HOMFLYPT program was written by \
Scott Morrison.\\\"\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.561985058598988*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["functions", "Subsection",
 CellChangeTimes->{{3.523468081833887*^9, 3.5234680828409443`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getstrlumpcomp", "[", "x_", "]"}], ":=", 
   RowBox[{"Which", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"1", "\[LessEqual]", " ", "x", "\[LessEqual]", " ", "8"}], ",", 
     RowBox[{"getstr", "[", "x", "]"}], ",", 
     RowBox[{"9", "\[LessEqual]", " ", "x", "\[LessEqual]", " ", "15"}], ",", 
     RowBox[{"getstr", "[", 
      RowBox[{"x", "+", "3"}], "]"}], ",", 
     RowBox[{"16", "\[LessEqual]", " ", "x", "\[LessEqual]", " ", "36"}], ",", 
     RowBox[{"getstr", "[", 
      RowBox[{"x", "+", "5"}], "]"}], ",", 
     RowBox[{"37", "\[LessEqual]", " ", "x", "\[LessEqual]", " ", "85"}], ",", 
     RowBox[{"getstr", "[", 
      RowBox[{"x", "+", "14"}], "]"}], ",", 
     RowBox[{"x", "\[Equal]", "86"}], ",", "\"\<Composite\>\"", ",", 
     RowBox[{"x", "\[Equal]", "87"}], ",", "\"\<Not Found\>\"", ",", 
     RowBox[{"x", "\[Equal]", "88"}], ",", "\"\<Unknown\>\""}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5237897274867353`*^9, 3.5237898198220167`*^9}, {
  3.5237898725230308`*^9, 3.5237898729420547`*^9}, {3.523789907665041*^9, 
  3.523790034770311*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getstr", "[", "x_", "]"}], ":=", 
   RowBox[{"Which", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"x", "\[Equal]", "1"}], ",", 
     SubscriptBox["0", "1"], ",", 
     RowBox[{"x", "\[Equal]", "2"}], ",", 
     SubscriptBox["3", "1"], ",", 
     RowBox[{"x", "\[Equal]", "3"}], ",", 
     SubscriptBox["4", "1"], ",", 
     RowBox[{"x", "\[Equal]", "4"}], ",", 
     SubscriptBox["5", "1"], ",", 
     RowBox[{"x", "\[Equal]", "5"}], ",", 
     SubscriptBox["5", "2"], ",", 
     RowBox[{"x", "\[Equal]", "6"}], ",", 
     SubscriptBox["6", "1"], ",", 
     RowBox[{"x", "\[Equal]", "7"}], ",", 
     SubscriptBox["6", "2"], ",", 
     RowBox[{"x", "\[Equal]", "8"}], ",", 
     SubscriptBox["6", "3"], ",", 
     RowBox[{"x", "\[Equal]", "9"}], ",", 
     "\"\<\!\(\*SubscriptBox[\(3\), \(1\)]\)\!\(\*SubscriptBox[\(#3\), \(1\)]\
\)\>\"", ",", 
     RowBox[{"x", "\[Equal]", "10"}], ",", 
     "\"\<\!\(\*SubscriptBox[\(3\), \(1\)]\)!\!\(\*SubscriptBox[\(#3\), \
\(1\)]\)!\>\"", ",", 
     RowBox[{"x", "\[Equal]", "11"}], ",", 
     "\"\<\!\(\*SubscriptBox[\(3\), \(1\)]\)\!\(\*SubscriptBox[\(#3\), \(1\)]\
\)!\>\"", ",", "\[IndentingNewLine]", 
     RowBox[{"x", "\[Equal]", "12"}], ",", 
     SubscriptBox["7", "1"], ",", 
     RowBox[{"x", "\[Equal]", "13"}], ",", 
     SubscriptBox["7", "2"], ",", 
     RowBox[{"x", "\[Equal]", "14"}], ",", 
     SubscriptBox["7", "3"], ",", 
     RowBox[{"x", "\[Equal]", "15"}], ",", 
     SubscriptBox["7", "4"], ",", 
     RowBox[{"x", "\[Equal]", "16"}], ",", 
     SubscriptBox["7", "5"], ",", "\[IndentingNewLine]", 
     RowBox[{"x", "\[Equal]", "17"}], ",", 
     SubscriptBox["7", "6"], ",", 
     RowBox[{"x", "\[Equal]", "18"}], ",", 
     SubscriptBox["7", "7"], ",", 
     RowBox[{"x", "\[Equal]", "19"}], ",", 
     "\"\<\!\(\*SubscriptBox[\(3\), \(1\)]\)\!\(\*SubscriptBox[\(#4\), \(1\)]\
\)\>\"", ",", 
     RowBox[{"x", "\[Equal]", "20"}], ",", 
     "\"\<\!\(\*SubscriptBox[\(3\), \(1\)]\)!\!\(\*SubscriptBox[\(#4\), \
\(1\)]\)\>\"", ",", "\[IndentingNewLine]", 
     RowBox[{"x", "\[Equal]", "21"}], ",", 
     SubscriptBox["8", "1"], ",", 
     RowBox[{"x", "\[Equal]", "22"}], ",", 
     SubscriptBox["8", "2"], ",", 
     RowBox[{"x", "\[Equal]", "23"}], ",", 
     SubscriptBox["8", "3"], ",", 
     RowBox[{"x", "\[Equal]", "24"}], ",", 
     SubscriptBox["8", "4"], ",", 
     RowBox[{"x", "\[Equal]", "25"}], ",", 
     SubscriptBox["8", "5"], ",", "\[IndentingNewLine]", 
     RowBox[{"x", "\[Equal]", "26"}], ",", 
     SubscriptBox["8", "6"], ",", 
     RowBox[{"x", "\[Equal]", "27"}], ",", 
     SubscriptBox["8", "7"], ",", 
     RowBox[{"x", "\[Equal]", "28"}], ",", 
     SubscriptBox["8", "8"], ",", 
     RowBox[{"x", "\[Equal]", "29"}], ",", 
     SubscriptBox["8", "9"], ",", 
     RowBox[{"x", "\[Equal]", "30"}], ",", 
     SubscriptBox["8", "10"], ",", "\[IndentingNewLine]", 
     RowBox[{"x", "\[Equal]", "31"}], ",", 
     SubscriptBox["8", "11"], ",", 
     RowBox[{"x", "\[Equal]", "32"}], ",", 
     SubscriptBox["8", "12"], ",", 
     RowBox[{"x", "\[Equal]", "33"}], ",", 
     SubscriptBox["8", "13"], ",", 
     RowBox[{"x", "\[Equal]", "34"}], ",", 
     SubscriptBox["8", "14"], ",", 
     RowBox[{"x", "\[Equal]", "35"}], ",", 
     SubscriptBox["8", "15"], ",", "\[IndentingNewLine]", 
     RowBox[{"x", "\[Equal]", "36"}], ",", 
     SubscriptBox["8", "16"], ",", 
     RowBox[{"x", "\[Equal]", "37"}], ",", 
     SubscriptBox["8", "17"], ",", 
     RowBox[{"x", "\[Equal]", "38"}], ",", 
     SubscriptBox["8", "18"], ",", 
     RowBox[{"x", "\[Equal]", "39"}], ",", 
     SubscriptBox["8", "19"], ",", 
     RowBox[{"x", "\[Equal]", "40"}], ",", 
     SubscriptBox["8", "20"], ",", "\[IndentingNewLine]", 
     RowBox[{"x", "\[Equal]", "41"}], ",", 
     SubscriptBox["8", "21"], ",", 
     RowBox[{"x", "\[Equal]", "42"}], ",", 
     "\"\<\!\(\*SubscriptBox[\(3\), \(1\)]\)\!\(\*SubscriptBox[\(#5\), \(1\)]\
\)\>\"", ",", 
     RowBox[{"x", "\[Equal]", "43"}], ",", 
     "\"\<\!\(\*SubscriptBox[\(3\), \(1\)]\)!\!\(\*SubscriptBox[\(#5\), \
\(1\)]\)!\>\"", ",", 
     RowBox[{"x", "\[Equal]", "44"}], ",", 
     "\"\<\!\(\*SubscriptBox[\(3\), \(1\)]\)\!\(\*SubscriptBox[\(#5\), \(1\)]\
\)!\>\"", ",", 
     RowBox[{"x", "\[Equal]", "45"}], ",", 
     "\"\<\!\(\*SubscriptBox[\(3\), \(1\)]\)!\!\(\*SubscriptBox[\(#5\), \
\(1\)]\)\>\"", ",", "\[IndentingNewLine]", 
     RowBox[{"x", "\[Equal]", "46"}], ",", 
     "\"\<\!\(\*SubscriptBox[\(3\), \(1\)]\)\!\(\*SubscriptBox[\(#5\), \(2\)]\
\)\>\"", ",", 
     RowBox[{"x", "\[Equal]", "47"}], ",", 
     "\"\<\!\(\*SubscriptBox[\(3\), \(1\)]\)!\!\(\*SubscriptBox[\(#5\), \
\(2\)]\)!\>\"", ",", 
     RowBox[{"x", "\[Equal]", "48"}], ",", 
     "\"\<\!\(\*SubscriptBox[\(3\), \(1\)]\)\!\(\*SubscriptBox[\(#5\), \(2\)]\
\)!\>\"", ",", 
     RowBox[{"x", "\[Equal]", "49"}], ",", 
     "\"\<\!\(\*SubscriptBox[\(3\), \(1\)]\)!\!\(\*SubscriptBox[\(#5\), \
\(2\)]\)\>\"", ",", 
     RowBox[{"x", "\[Equal]", "50"}], ",", 
     "\"\<\!\(\*SubscriptBox[\(4\), \(1\)]\)\!\(\*SubscriptBox[\(#4\), \(1\)]\
\)\>\"", ",", "\[IndentingNewLine]", 
     RowBox[{"x", "\[Equal]", "51"}], ",", 
     SubscriptBox["9", "1"], ",", 
     RowBox[{"x", "\[Equal]", "52"}], ",", 
     SubscriptBox["9", "2"], ",", 
     RowBox[{"x", "\[Equal]", "53"}], ",", 
     SubscriptBox["9", "3"], ",", 
     RowBox[{"x", "\[Equal]", "54"}], ",", 
     SubscriptBox["9", "4"], ",", 
     RowBox[{"x", "\[Equal]", "55"}], ",", 
     SubscriptBox["9", "5"], ",", 
     RowBox[{"x", "\[Equal]", "56"}], ",", 
     SubscriptBox["9", "6"], ",", 
     RowBox[{"x", "\[Equal]", "57"}], ",", 
     SubscriptBox["9", "7"], ",", 
     RowBox[{"x", "\[Equal]", "58"}], ",", 
     SubscriptBox["9", "8"], ",", 
     RowBox[{"x", "\[Equal]", "59"}], ",", 
     SubscriptBox["9", "9"], ",", 
     RowBox[{"x", "\[Equal]", "60"}], ",", 
     SubscriptBox["9", "10"], ",", 
     RowBox[{"x", "\[Equal]", "61"}], ",", 
     SubscriptBox["9", "11"], ",", 
     RowBox[{"x", "\[Equal]", "62"}], ",", 
     SubscriptBox["9", "12"], ",", 
     RowBox[{"x", "\[Equal]", "63"}], ",", 
     SubscriptBox["9", "13"], ",", 
     RowBox[{"x", "\[Equal]", "64"}], ",", 
     SubscriptBox["9", "14"], ",", 
     RowBox[{"x", "\[Equal]", "65"}], ",", 
     SubscriptBox["9", "15"], ",", 
     RowBox[{"x", "\[Equal]", "66"}], ",", 
     SubscriptBox["9", "16"], ",", 
     RowBox[{"x", "\[Equal]", "67"}], ",", 
     SubscriptBox["9", "17"], ",", 
     RowBox[{"x", "\[Equal]", "68"}], ",", 
     SubscriptBox["9", "18"], ",", 
     RowBox[{"x", "\[Equal]", "69"}], ",", 
     SubscriptBox["9", "19"], ",", 
     RowBox[{"x", "\[Equal]", "70"}], ",", 
     SubscriptBox["9", "20"], ",", 
     RowBox[{"x", "\[Equal]", "71"}], ",", 
     SubscriptBox["9", "21"], ",", 
     RowBox[{"x", "\[Equal]", "72"}], ",", 
     SubscriptBox["9", "22"], ",", 
     RowBox[{"x", "\[Equal]", "73"}], ",", 
     SubscriptBox["9", "23"], ",", 
     RowBox[{"x", "\[Equal]", "74"}], ",", 
     SubscriptBox["9", "24"], ",", 
     RowBox[{"x", "\[Equal]", "75"}], ",", 
     SubscriptBox["9", "25"], ",", 
     RowBox[{"x", "\[Equal]", "76"}], ",", 
     SubscriptBox["9", "26"], ",", 
     RowBox[{"x", "\[Equal]", "77"}], ",", 
     SubscriptBox["9", "27"], ",", 
     RowBox[{"x", "\[Equal]", "78"}], ",", 
     SubscriptBox["9", "28"], ",", 
     RowBox[{"x", "\[Equal]", "79"}], ",", 
     SubscriptBox["9", "29"], ",", 
     RowBox[{"x", "\[Equal]", "80"}], ",", 
     SubscriptBox["9", "30"], ",", 
     RowBox[{"x", "\[Equal]", "81"}], ",", 
     SubscriptBox["9", "31"], ",", 
     RowBox[{"x", "\[Equal]", "82"}], ",", 
     SubscriptBox["9", "32"], ",", 
     RowBox[{"x", "\[Equal]", "83"}], ",", 
     SubscriptBox["9", "33"], ",", 
     RowBox[{"x", "\[Equal]", "84"}], ",", 
     SubscriptBox["9", "34"], ",", 
     RowBox[{"x", "\[Equal]", "85"}], ",", 
     SubscriptBox["9", "35"], ",", 
     RowBox[{"x", "\[Equal]", "86"}], ",", 
     SubscriptBox["9", "36"], ",", 
     RowBox[{"x", "\[Equal]", "87"}], ",", 
     SubscriptBox["9", "37"], ",", 
     RowBox[{"x", "\[Equal]", "88"}], ",", 
     SubscriptBox["9", "38"], ",", 
     RowBox[{"x", "\[Equal]", "89"}], ",", 
     SubscriptBox["9", "39"], ",", 
     RowBox[{"x", "\[Equal]", "90"}], ",", 
     SubscriptBox["9", "40"], ",", 
     RowBox[{"x", "\[Equal]", "91"}], ",", 
     SubscriptBox["9", "41"], ",", 
     RowBox[{"x", "\[Equal]", "92"}], ",", 
     SubscriptBox["9", "42"], ",", 
     RowBox[{"x", "\[Equal]", "93"}], ",", 
     SubscriptBox["9", "43"], ",", 
     RowBox[{"x", "\[Equal]", "94"}], ",", 
     SubscriptBox["9", "44"], ",", 
     RowBox[{"x", "\[Equal]", "95"}], ",", 
     SubscriptBox["9", "45"], ",", 
     RowBox[{"x", "\[Equal]", "96"}], ",", 
     SubscriptBox["9", "46"], ",", 
     RowBox[{"x", "\[Equal]", "97"}], ",", 
     SubscriptBox["9", "47"], ",", 
     RowBox[{"x", "\[Equal]", "98"}], ",", 
     SubscriptBox["9", "48"], ",", 
     RowBox[{"x", "\[Equal]", "99"}], ",", 
     SubscriptBox["9", "49"], ",", 
     RowBox[{"x", "\[Equal]", "100"}], ",", "\"\<Not Found\>\"", ",", 
     RowBox[{"x", "\[Equal]", "101"}], ",", "\"\<Unknown\>\""}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.523268982835194*^9, 3.5232690437346773`*^9}, {
   3.523269075013466*^9, 3.5232691231802216`*^9}, {3.5232691576421924`*^9, 
   3.5232692003066325`*^9}, {3.5232692798241806`*^9, 3.523269318693404*^9}, {
   3.5232693520943146`*^9, 3.5232696675163555`*^9}, {3.523269722299489*^9, 
   3.523269736710313*^9}, {3.5232698572852097`*^9, 3.5232699119363356`*^9}, {
   3.523269957486941*^9, 3.523269961512171*^9}, {3.5232701322409363`*^9, 
   3.5232702608202906`*^9}, {3.5233973938966074`*^9, 
   3.5233977784516025`*^9}, {3.52339781791886*^9, 3.523397823730192*^9}, {
   3.5233978684867525`*^9, 3.523398032815151*^9}, 3.523400849411251*^9, {
   3.5237882088058715`*^9, 3.523788546016159*^9}, {3.5237896668902693`*^9, 
   3.523789696148943*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"lookupdt", "[", "dt_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"homfly", ",", "pos", ",", "str"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Clear", "[", 
      RowBox[{"v", ",", "z"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"homfly", "=", 
      RowBox[{
       RowBox[{"HOMFLYPT", "[", 
        RowBox[{"Apply", "[", 
         RowBox[{"DTCode", ",", "dt"}], "]"}], "]"}], "[", 
       RowBox[{"v", ",", "z"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"pos", "=", 
      RowBox[{"Position", "[", 
       RowBox[{"homflypolys", ",", "homfly", ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "pos", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"pos", "=", 
         RowBox[{"Position", "[", 
          RowBox[{"homflypolys", ",", 
           RowBox[{"homfly", "/.", 
            RowBox[{"v", "\[Rule]", 
             SuperscriptBox["v", 
              RowBox[{"-", "1"}]]}]}], ",", "1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "pos", "]"}], "\[Equal]", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Return", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<Not Found\>\"", ",", "dt", ",", "homfly"}], "}"}], 
            "]"}], ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Return", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"getstr", "[", 
               RowBox[{"pos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], ",", "pos", 
              ",", "dt", ",", "homfly"}], "}"}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"getstr", "[", 
            RowBox[{"pos", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], ",", "pos", ",", 
           "dt", ",", "homfly"}], "}"}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.523267839796816*^9, 3.523267862582119*^9}, {
   3.5232678944779434`*^9, 3.523267913682042*^9}, {3.523267961521778*^9, 
   3.523267966384056*^9}, {3.523268041474351*^9, 3.5232680575132685`*^9}, {
   3.52326816209225*^9, 3.523268174118938*^9}, 3.523268267270266*^9, {
   3.523268306188492*^9, 3.5232683295948305`*^9}, {3.523268401651952*^9, 
   3.5232684446784134`*^9}, {3.5232696863264313`*^9, 3.523269694924923*^9}, {
   3.523269759647625*^9, 3.523269767003046*^9}, {3.5232698053232374`*^9, 
   3.5232698357869797`*^9}, {3.5232699843844795`*^9, 3.523270061442887*^9}, {
   3.523270282575535*^9, 3.523270351443474*^9}, {3.5232703943709292`*^9, 
   3.5232704982788725`*^9}, {3.5232706527097054`*^9, 
   3.5232706602521367`*^9}, {3.523271064018231*^9, 3.5232710788730803`*^9}, {
   3.5232902873307447`*^9, 3.5232902876997657`*^9}, {3.5233980677521496`*^9, 
   3.5233980747475495`*^9}, {3.523398107679433*^9, 3.5233981111846333`*^9}, {
   3.523398371677533*^9, 3.5233983768548293`*^9}, {3.5234702610765324`*^9, 
   3.5234702660488167`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"lookuppd", "[", "pd_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"homfly", ",", "pos", ",", "str", ",", 
      RowBox[{"decompose", "=", "True"}], ",", "pdlist", ",", "homlist"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Clear", "[", 
      RowBox[{"v", ",", "z"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "pd", "]"}], "<", "3"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"getstr", "[", "1", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"{", "1", "}"}], "}"}], ",", 
           RowBox[{"{", "}"}], ",", "1"}], "}"}], "]"}], ";"}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{"decompose", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"pdlist", "=", 
            RowBox[{"decomposePD", "[", "pd", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"homfly", "=", 
            RowBox[{"Expand", "[", 
             RowBox[{"Product", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"HOMFLYPT", "[", 
                 RowBox[{"mappd", "[", 
                  RowBox[{"pdlist", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "[", 
                RowBox[{"v", ",", "z"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"Length", "[", "pdlist", "]"}]}], "}"}]}], "]"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{
               RowBox[{"Length", "[", "pdlist", "]"}], ",", "\"\< \\n\>\"", 
               ",", "homfly"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"pos", "=", 
            RowBox[{"Position", "[", 
             RowBox[{"homflypolys", ",", "homfly", ",", "1"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "pos", "]"}], "\[Equal]", "0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"pos", "=", 
               RowBox[{"Position", "[", 
                RowBox[{"homflypolys", ",", 
                 RowBox[{"homfly", "/.", 
                  RowBox[{"v", "\[Rule]", 
                   SuperscriptBox["v", 
                    RowBox[{"-", "1"}]]}]}], ",", "1"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "pos", "]"}], "\[Equal]", "0"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Return", "[", 
                  RowBox[{"{", 
                   RowBox[{"\"\<Not Found\>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"{", "100", "}"}], "}"}], ",", "pd", ",", 
                    "homfly"}], "}"}], "]"}], ";"}], "\[IndentingNewLine]", 
                ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Return", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"getstr", "[", 
                    RowBox[{"pos", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], ",", "pos", 
                    ",", "pd", ",", "homfly"}], "}"}], "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Return", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"getstr", "[", 
                  RowBox[{"pos", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], ",", "pos", 
                 ",", "pd", ",", "homfly"}], "}"}], "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"homfly", "=", 
            RowBox[{
             RowBox[{"HOMFLYPT", "[", 
              RowBox[{"mappd", "[", "pd", "]"}], "]"}], "[", 
             RowBox[{"v", ",", "z"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"pos", "=", 
            RowBox[{"Position", "[", 
             RowBox[{"homflypolys", ",", "homfly", ",", "1"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "pos", "]"}], "\[Equal]", "0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"pos", "=", 
               RowBox[{"Position", "[", 
                RowBox[{"homflypolys", ",", 
                 RowBox[{"homfly", "/.", 
                  RowBox[{"v", "\[Rule]", 
                   SuperscriptBox["v", 
                    RowBox[{"-", "1"}]]}]}], ",", "1"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "pos", "]"}], "\[Equal]", "0"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Return", "[", 
                  RowBox[{"{", 
                   RowBox[{"\"\<Not Found\>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"{", "100", "}"}], "}"}], ",", "pd", ",", 
                    "homfly"}], "}"}], "]"}], ";"}], "\[IndentingNewLine]", 
                ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Return", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"getstr", "[", 
                    RowBox[{"pos", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], ",", "pos", 
                    ",", "pd", ",", "homfly"}], "}"}], "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Return", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"getstr", "[", 
                  RowBox[{"pos", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], ",", "pos", 
                 ",", "pd", ",", "homfly"}], "}"}], "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5243417311140556`*^9, 3.524341847052687*^9}, {
  3.524341908224186*^9, 3.524341945603324*^9}, {3.5246851997766676`*^9, 
  3.5246852733378754`*^9}, {3.5246853721775284`*^9, 3.524685392412686*^9}, {
  3.5246856417929497`*^9, 3.5246856832103186`*^9}, {3.524685756464508*^9, 
  3.5246858203521624`*^9}, {3.5246858519469695`*^9, 3.524685929725418*^9}, {
  3.5246859711457872`*^9, 3.524685971683818*^9}, {3.524686049010241*^9, 
  3.5246860623040013`*^9}, {3.524686131828978*^9, 3.524686151113081*^9}, {
  3.524695729445174*^9, 3.52469573094626*^9}, {3.525226140757016*^9, 
  3.525226165253417*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"generatedtlist", "[", 
   RowBox[{"name_", ",", "dtretries_", ",", "timeconstraint_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"poly", ",", 
      RowBox[{"dtlist", "=", 
       RowBox[{"{", "}"}]}], ",", "len", ",", 
      RowBox[{"print", "=", "True"}], ",", "dt"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"poly", "=", 
      RowBox[{"Import", "[", "name", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"len", "=", 
      RowBox[{"Length", "[", "poly", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"ind", "=", "1"}], ",", 
       RowBox[{"ind", "\[LessEqual]", "len"}], ",", 
       RowBox[{"ind", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"print", "&&", 
           RowBox[{
            RowBox[{"Mod", "[", 
             RowBox[{"ind", ",", "100"}], "]"}], "\[Equal]", "0"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<--\>\"", ",", "ind", ",", "\"\<--\>\""}], "]"}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"dt", "=", 
         RowBox[{"nicerD", "[", 
          RowBox[{
           RowBox[{"reduce", "[", 
            RowBox[{"poly", "[", 
             RowBox[{"[", 
              RowBox[{"ind", ",", "2", ",", "2", ",", "5"}], "]"}], "]"}], 
            "]"}], ",", "dtretries"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"Length", "[", "dt", "]"}], "]"}], ";"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"TimeConstrained", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"dtlist", ",", 
             RowBox[{"lookupdt", "[", "dt", "]"}]}], "]"}], ";"}], 
          "\[IndentingNewLine]", ",", "timeconstraint", "\[IndentingNewLine]",
           ",", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<ind: \>\"", ",", "ind", ",", 
             "\"\< has taken too long and is being skipped\>\""}], "]"}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"dtlist", ",", 
             RowBox[{"{", 
              RowBox[{"\"\<Not Found\>\"", ",", 
               RowBox[{"nicerD", "[", 
                RowBox[{
                 RowBox[{"poly", "[", 
                  RowBox[{"[", 
                   RowBox[{"ind", ",", "2", ",", "2", ",", "5"}], "]"}], 
                  "]"}], ",", "dtretries"}], "]"}], ",", "\"\<??\>\""}], 
              "}"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"\"\<dtres\>\"", "<>", "name"}], ",", "dtlist"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "dtlist", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5237321315119925`*^9, 3.523732572629223*^9}, {
  3.524345571647722*^9, 3.524345576289987*^9}, {3.5246089823808084`*^9, 
  3.524609045941444*^9}, {3.5247012414204407`*^9, 3.524701243111538*^9}, {
  3.52535010287626*^9, 3.5253501054634075`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"generatepdlist", "[", 
   RowBox[{"name_", ",", "pdretries_", ",", "timeconstraint_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"poly", ",", 
      RowBox[{"pdlist", "=", 
       RowBox[{"{", "}"}]}], ",", "len", ",", 
      RowBox[{"print", "=", "True"}], ",", "seed", ",", "pd", ",", " ", 
      "ind"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"poly", "=", 
      RowBox[{"Import", "[", "name", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"len", "=", 
      RowBox[{"Length", "[", "poly", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"ind", "=", "1"}], ",", 
       RowBox[{"ind", "\[LessEqual]", "len"}], ",", 
       RowBox[{"ind", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"print", "&&", 
           RowBox[{
            RowBox[{"Mod", "[", 
             RowBox[{"ind", ",", "100"}], "]"}], "\[Equal]", "0"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"\"\<--\>\"", ",", "ind", ",", "\"\<--\>\""}], "]"}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"seed", "=", 
           RowBox[{"RandomInteger", "[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1000000"}], "}"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"SeedRandom", "[", "seed", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"ind", ",", "\"\<  \>\"", ",", "seed"}], "]"}], ";"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"pd", "=", 
         RowBox[{"nicerPD", "[", 
          RowBox[{
           RowBox[{"reduce", "[", 
            RowBox[{"poly", "[", 
             RowBox[{"[", 
              RowBox[{"ind", ",", "2", ",", "2", ",", "5"}], "]"}], "]"}], 
            "]"}], ",", "pdretries"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"Length", "[", "pd", "]"}], "]"}], ";"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"TimeConstrained", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"pdlist", ",", 
             RowBox[{"lookuppd", "[", "pd", "]"}]}], "]"}], ";"}], 
          "\[IndentingNewLine]", ",", "timeconstraint", "\[IndentingNewLine]",
           ",", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<ind: \>\"", ",", "ind", ",", 
             "\"\< has taken too long and is being skipped\>\""}], "]"}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"pdlist", ",", 
             RowBox[{"{", 
              RowBox[{"\"\<Not Found\>\"", ",", "pd", ",", "\"\<??\>\""}], 
              "}"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"\"\<pdres\>\"", "<>", "name"}], ",", "pdlist"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "pdlist", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5243419866876736`*^9, 3.524342084600274*^9}, {
   3.5243428092357206`*^9, 3.524342810308782*^9}, {3.524342976481287*^9, 
   3.524342977098322*^9}, {3.5243455812512712`*^9, 3.5243455851864963`*^9}, {
   3.5245743973356557`*^9, 3.524574400927861*^9}, {3.5245752491863785`*^9, 
   3.5245752502174377`*^9}, {3.5245755212679405`*^9, 3.524575560851205*^9}, {
   3.5245757278797584`*^9, 3.524575732139002*^9}, {3.524578297558736*^9, 
   3.5245783028930407`*^9}, {3.5245785305230603`*^9, 3.524578531495116*^9}, {
   3.5245836266707706`*^9, 3.5245836299679594`*^9}, {3.5245837234683075`*^9, 
   3.5245837532780123`*^9}, {3.5246081090508566`*^9, 3.524608111787013*^9}, 
   3.5246084112301407`*^9, {3.524608458461842*^9, 3.5246085457348337`*^9}, {
   3.5246089619266386`*^9, 3.524608970140108*^9}, {3.5246851276355414`*^9, 
   3.524685129148628*^9}, {3.5247538720296016`*^9, 3.5247538757678156`*^9}, {
   3.5247577258390265`*^9, 3.524757729355228*^9}, 3.5251169112585936`*^9, {
   3.5253501082605677`*^9, 3.5253501106837063`*^9}, {3.5619843712562604`*^9, 
   3.5619843716452994`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sortdtres", "[", "name_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"dtlist", ",", "res", ",", "len", ",", " ", "index"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dtlist", "=", 
      RowBox[{"Import", "[", "name", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"len", "=", 
      RowBox[{"Length", "[", "dtlist", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"res", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", "101", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"index", "=", "1"}], ",", 
       RowBox[{"index", "\[LessEqual]", "len"}], ",", 
       RowBox[{"index", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"dtlist", "[", 
             RowBox[{"[", 
              RowBox[{"index", ",", "1"}], "]"}], "]"}], "]"}], "\[Equal]", 
           "\"\<Not Found\>\""}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ToString", "[", 
               RowBox[{"dtlist", "[", 
                RowBox[{"[", 
                 RowBox[{"index", ",", "3"}], "]"}], "]"}], "]"}], 
              "\[Equal]", "\"\<??\>\""}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"res", "[", 
                RowBox[{"[", "101", "]"}], "]"}], "++"}], ";"}], 
             "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"res", "[", 
                RowBox[{"[", "100", "]"}], "]"}], "++"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"res", "[", 
             RowBox[{"[", 
              RowBox[{"dtlist", "[", 
               RowBox[{"[", 
                RowBox[{"index", ",", "2", ",", "1", ",", "1"}], "]"}], "]"}],
               "]"}], "]"}], "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "res", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5237326119994745`*^9, 3.5237327306922636`*^9}, {
   3.5237328064565973`*^9, 3.523732848008974*^9}, {3.52373291105858*^9, 
   3.523732943439432*^9}, {3.5238819713825617`*^9, 3.5238819746487484`*^9}, {
   3.5238820108128166`*^9, 3.523882016450139*^9}, {3.5238820718933105`*^9, 
   3.5238821258713975`*^9}, 3.5253501133118563`*^9, {3.5619843636434994`*^9, 
   3.5619843643995748`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sortpdres", "[", "name_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pdlist", ",", "res", ",", "len", ",", " ", "index"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pdlist", "=", 
      RowBox[{"Import", "[", "name", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"len", "=", 
      RowBox[{"Length", "[", "pdlist", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"res", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", "101", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"index", "=", "1"}], ",", 
       RowBox[{"index", "\[LessEqual]", "len"}], ",", 
       RowBox[{"index", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"pdlist", "[", 
             RowBox[{"[", 
              RowBox[{"index", ",", "1"}], "]"}], "]"}], "]"}], "\[Equal]", 
           "\"\<Not Found\>\""}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ToString", "[", 
               RowBox[{"pdlist", "[", 
                RowBox[{"[", 
                 RowBox[{"index", ",", "3"}], "]"}], "]"}], "]"}], 
              "\[Equal]", "\"\<??\>\""}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"res", "[", 
                RowBox[{"[", "101", "]"}], "]"}], "++"}], ";"}], 
             "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"res", "[", 
                RowBox[{"[", "100", "]"}], "]"}], "++"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"res", "[", 
             RowBox[{"[", 
              RowBox[{"pdlist", "[", 
               RowBox[{"[", 
                RowBox[{"index", ",", "2", ",", "1", ",", "1"}], "]"}], "]"}],
               "]"}], "]"}], "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "res", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.524342097059987*^9, 3.524342136397237*^9}, 
   3.525350115379975*^9, {3.561984358485984*^9, 3.561984359198055*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"groupcomposite", "[", "list_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"take", ",", "total", ",", "newlist"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"take", "=", 
      RowBox[{"Take", "[", 
       RowBox[{"list", ",", 
        RowBox[{"{", 
         RowBox[{"9", ",", "11"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"total", "=", 
      RowBox[{"Total", "[", "take", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"take", "=", 
      RowBox[{"Take", "[", 
       RowBox[{"list", ",", 
        RowBox[{"{", 
         RowBox[{"19", ",", "20"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"total", "+=", 
      RowBox[{"Total", "[", "take", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"take", "=", 
      RowBox[{"Take", "[", 
       RowBox[{"list", ",", 
        RowBox[{"{", 
         RowBox[{"42", ",", "50"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"total", "+=", 
      RowBox[{"Total", "[", "take", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"newlist", "=", 
      RowBox[{"Drop", "[", 
       RowBox[{"list", ",", 
        RowBox[{"{", 
         RowBox[{"9", ",", "11"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"newlist", "=", 
      RowBox[{"Drop", "[", 
       RowBox[{"newlist", ",", 
        RowBox[{"{", 
         RowBox[{"16", ",", "17"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"newlist", "=", 
      RowBox[{"Drop", "[", 
       RowBox[{"newlist", ",", 
        RowBox[{"{", 
         RowBox[{"37", ",", "45"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"newlist", "=", 
      RowBox[{"Insert", "[", 
       RowBox[{"newlist", ",", "total", ",", "85"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "newlist", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5237885919867887`*^9, 3.523788607597681*^9}, {
  3.5237887101635475`*^9, 3.523788959280796*^9}, {3.5237890602315702`*^9, 
  3.523789095487587*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "find", " ", "the", " ", "power", " ", "in", " ", "the", " ", "given", " ",
     "term", " ", "of", " ", "the", " ", "Jones", " ", "polynomial"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"findPower", "[", "item_", "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "res", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<item = \>\"", ",", " ", "item"}], "]"}], ";"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"IntegerQ", "[", "item", " ", "]"}], "\[IndentingNewLine]", 
        ",", " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<item amd res = \>\"", ",", "item", ",", " ", "\"\< 0\>\""}], 
           "]"}], ";"}], "*)"}], "\[IndentingNewLine]", "    ", 
        RowBox[{"Return", " ", "[", "0", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "where", " ", "is", " ", "the", " ", "t", " ", "numerator", " ", "or", 
        " ", 
        RowBox[{"denominator", " ", "?"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"res", " ", "=", 
       RowBox[{"If", " ", "[", 
        RowBox[{
         RowBox[{"IntegerQ", "[", 
          RowBox[{"Numerator", "[", "item", "]"}], "]"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
             "t", " ", "is", " ", "in", " ", "the", " ", "denominator"}], " ",
              ".."}], " ", 
            RowBox[{"don", "'"}], "t", " ", "worry", " ", "about"}], " ", "-",
            " ", 
           RowBox[{"sign", " ", "in", " ", "denominator"}]}], " ", "*)"}], 
         "\[IndentingNewLine]", ",", "  ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"Denominator", "[", "item", "]"}], "]"}], "\[Equal]", 
            "0"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", " ", 
            RowBox[{"Last", "[", 
             RowBox[{"Denominator", "[", "item", "]"}], "]"}]}]}], "]"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"t", " ", "is", " ", "in", " ", "the", " ", "numerator"}], 
          " ", "*)"}], "\[IndentingNewLine]", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"Numerator", "[", "item", "]"}], "]"}], "\[Equal]", 
            "0"}], "\[IndentingNewLine]", "\t", ",", "1", "  ", 
           RowBox[{"(*", " ", 
            RowBox[{"the", " ", "numerator", " ", "is", " ", "t"}], " ", 
            "*)"}], "\[IndentingNewLine]", "\t", ",", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"IntegerQ", "[", 
              RowBox[{"First", "[", 
               RowBox[{"Numerator", "[", "item", "]"}], "]"}], "]"}], " ", 
             "\[IndentingNewLine]", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"Last", "[", 
                  RowBox[{"Numerator", "[", "item", "]"}], "]"}], "]"}], 
                "\[Equal]", " ", "2"}], "\[IndentingNewLine]", ",", " ", 
               RowBox[{
                RowBox[{"Last", "[", 
                 RowBox[{"Numerator", "[", "item", "]"}], "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[IndentingNewLine]", ",", 
               "1"}], "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{
              RowBox[{"Numerator", "[", "item", "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<item and res = \>\"", " ", ",", "item", " ", ",", " ", 
          "\"\< \>\"", ",", " ", "res"}], "]"}], ";"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "res", "]"}]}]}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5285452249549203`*^9, 3.5285453166754313`*^9}, {
   3.528545352394867*^9, 3.528545375926569*^9}, {3.5285454931759615`*^9, 
   3.528545497004038*^9}, {3.528545588627865*^9, 3.528545600455838*^9}, {
   3.528545742969138*^9, 3.5285457639373517`*^9}, {3.5285470139763165`*^9, 
   3.5285470278855925`*^9}, {3.528547288688617*^9, 3.5285473264876695`*^9}, {
   3.528547537370809*^9, 3.528547571495809*^9}, {3.528547685433309*^9, 
   3.528547691855184*^9}, {3.528547913602105*^9, 3.5285479222268286`*^9}, {
   3.528548184390314*^9, 3.5285481846403065`*^9}, {3.5285483833995705`*^9, 
   3.5285484241170177`*^9}, {3.528570422649321*^9, 3.5285704836622124`*^9}, {
   3.5285706192030153`*^9, 3.52857062143729*^9}, {3.5285706681226983`*^9, 
   3.5285707192457056`*^9}, {3.528570823698162*^9, 3.528570833104352*^9}, {
   3.528570957806679*^9, 3.5285711955359983`*^9}, {3.528571345187986*^9, 
   3.5285715231967754`*^9}, {3.52857157971023*^9, 3.528571724407076*^9}, {
   3.5285717963433*^9, 3.528571846811404*^9}, {3.528571892138949*^9, 
   3.5285719050606585`*^9}, {3.5285719419351864`*^9, 3.528571944325781*^9}, {
   3.52857225966119*^9, 3.5285723222529373`*^9}, {3.52857258410075*^9, 
   3.528572630598667*^9}, {3.528572685377463*^9, 3.528572735140858*^9}, {
   3.5285727887018256`*^9, 3.5285727970609865`*^9}, {3.5285728912773247`*^9, 
   3.528572960431804*^9}, {3.5285730171334777`*^9, 3.5285730851937017`*^9}, 
   3.5285731600345783`*^9, {3.5285732589057813`*^9, 3.5285733183722477`*^9}, {
   3.5285733879474163`*^9, 3.5285734193835077`*^9}, 3.5285734721467695`*^9, {
   3.528573561767754*^9, 3.5285736490294695`*^9}, {3.5285738172580366`*^9, 
   3.5285738309924994`*^9}, {3.5285738642895875`*^9, 
   3.5285739682433777`*^9}, {3.528574009649893*^9, 3.528574048447016*^9}, {
   3.5382353492526627`*^9, 3.5382353583306713`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "find", " ", "the", " ", "breadth", " ", "of", " ", "a", " ", "given", " ",
     "Jones", " ", "polynomial"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"findBreadth", "[", "poly_", "]"}], " ", ":=", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lst", " ", ",", " ", "sorted"}], "}"}], ",", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"If", " ", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "poly", "]"}], "\[Equal]", "0"}], ",", " ", 
        RowBox[{"Return", "[", "0", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"lst", "=", 
       RowBox[{"Table", "[", " ", 
        RowBox[{
         RowBox[{"findPower", "[", 
          RowBox[{"poly", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", " ", 
           RowBox[{"Length", "[", "poly", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "      ", 
      RowBox[{"sorted", "=", " ", 
       RowBox[{"Sort", "[", "lst", "]"}]}], ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"Return", "[", 
       RowBox[{
        RowBox[{"Last", "[", "sorted", "]"}], "-", 
        RowBox[{"First", "[", "sorted", "]"}]}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.528545100170969*^9, 3.5285452166735115`*^9}, {
   3.5285453197536154`*^9, 3.5285453301756907`*^9}, {3.5285473569425488`*^9, 
   3.5285474186179757`*^9}, {3.528547639777059*^9, 3.528547666886434*^9}, {
   3.528547698339559*^9, 3.528547700245809*^9}, {3.5285743083306704`*^9, 
   3.528574308736907*^9}, {3.5285743874374886`*^9, 3.528574410733469*^9}, {
   3.5370171516975193`*^9, 3.5370171544631977`*^9}, {3.5382353201124105`*^9, 
   3.5382353395809116`*^9}, {3.548017744359375*^9, 3.54801774915625*^9}, 
   3.5480795578125*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "looks", " ", "up", " ", "the", " ", "knot", " ", "type", " ", "or", " ", 
    "generates", " ", "a", " ", "lower", " ", "boundary", " ", "on", " ", 
    "the", " ", "crossing", " ", "number", " ", "for", "\[IndentingNewLine]", 
    "a", " ", "knot", " ", "given", " ", "in", " ", "pd", " ", 
    "representation"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"crorlookuppd", "[", 
    RowBox[{"pd_", ",", " ", "timeconstraint_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"jones", ",", " ", "res", ",", "breadth", ",", "time"}], "  ", 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "if", " ", "pd", " ", "shows", " ", "it", " ", "the", " ", "unknot"}], 
       " ", "-", " ", 
       RowBox[{"return", " ", "the", " ", "appropriate", " ", "info"}]}], " ",
       "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "compute", " ", "the", " ", "jones", " ", "as", " ", "a", " ", "lower", 
       " ", "bound", " ", "for", " ", "the", " ", "cr"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"TimeConstrained", "[", 
       RowBox[{
        RowBox[{"time", "=", 
         RowBox[{"Timing", "[", 
          RowBox[{
           RowBox[{"jones", " ", "=", 
            RowBox[{"computeJones", "[", "pd", "]"}]}], ";"}], "]"}]}], 
        "\[IndentingNewLine]", ",", " ", "timeconstraint", 
        "\[IndentingNewLine]", ",", " ", 
        RowBox[{"jones", " ", "=", " ", 
         RowBox[{"{", "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"breadth", " ", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"(", 
           RowBox[{"jones", " ", "===", " ", 
            RowBox[{"{", "}"}]}], ")"}]}], ",", 
         RowBox[{"findBreadth", "[", "jones", "]"}], ",", " ", 
         RowBox[{"-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"breadth", " ", ">", " ", "9"}], ",", " ", 
        RowBox[{"res", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"\"\<CR bound\>\"", ",", " ", "breadth", ",", " ", 
           RowBox[{"Length", "[", "pd", "]"}], ",", " ", 
           RowBox[{"time", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"breadth", "<", " ", "0"}], ",", " ", 
        RowBox[{"res", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{"\"\<no cr bound\>\"", ",", " ", ",", " ", 
           RowBox[{"Length", "[", "pd", "]"}], ",", " ", 
           RowBox[{"++", "timeconstraint"}]}], "}"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
        "0", "\[LessEqual]", " ", "breadth", " ", "\[LessEqual]", " ", "9"}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"try", " ", "to", " ", "identify", " ", "the", " ", "knot"}],
          " ", "*)"}], "\[IndentingNewLine]", ",", 
        RowBox[{
         RowBox[{"res", " ", "=", " ", 
          RowBox[{"lookuppd", "[", "pd", "]"}]}], ";", "\[IndentingNewLine]", 
         "   ", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
           "if", " ", "knot", " ", "type", " ", "could", " ", "not", " ", 
            "be", " ", "determined"}], " ", "\[Equal]", ">", " ", 
           RowBox[{
           "return", " ", "boundary", "\[IndentingNewLine]", "\t\t", "else", 
            " ", "return", " ", "knottype"}]}], " ", "*)"}], 
         "\[IndentingNewLine]", "   ", 
         RowBox[{"If", " ", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Head", "[", 
             RowBox[{"res", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "===", "String"}], 
           "\[IndentingNewLine]", "\t", ",", " ", 
           RowBox[{"res", " ", "=", 
            RowBox[{"{", 
             RowBox[{"\"\<CR bound\>\"", ",", " ", "breadth", ",", " ", 
              RowBox[{"Length", "[", "pd", "]"}], ",", " ", 
              RowBox[{"time", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}]}], 
          "\[IndentingNewLine]", "     ", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "res", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5382303793775444`*^9, 3.5382304976245174`*^9}, {
   3.538232269898408*^9, 3.5382322765077405`*^9}, {3.538232324898056*^9, 
   3.5382325651777678`*^9}, {3.538232607552497*^9, 3.538232614724326*^9}, {
   3.5382328561716785`*^9, 3.5382329518699036`*^9}, {3.5382352765817175`*^9, 
   3.538235315706217*^9}, {3.5393498602874527`*^9, 3.539349971026915*^9}, {
   3.539350018676265*^9, 3.53935010642241*^9}, {3.5393501434586153`*^9, 
   3.5393501820898976`*^9}, {3.539374975166432*^9, 3.53937498235384*^9}, {
   3.539375041103088*^9, 3.539375042024951*^9}, {3.5393751198677044`*^9, 
   3.539375122773917*^9}, {3.5393751727576523`*^9, 3.53937521083529*^9}, {
   3.539387143671875*^9, 3.5393872846875*^9}, 3.54801773234375*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "computes", " ", "the", " ", "Jones", " ", "polynomial", " ", "of", " ", 
    "a", " ", "knot", " ", "given", " ", "its", " ", "pd", " ", "code"}], " ",
    "*)"}], 
  RowBox[{
   RowBox[{"computeJones", "[", "pd_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"jones", ",", " ", 
       RowBox[{"decompose", "=", "True"}], ",", "pdlist"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", "q", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"pd", " ", "\[Equal]", " ", 
         RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", "\t", 
        RowBox[{"Return", "[", "0", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"decompose", "\[IndentingNewLine]", ",", 
        RowBox[{
         RowBox[{"pdlist", "=", 
          RowBox[{"decomposePD", "[", "pd", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"jones", "=", 
          RowBox[{"Expand", "[", 
           RowBox[{"Product", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Jones", "[", 
               RowBox[{"mappd", "[", 
                RowBox[{"pdlist", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "[", "q", 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "pdlist", "]"}]}], "}"}]}], "]"}], 
           "]"}]}], ";"}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
            RowBox[{"Length", "[", "pdlist", "]"}], ",", "\"\< \\n\>\"", ",", 
            "homfly"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", ",", 
        RowBox[{
         RowBox[{"jones", "=", 
          RowBox[{
           RowBox[{"Jones", "[", 
            RowBox[{"mappd", "[", "pd", "]"}], "]"}], "[", "q", "]"}]}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "jones", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.5243417311140556`*^9, 3.524341847052687*^9}, {
   3.524341908224186*^9, 3.524341945603324*^9}, {3.5246851997766676`*^9, 
   3.5246852733378754`*^9}, {3.5246853721775284`*^9, 3.524685392412686*^9}, {
   3.5246856417929497`*^9, 3.5246856832103186`*^9}, {3.524685756464508*^9, 
   3.5246858203521624`*^9}, {3.5246858519469695`*^9, 3.524685929725418*^9}, {
   3.5246859711457872`*^9, 3.524685971683818*^9}, {3.524686049010241*^9, 
   3.5246860623040013`*^9}, {3.524686131828978*^9, 3.524686151113081*^9}, {
   3.524695729445174*^9, 3.52469573094626*^9}, {3.525226140757016*^9, 
   3.525226165253417*^9}, {3.5382299102459126`*^9, 3.5382299232602882`*^9}, {
   3.5382301667763143`*^9, 3.538230195790639*^9}, {3.5382302400386567`*^9, 
   3.5382302488663864`*^9}, {3.5382302800368648`*^9, 
   3.5382303344880686`*^9}, {3.538232236586121*^9, 3.5382322539922595`*^9}, 
   3.538232627817992*^9, {3.5382327013484783`*^9, 3.538232711223352*^9}, {
   3.53823278162862*^9, 3.538232785034696*^9}, {3.5382332013446236`*^9, 
   3.538233214719281*^9}, {3.5382352602069273`*^9, 3.5382352734880075`*^9}, 
   3.548017723796875*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.524615135852767*^9, 3.524615136677814*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["from knot atlas", "Subsection",
 CellChangeTimes->{{3.5246151479414587`*^9, 3.524615157968032*^9}, {
  3.524615255352602*^9, 3.5246152637560825`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "IdentifyWithin", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"UseInvariants", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Jones", "[", "#", "]"}], "[", "q", "]"}], "&"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"HOMFLYPT", "[", "#", "]"}], "[", 
           RowBox[{"a", ",", "z"}], "]"}], "&"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Kauffman", "[", "#", "]"}], "[", 
           RowBox[{"a", ",", "z"}], "]"}], "&"}]}], "}"}]}], ",", 
      RowBox[{"ConnectedSum", "\[Rule]", "\"\<True\>\""}]}], "}"}]}], ";", 
   RowBox[{
    RowBox[{"IdentifyWithin", "[", 
     RowBox[{"L_", ",", "H_List", ",", "opts___Rule"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"div", ",", 
        RowBox[{"j", "=", "1"}], ",", "l", ",", 
        RowBox[{"i", "=", "1"}], ",", "u", ",", "mu", ",", "t", ",", "mt", 
        ",", 
        RowBox[{"out", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"out1", "=", 
         RowBox[{"{", "}"}]}], ",", "nk", ",", "mnk", ",", "mnk1", ",", "p", 
        ",", "mp", ",", "m", ",", "p1", ",", 
        RowBox[{"invariants", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"UseInvariants", "/.", 
            RowBox[{"{", "opts", "}"}]}], "/.", 
           RowBox[{"Options", "[", "IdentifyWithin", "]"}]}], ")"}]}], ",", 
        RowBox[{"connectedsum", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ConnectedSum", "/.", 
            RowBox[{"{", "opts", "}"}]}], "/.", 
           RowBox[{"Options", "[", "IdentifyWithin", "]"}]}], ")"}]}]}], 
       "}"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"NormalizeP", "[", "poly_", "]"}], ":=", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"t1", ",", "i1"}], "}"}], ",", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"i1", "=", "1"}], ";", 
               RowBox[{"t1", ":=", 
                RowBox[{"FactorList", "[", "poly", "]"}]}]}], ",", 
              RowBox[{"i1", "\[LessEqual]", 
               RowBox[{"Length", "[", 
                RowBox[{"Variables", "[", "poly", "]"}], "]"}]}], ",", 
              RowBox[{"i1", "++"}], ",", 
              RowBox[{"t1", "=", 
               RowBox[{"DeleteCases", "[", 
                RowBox[{"t1", ",", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Variables", "[", "poly", "]"}], "[", 
                    RowBox[{"[", "i1", "]"}], "]"}], ",", "_Integer"}], "}"}],
                   "|", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}]}]}], "]"}], ";", 
            RowBox[{"Times", "@@", 
             RowBox[{"Power", "@@@", "t1"}]}]}], ")"}]}], "]"}]}], ";", 
       RowBox[{"l", ":=", 
        RowBox[{"Length", "[", "invariants", "]"}]}], ";", 
       RowBox[{
        RowBox[{"u", "[", "0", "]"}], "=", 
        RowBox[{
         RowBox[{"mu", "[", "0", "]"}], "=", "H"}]}], ";", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"i", "\[LessEqual]", "l"}], "&&", 
          RowBox[{"!", 
           RowBox[{
            RowBox[{"Length", "[", "out", "]"}], "===", "1"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"t", "[", "i", "]"}], "=", 
           RowBox[{
            RowBox[{"invariants", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", "L", "]"}]}], ";", 
          RowBox[{
           RowBox[{"mt", "[", "i", "]"}], "=", 
           RowBox[{
            RowBox[{"invariants", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"Mirror", "[", "L", "]"}], "]"}]}], ";", 
          RowBox[{
           RowBox[{"u", "[", "i", "]"}], "=", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"u", "[", 
              RowBox[{"i", "-", "1"}], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"t", "[", "i", "]"}], "\[Equal]", 
               RowBox[{
                RowBox[{"invariants", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "[", "#", "]"}]}], "&"}]}], 
            "]"}]}], ";", 
          RowBox[{
           RowBox[{"mu", "[", "i", "]"}], "=", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"mu", "[", 
              RowBox[{"i", "-", "1"}], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"mt", "[", "i", "]"}], "\[Equal]", 
               RowBox[{
                RowBox[{"invariants", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "[", "#", "]"}]}], "&"}]}], 
            "]"}]}], ";", 
          RowBox[{"out", "=", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"u", "[", "i", "]"}], ",", 
              RowBox[{"Mirror", "/@", 
               RowBox[{"mu", "[", "i", "]"}]}]}], "}"}], "]"}]}], ";", 
          RowBox[{"i", "++"}]}]}], "]"}], ";", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "out", "]"}], "\[GreaterEqual]", "2"}], ",", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{"out", ",", 
           RowBox[{"Mirror", "[", 
            RowBox[{"Knot", "[", 
             RowBox[{"0", ",", "1"}], "]"}], "]"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{"Length", "[", "out", "]"}], "\[Equal]", "1"}], ",", 
         RowBox[{"out", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"u", "[", 
              RowBox[{"i", "-", "1"}], "]"}], "\[NotEqual]", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"u", "[", 
             RowBox[{"i", "-", "1"}], "]"}], ",", 
            RowBox[{"Mirror", "/@", 
             RowBox[{"mu", "[", 
              RowBox[{"i", "-", "1"}], "]"}]}]}], "]"}]}], ",", 
         RowBox[{"connectedsum", "===", "\"\<True\>\""}], ",", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ";", 
          RowBox[{
           RowBox[{"nk", "[", "0", "]"}], "=", 
           RowBox[{
            RowBox[{"mnk", "[", "0", "]"}], "=", "H"}]}], ";", 
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "out1", "]"}], "\[NotEqual]", "1"}], "&&", 
             RowBox[{"i", "\[LessEqual]", "l"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"p", "[", "i", "]"}], "=", 
              RowBox[{"NormalizeP", "[", 
               RowBox[{"t", "[", "i", "]"}], "]"}]}], ";", 
             RowBox[{
              RowBox[{"mp", "[", "i", "]"}], "=", 
              RowBox[{"NormalizeP", "[", 
               RowBox[{"mt", "[", "i", "]"}], "]"}]}], ";", 
             RowBox[{
              RowBox[{"nk", "[", "i", "]"}], "=", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"nk", "[", 
                 RowBox[{"i", "-", "1"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"p1", "=", 
                    RowBox[{"NormalizeP", "[", 
                    RowBox[{
                    RowBox[{"invariants", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", "#", "]"}], "]"}]}], 
                   ";", 
                   RowBox[{"z", "=", "3"}], ";", 
                   RowBox[{
                    RowBox[{"PolynomialRemainder", "[", 
                    RowBox[{
                    RowBox[{"p", "[", "i", "]"}], ",", "p1", ",", 
                    RowBox[{
                    RowBox[{"Variables", "[", 
                    RowBox[{"p", "[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "===", "0"}]}], 
                  ")"}], "&"}]}], "]"}]}], ";", 
             RowBox[{
              RowBox[{"mnk", "[", "i", "]"}], "=", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"mnk", "[", 
                 RowBox[{"i", "-", "1"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"p1", "=", 
                    RowBox[{"NormalizeP", "[", 
                    RowBox[{
                    RowBox[{"invariants", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", "#", "]"}], "]"}]}], 
                   ";", 
                   RowBox[{"z", "=", "3"}], ";", 
                   RowBox[{
                    RowBox[{"PolynomialRemainder", "[", 
                    RowBox[{
                    RowBox[{"mp", "[", "i", "]"}], ",", "p1", ",", 
                    RowBox[{
                    RowBox[{"Variables", "[", 
                    RowBox[{"p", "[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "===", "0"}]}], 
                  ")"}], "&"}]}], "]"}]}], ";", 
             RowBox[{"Clear", "[", "z", "]"}], ";", 
             RowBox[{
              RowBox[{"mnk1", "[", "i", "]"}], "=", 
              RowBox[{"Mirror", "/@", 
               RowBox[{"mnk", "[", "i", "]"}]}]}], ";", 
             RowBox[{"div", "=", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"nk", "[", "i", "]"}], ",", 
                 RowBox[{"mnk1", "[", "i", "]"}]}], "}"}], "]"}]}], ";", 
             RowBox[{"div", "=", 
              RowBox[{"DeleteCases", "[", 
               RowBox[{"div", ",", 
                RowBox[{
                 RowBox[{"Knot", "[", 
                  RowBox[{"0", ",", "1"}], "]"}], "|", 
                 RowBox[{"Mirror", "[", 
                  RowBox[{"Knot", "[", 
                   RowBox[{"0", ",", "1"}], "]"}], "]"}]}]}], "]"}]}], ";", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"div", "\[Equal]", 
                RowBox[{"{", "}"}]}], ",", 
               RowBox[{"out1", "=", 
                RowBox[{"{", "}"}]}], ",", 
               RowBox[{
                RowBox[{"For", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"m", "=", "1"}], ";", 
                   RowBox[{
                    RowBox[{"W", "[", "0", "]"}], "=", 
                    RowBox[{
                    RowBox[{"CS", "[", "0", "]"}], "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "/@", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"List", ",", "div", ",", "div", ",", "1"}], "]"}],
                     ",", "1"}], "]"}]}], ",", "OrderedQ"}], "]"}]}]}]}], ",", 
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{
                    RowBox[{"W", "[", 
                    RowBox[{"m", "-", "1"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "<", "4"}], ",", 
                  RowBox[{"m", "++"}], ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"W", "[", "m", "]"}], "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "/@", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"Outer", "[", 
                    RowBox[{"List", ",", "div", ",", 
                    RowBox[{"W", "[", 
                    RowBox[{"m", "-", "1"}], "]"}], ",", "1"}], "]"}], ",", 
                    "1"}], "]"}]}], ",", "OrderedQ"}], "]"}]}], ";", 
                   RowBox[{
                    RowBox[{"CS", "[", "m", "]"}], "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"CS", "[", 
                    RowBox[{"m", "-", "1"}], "]"}], ",", 
                    RowBox[{"W", "[", "m", "]"}]}], "}"}], ",", "1"}], 
                    "]"}]}], ";"}]}], "]"}], ";", 
                RowBox[{"out1", "=", 
                 RowBox[{"Select", "[", 
                  RowBox[{
                   RowBox[{"CS", "[", 
                    RowBox[{"m", "-", "1"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Expand", "[", 
                    RowBox[{"Times", "@@", 
                    RowBox[{
                    RowBox[{"invariants", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "/@", "#"}]}], "]"}], 
                    "\[Equal]", 
                    RowBox[{"t", "[", "i", "]"}]}], "&"}]}], "]"}]}], ";"}]}],
               "]"}], ";", 
             RowBox[{"i", "++"}]}]}], "]"}], ";", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"out1", "\[Equal]", 
             RowBox[{"{", "}"}]}], ",", 
            RowBox[{"{", "}"}], ",", 
            RowBox[{"ConnectedSum", "@@@", "out1"}]}], "]"}]}], ",", "True", 
         ",", 
         RowBox[{"{", "}"}]}], "]"}]}]}], "]"}]}], ";"}], "\n"}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowToolbars->"EditBar",
WindowSize->{918, 783},
WindowMargins->{{140, Automatic}, {Automatic, 11}},
ShowSelection->True,
FrontEndVersion->"8.0 for Microsoft Windows (64-bit) (October 6, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 152, 3, 31, "Input",
 InitializationCell->True],
Cell[722, 27, 219, 3, 43, "Print"]
}, Open  ]],
Cell[956, 33, 218, 5, 31, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1199, 42, 334, 5, 71, "Section"],
Cell[CellGroupData[{
Cell[1558, 51, 110, 1, 27, "Subsubsection"],
Cell[1671, 54, 1917, 30, 101, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3637, 90, 289, 4, 71, "Section"],
Cell[CellGroupData[{
Cell[3951, 98, 110, 1, 27, "Subsubsection"],
Cell[4064, 101, 1468, 22, 47, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5581, 129, 240, 3, 71, "Section"],
Cell[CellGroupData[{
Cell[5846, 136, 110, 1, 27, "Subsubsection"],
Cell[5959, 139, 2011, 33, 173, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8019, 178, 149, 2, 71, "Section"],
Cell[CellGroupData[{
Cell[8193, 184, 110, 1, 27, "Subsubsection"],
Cell[8306, 187, 1044, 17, 101, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9399, 210, 100, 1, 71, "Section"],
Cell[CellGroupData[{
Cell[9524, 215, 110, 1, 27, "Subsubsection"],
Cell[9637, 218, 1043, 17, 119, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10729, 241, 130, 2, 71, "Section"],
Cell[CellGroupData[{
Cell[10884, 247, 108, 1, 27, "Subsubsection"],
Cell[10995, 250, 118, 1, 29, "Text"],
Cell[11116, 253, 321, 6, 29, "Text"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[11486, 265, 102, 1, 41, "Section"],
Cell[CellGroupData[{
Cell[11613, 270, 108, 1, 48, "Subsubsection"],
Cell[11724, 273, 1681, 27, 382, "Text"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[13454, 306, 296, 4, 41, "Section"],
Cell[CellGroupData[{
Cell[13775, 314, 106, 1, 48, "Subsubsection"],
Cell[13884, 317, 290, 6, 112, "Text"]
}, Open  ]],
Cell[14189, 326, 144, 1, 48, "Subsubsection"],
Cell[14336, 329, 181, 2, 32, "Subsubsection"]
}, Closed]],
Cell[CellGroupData[{
Cell[14554, 336, 225, 3, 41, "Section"],
Cell[CellGroupData[{
Cell[14804, 343, 297, 4, 36, "Subsection"],
Cell[15104, 349, 1188, 21, 209, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[16329, 375, 196, 3, 28, "Subsection"],
Cell[16528, 380, 92, 1, 29, "Text"],
Cell[16623, 383, 3423, 89, 392, "Input"],
Cell[CellGroupData[{
Cell[20071, 476, 278, 6, 31, "Input"],
Cell[20352, 484, 48586, 804, 427, 3169, 58, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[68953, 1291, 266, 8, 29, "Text"],
Cell[69222, 1301, 2108, 51, 232, "Input"],
Cell[CellGroupData[{
Cell[71355, 1356, 334, 7, 31, "Input"],
Cell[71692, 1365, 1839, 35, 400, "Output"]
}, Open  ]],
Cell[73546, 1403, 207, 6, 29, "Text"],
Cell[73756, 1411, 3997, 109, 112, "Input"],
Cell[CellGroupData[{
Cell[77778, 1524, 357, 7, 31, "Input"],
Cell[78138, 1533, 2404, 51, 410, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[80591, 1590, 166, 2, 28, "Subsection"],
Cell[80760, 1594, 1050, 22, 137, "Text"],
Cell[CellGroupData[{
Cell[81835, 1620, 719, 13, 54, "Input"],
Cell[82557, 1635, 4720, 131, 183, "Output"],
Cell[87280, 1768, 123185, 2029, 406, 5050, 91, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[210514, 3803, 95, 1, 28, "Subsection"],
Cell[210612, 3806, 729, 16, 155, "Text"],
Cell[CellGroupData[{
Cell[211366, 3826, 696, 18, 52, "Input"],
Cell[212065, 3846, 38508, 642, 203, 7109, 125, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[250610, 4493, 644, 17, 72, "Input"],
Cell[251257, 4512, 567, 10, 40, "Message"],
Cell[251827, 4524, 598, 10, 21, "Message"],
Cell[252428, 4536, 630, 10, 21, "Message"],
Cell[253061, 4548, 1685, 26, 123, "Message"],
Cell[254749, 4576, 729, 11, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255515, 4592, 723, 18, 52, "Input"],
Cell[256241, 4612, 7295, 128, 203, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[263585, 4746, 142, 2, 36, "Subsection"],
Cell[263730, 4750, 1827, 37, 371, "Text"],
Cell[CellGroupData[{
Cell[265582, 4791, 1107, 27, 72, "Input"],
Cell[266692, 4820, 6074, 108, 139, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[272815, 4934, 107, 1, 28, "Subsection"],
Cell[272925, 4937, 3565, 60, 713, "Text"],
Cell[CellGroupData[{
Cell[276515, 5001, 149, 3, 31, "Input"],
Cell[276667, 5006, 96, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276800, 5012, 131, 2, 31, "Input"],
Cell[276934, 5016, 210, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277181, 5026, 203, 3, 31, "Input"],
Cell[277387, 5031, 243, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277667, 5042, 132, 2, 31, "Input"],
Cell[277802, 5046, 131, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277970, 5053, 183, 3, 31, "Input"],
Cell[278156, 5058, 133, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278326, 5065, 185, 3, 31, "Input"],
Cell[278514, 5070, 134, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278685, 5077, 240, 4, 31, "Input"],
Cell[278928, 5083, 158, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279123, 5091, 230, 4, 31, "Input"],
Cell[279356, 5097, 353, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279746, 5108, 109, 2, 31, "Input"],
Cell[279858, 5112, 682, 17, 30, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[280589, 5135, 149, 2, 28, "Subsection"],
Cell[280741, 5139, 1754, 39, 389, "Text"],
Cell[CellGroupData[{
Cell[282520, 5182, 130, 2, 31, "Input"],
Cell[282653, 5186, 496, 13, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283186, 5204, 613, 15, 31, "Input"],
Cell[283802, 5221, 393, 10, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284232, 5236, 562, 14, 31, "Input"],
Cell[284797, 5252, 418, 11, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285252, 5268, 157, 3, 31, "Input"],
Cell[285412, 5273, 208, 4, 30, "Output"]
}, Open  ]],
Cell[285635, 5280, 320, 8, 29, "Text"],
Cell[CellGroupData[{
Cell[285980, 5292, 330, 6, 52, "Input"],
Cell[286313, 5300, 398, 9, 30, "Output"],
Cell[286714, 5311, 452, 13, 30, "Output"]
}, Open  ]],
Cell[287181, 5327, 545, 11, 47, "Text"],
Cell[CellGroupData[{
Cell[287751, 5342, 285, 5, 52, "Input"],
Cell[CellGroupData[{
Cell[288061, 5351, 106, 1, 23, "Print"],
Cell[288170, 5354, 113, 1, 23, "Print"]
}, Open  ]],
Cell[288298, 5358, 1130, 29, 50, "Output"],
Cell[CellGroupData[{
Cell[289453, 5391, 106, 1, 23, "Print"],
Cell[289562, 5394, 113, 1, 23, "Print"],
Cell[289678, 5397, 106, 1, 23, "Print"],
Cell[289787, 5400, 106, 1, 23, "Print"],
Cell[289896, 5403, 108, 1, 23, "Print"],
Cell[290007, 5406, 106, 1, 23, "Print"],
Cell[290116, 5409, 106, 1, 23, "Print"],
Cell[290225, 5412, 106, 1, 23, "Print"],
Cell[290334, 5415, 108, 1, 23, "Print"],
Cell[290445, 5418, 106, 1, 23, "Print"],
Cell[290554, 5421, 105, 1, 23, "Print"],
Cell[290662, 5424, 106, 1, 23, "Print"],
Cell[290771, 5427, 108, 1, 23, "Print"],
Cell[290882, 5430, 106, 1, 23, "Print"],
Cell[290991, 5433, 108, 1, 23, "Print"],
Cell[291102, 5436, 106, 1, 23, "Print"],
Cell[291211, 5439, 106, 1, 23, "Print"],
Cell[291320, 5442, 106, 1, 23, "Print"],
Cell[291429, 5445, 106, 1, 23, "Print"],
Cell[291538, 5448, 106, 1, 23, "Print"],
Cell[291647, 5451, 106, 1, 23, "Print"],
Cell[291756, 5454, 106, 1, 23, "Print"]
}, Open  ]],
Cell[291877, 5458, 355, 11, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[292269, 5474, 157, 3, 31, "Input"],
Cell[292429, 5479, 134, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[292600, 5487, 435, 11, 31, "Input"],
Cell[293038, 5500, 1663, 55, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[294738, 5560, 435, 11, 31, "Input"],
Cell[295176, 5573, 2028, 70, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[297241, 5648, 2155, 71, 72, "Input"],
Cell[299399, 5721, 444, 12, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299880, 5738, 2113, 71, 72, "Input"],
Cell[301996, 5811, 2073, 70, 69, "Output"]
}, Open  ]],
Cell[304084, 5884, 185, 4, 29, "Text"],
Cell[CellGroupData[{
Cell[304294, 5892, 2308, 73, 92, "Input"],
Cell[306605, 5967, 2421, 79, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[309063, 6051, 2612, 82, 92, "Input"],
Cell[311678, 6135, 2650, 87, 69, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[314377, 6228, 104, 1, 28, "Subsection"],
Cell[314484, 6231, 2108, 44, 461, "Text"],
Cell[316595, 6277, 178, 2, 29, "Text"],
Cell[CellGroupData[{
Cell[316798, 6283, 131, 2, 31, "Input"],
Cell[316932, 6287, 1397, 35, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318366, 6327, 286, 4, 31, "Input"],
Cell[318655, 6333, 290, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318982, 6345, 225, 5, 31, "Input"],
Cell[319210, 6352, 89, 2, 30, "Output"]
}, Open  ]],
Cell[319314, 6357, 239, 7, 29, "Text"],
Cell[CellGroupData[{
Cell[319578, 6368, 144, 2, 31, "Input"],
Cell[319725, 6372, 915, 24, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[320677, 6401, 249, 5, 31, "Input"],
Cell[320929, 6408, 709, 18, 30, "Output"]
}, Open  ]],
Cell[321653, 6429, 181, 4, 29, "Text"],
Cell[CellGroupData[{
Cell[321859, 6437, 137, 2, 31, "Input"],
Cell[321999, 6441, 96, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[322132, 6448, 171, 3, 31, "Input"],
Cell[322306, 6453, 98, 2, 30, "Output"]
}, Open  ]],
Cell[322419, 6458, 234, 7, 29, "Text"],
Cell[CellGroupData[{
Cell[322678, 6469, 226, 5, 31, "Input"],
Cell[322907, 6476, 794, 20, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[323738, 6501, 303, 6, 31, "Input"],
Cell[324044, 6509, 337, 6, 21, "Message"],
Cell[324384, 6517, 6171, 116, 375, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[330592, 6638, 241, 4, 31, "Input"],
Cell[330836, 6644, 4823, 92, 207, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[335696, 6741, 293, 7, 31, "Input"],
Cell[335992, 6750, 9779, 220, 183, "Output"]
}, Open  ]],
Cell[345786, 6973, 12382, 344, 492, "Input"],
Cell[CellGroupData[{
Cell[358193, 7321, 139, 2, 31, "Input"],
Cell[358335, 7325, 7327, 132, 287, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[365699, 7462, 201, 4, 31, "Input"],
Cell[365903, 7468, 577, 15, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[366517, 7488, 148, 2, 31, "Input"],
Cell[366668, 7492, 676, 20, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[367381, 7517, 404, 11, 31, "Input"],
Cell[367788, 7530, 720, 23, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[368545, 7558, 404, 11, 31, "Input"],
Cell[368952, 7571, 720, 23, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[369709, 7599, 145, 2, 31, "Input"],
Cell[369857, 7603, 1315, 38, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[371209, 7646, 234, 5, 31, "Input"],
Cell[371446, 7653, 398, 8, 21, "Message"],
Cell[371847, 7663, 402, 8, 21, "Message"],
Cell[372252, 7673, 301, 6, 21, "Message"],
Cell[372556, 7681, 349, 10, 30, "Output"]
}, Open  ]],
Cell[372920, 7694, 94, 1, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[373051, 7700, 105, 1, 36, "Subsection"],
Cell[373159, 7703, 1182, 26, 227, "Text"],
Cell[CellGroupData[{
Cell[374366, 7733, 134, 2, 31, "Input"],
Cell[374503, 7737, 3118, 58, 445, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[377658, 7800, 186, 3, 31, "Input"],
Cell[377847, 7805, 2480, 72, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[380364, 7882, 278, 6, 31, "Input"],
Cell[380645, 7890, 3337, 61, 427, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[384019, 7956, 338, 7, 31, "Input"],
Cell[384360, 7965, 3589, 67, 438, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[387986, 8037, 431, 9, 31, "Input"],
Cell[388420, 8048, 3460, 90, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391917, 8143, 247, 4, 31, "Input"],
Cell[392167, 8149, 4043, 73, 367, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[396247, 8227, 719, 13, 52, "Input"],
Cell[396969, 8242, 4791, 133, 126, "Output"],
Cell[401763, 8377, 5415, 98, 359, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[407215, 8480, 739, 13, 52, "Input"],
Cell[407957, 8495, 7775, 216, 202, "Output"],
Cell[415735, 8713, 8757, 157, 413, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[424541, 8876, 101, 1, 28, "Subsection"],
Cell[424645, 8879, 1641, 34, 407, "Text"],
Cell[CellGroupData[{
Cell[426311, 8917, 425, 13, 31, "Input"],
Cell[426739, 8932, 339, 7, 56, "Message"],
Cell[427081, 8941, 1316, 43, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[428434, 8989, 251, 6, 31, "Input"],
Cell[428688, 8997, 1235, 42, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[429960, 9044, 463, 12, 31, "Input"],
Cell[430426, 9058, 2338, 74, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[432801, 9137, 314, 8, 31, "Input"],
Cell[433118, 9147, 1058, 35, 76, "Output"]
}, Open  ]],
Cell[434191, 9185, 215, 4, 47, "Text"],
Cell[CellGroupData[{
Cell[434431, 9193, 444, 12, 31, "Input"],
Cell[434878, 9207, 2121, 75, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[437036, 9287, 2280, 77, 112, "Input"],
Cell[439319, 9366, 2381, 81, 88, "Output"]
}, Open  ]],
Cell[441715, 9450, 93, 1, 29, "Text"],
Cell[CellGroupData[{
Cell[441833, 9455, 1428, 35, 92, "Input"],
Cell[443264, 9492, 1487, 38, 88, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[444788, 9535, 904, 23, 52, "Input"],
Cell[445695, 9560, 1665, 50, 95, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[447397, 9615, 819, 21, 52, "Input"],
Cell[448219, 9638, 1742, 51, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[449998, 9694, 364, 6, 92, "Input"],
Cell[450365, 9702, 142, 3, 30, "Output"],
Cell[450510, 9707, 143, 3, 30, "Output"],
Cell[450656, 9712, 136, 2, 30, "Output"],
Cell[450795, 9716, 137, 2, 30, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[450993, 9725, 163, 2, 41, "Section"],
Cell[CellGroupData[{
Cell[451181, 9731, 270, 3, 28, "Subsubsection"],
Cell[451454, 9736, 309, 6, 31, "Input",
 InitializationCell->True],
Cell[451766, 9744, 410, 11, 31, "Input",
 InitializationCell->True],
Cell[452179, 9757, 1223, 25, 52, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[453439, 9787, 229, 3, 28, "Subsubsection"],
Cell[453671, 9792, 2943, 59, 232, "Input",
 InitializationCell->True],
Cell[456617, 9853, 6615, 150, 572, "Input"],
Cell[463235, 10005, 4922, 111, 400, "Input",
 InitializationCell->True],
Cell[468160, 10118, 2770, 68, 192, "Input",
 InitializationCell->True],
Cell[470933, 10188, 1230, 30, 137, "Input",
 InitializationCell->True],
Cell[472166, 10220, 3848, 88, 252, "Input",
 InitializationCell->True],
Cell[476017, 10310, 1442, 43, 72, "Input",
 InitializationCell->True],
Cell[477462, 10355, 517, 16, 52, "Input",
 InitializationCell->True],
Cell[477982, 10373, 498, 12, 52, "Input",
 InitializationCell->True],
Cell[478483, 10387, 406, 12, 52, "Input",
 InitializationCell->True],
Cell[478892, 10401, 868, 26, 72, "Input",
 InitializationCell->True],
Cell[479763, 10429, 609, 17, 72, "Input",
 InitializationCell->True],
Cell[480375, 10448, 1924, 47, 100, "Input",
 InitializationCell->True],
Cell[482302, 10497, 1658, 42, 72, "Input",
 InitializationCell->True],
Cell[483963, 10541, 4881, 139, 332, "Input",
 InitializationCell->True],
Cell[488847, 10682, 8203, 225, 592, "Input",
 InitializationCell->True],
Cell[497053, 10909, 458, 14, 31, "Input",
 InitializationCell->True],
Cell[497514, 10925, 2074, 63, 72, "Input",
 InitializationCell->True],
Cell[499591, 10990, 332, 11, 39, "Input",
 InitializationCell->True],
Cell[499926, 11003, 576, 18, 46, "Input",
 InitializationCell->True],
Cell[500505, 11023, 371, 12, 51, "Input",
 InitializationCell->True],
Cell[500879, 11037, 10096, 227, 726, "Input",
 InitializationCell->True],
Cell[510978, 11266, 6341, 151, 992, "Input",
 InitializationCell->True],
Cell[517322, 11419, 3034, 66, 212, "Input",
 InitializationCell->True],
Cell[520359, 11487, 24110, 504, 3183, "Input",
 InitializationCell->True],
Cell[544472, 11993, 7053, 165, 682, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[551562, 12163, 210, 3, 28, "Subsubsection"],
Cell[551775, 12168, 4809, 112, 692, "Input",
 InitializationCell->True],
Cell[556587, 12282, 2063, 44, 172, "Input",
 InitializationCell->True],
Cell[558653, 12328, 3570, 85, 352, "Input",
 InitializationCell->True],
Cell[562226, 12415, 2625, 67, 312, "Input",
 InitializationCell->True],
Cell[564854, 12484, 2795, 66, 332, "Input",
 InitializationCell->True],
Cell[567652, 12552, 2124, 54, 212, "Input",
 InitializationCell->True],
Cell[569779, 12608, 2063, 51, 152, "Input",
 InitializationCell->True],
Cell[571845, 12661, 1840, 45, 212, "Input",
 InitializationCell->True],
Cell[573688, 12708, 1105, 26, 112, "Input",
 InitializationCell->True],
Cell[574796, 12736, 1987, 45, 132, "Input",
 InitializationCell->True],
Cell[576786, 12783, 2167, 49, 152, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[578990, 12837, 206, 3, 28, "Subsubsection"],
Cell[579199, 12842, 1409, 34, 112, "Input",
 InitializationCell->True],
Cell[580611, 12878, 1236, 30, 92, "Input",
 InitializationCell->True],
Cell[581850, 12910, 1364, 37, 152, "Input",
 InitializationCell->True],
Cell[583217, 12949, 2738, 63, 352, "Input",
 InitializationCell->True],
Cell[585958, 13014, 1742, 46, 192, "Input",
 InitializationCell->True],
Cell[587703, 13062, 3876, 103, 272, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[591616, 13170, 203, 3, 22, "Subsubsection"],
Cell[591822, 13175, 1263, 29, 132, "Input"],
Cell[593088, 13206, 1365, 28, 92, "Input",
 InitializationCell->True],
Cell[594456, 13236, 13240, 288, 1212, "Input",
 InitializationCell->True]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[607745, 13530, 92, 1, 71, "Section"],
Cell[CellGroupData[{
Cell[607862, 13535, 103, 1, 36, "Subsection"],
Cell[607968, 13538, 3871, 94, 2052, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[611876, 13637, 108, 1, 28, "Subsection"],
Cell[611987, 13640, 31861, 720, 3313, "Input",
 InitializationCell->True],
Cell[643851, 14362, 38827, 825, 3473, "Input",
 InitializationCell->True],
Cell[682681, 15189, 2233, 49, 192, "Input",
 InitializationCell->True],
Cell[684917, 15240, 1715, 42, 212, "Input",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[686681, 15288, 96, 1, 41, "Section"],
Cell[CellGroupData[{
Cell[686802, 15293, 106, 1, 144, "Subsection"],
Cell[686911, 15296, 1108, 19, 368, "Input",
 InitializationCell->True],
Cell[688022, 15317, 13725, 295, 4128, "Input",
 InitializationCell->True],
Cell[701750, 15614, 12732, 256, 2848, "Input",
 InitializationCell->True],
Cell[714485, 15872, 9803, 203, 3008, "Input",
 InitializationCell->True],
Cell[724291, 16077, 3282, 83, 848, "Input",
 InitializationCell->True],
Cell[727576, 16162, 19765, 390, 6128, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[747378, 16557, 132, 2, 112, "Subsection"],
Cell[747513, 16561, 3606, 83, 1648, "Input",
 InitializationCell->True],
Cell[751122, 16646, 4982, 110, 1728, "Input",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[756153, 16762, 104, 1, 41, "Section"],
Cell[CellGroupData[{
Cell[756282, 16767, 99, 1, 36, "Subsection"],
Cell[756384, 16770, 1348, 30, 112, "Input",
 InitializationCell->True],
Cell[757735, 16802, 14480, 314, 812, "Input",
 InitializationCell->True],
Cell[772218, 17118, 352, 7, 31, "Input",
 InitializationCell->True],
Cell[772573, 17127, 12120, 282, 812, "Input",
 InitializationCell->True],
Cell[784696, 17411, 429, 8, 52, "Input",
 InitializationCell->True],
Cell[785128, 17421, 9550, 208, 992, "Input",
 InitializationCell->True],
Cell[794681, 17631, 237, 6, 31, "Input",
 InitializationCell->True],
Cell[794921, 17639, 8044, 191, 972, "Input",
 InitializationCell->True],
Cell[802968, 17832, 381, 9, 31, "Input"],
Cell[803352, 17843, 1089, 27, 172, "Input",
 InitializationCell->True],
Cell[804444, 17872, 6552, 152, 472, "Input",
 InitializationCell->True],
Cell[810999, 18026, 3385, 89, 272, "Input",
 InitializationCell->True],
Cell[814387, 18117, 716, 16, 52, "Input",
 InitializationCell->True],
Cell[815106, 18135, 1299, 34, 92, "Input",
 InitializationCell->True],
Cell[816408, 18171, 458, 10, 31, "Input",
 InitializationCell->True],
Cell[816869, 18183, 2419, 60, 192, "Input",
 InitializationCell->True],
Cell[819291, 18245, 665, 15, 52, "Input",
 InitializationCell->True],
Cell[819959, 18262, 2660, 67, 232, "Input",
 InitializationCell->True],
Cell[822622, 18331, 462, 10, 31, "Input",
 InitializationCell->True],
Cell[823087, 18343, 3203, 84, 212, "Input",
 InitializationCell->True],
Cell[826293, 18429, 587, 11, 52, "Input",
 InitializationCell->True],
Cell[826883, 18442, 779, 22, 72, "Input",
 InitializationCell->True],
Cell[827665, 18466, 674, 12, 52, "Input",
 InitializationCell->True],
Cell[828342, 18480, 1862, 46, 72, "Input",
 InitializationCell->True],
Cell[830207, 18528, 1558, 43, 77, "Input",
 InitializationCell->True],
Cell[831768, 18573, 1857, 48, 252, "Input",
 InitializationCell->True],
Cell[833628, 18623, 5505, 127, 452, "Input",
 InitializationCell->True],
Cell[839136, 18752, 4753, 114, 452, "Input",
 InitializationCell->True],
Cell[843892, 18868, 5786, 139, 552, "Input",
 InitializationCell->True]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[849727, 19013, 93, 1, 41, "Section"],
Cell[CellGroupData[{
Cell[849845, 19018, 104, 1, 36, "Subsection"],
Cell[849952, 19021, 1214, 34, 300, "Input",
 InitializationCell->True],
Cell[851169, 19057, 1792, 45, 528, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[852998, 19107, 95, 1, 28, "Subsection"],
Cell[853096, 19110, 577, 16, 52, "Input",
 InitializationCell->True],
Cell[853676, 19128, 1410, 34, 72, "Input",
 InitializationCell->True],
Cell[855089, 19164, 683, 19, 52, "Input",
 InitializationCell->True],
Cell[855775, 19185, 969, 26, 72, "Input",
 InitializationCell->True],
Cell[856747, 19213, 1288, 31, 92, "Input",
 InitializationCell->True],
Cell[858038, 19246, 1626, 36, 192, "Input",
 InitializationCell->True],
Cell[859667, 19284, 1666, 40, 252, "Input",
 InitializationCell->True],
Cell[861336, 19326, 7192, 188, 572, "Input",
 InitializationCell->True],
Cell[868531, 19516, 8973, 212, 772, "Input",
 InitializationCell->True],
Cell[877507, 19730, 3025, 80, 372, "Input",
 InitializationCell->True],
Cell[880535, 19812, 2292, 64, 212, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[882864, 19881, 104, 1, 28, "Subsection"],
Cell[882971, 19884, 1097, 31, 804, "Input",
 InitializationCell->True],
Cell[884071, 19917, 231, 6, 252, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[884339, 19928, 101, 1, 28, "Subsection"],
Cell[884443, 19931, 15914, 391, 9912, "Input",
 InitializationCell->True],
Cell[900360, 20324, 1446, 37, 1356, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[901843, 20366, 142, 1, 28, "Subsection"],
Cell[901988, 20369, 1601, 43, 112, "Input",
 InitializationCell->True],
Cell[903592, 20414, 2030, 45, 112, "Input",
 InitializationCell->True],
Cell[905625, 20461, 2900, 74, 312, "Input",
 InitializationCell->True],
Cell[908528, 20537, 4142, 105, 252, "Input",
 InitializationCell->True],
Cell[912673, 20644, 2765, 69, 172, "Input",
 InitializationCell->True],
Cell[915441, 20715, 2433, 59, 152, "Input",
 InitializationCell->True],
Cell[917877, 20776, 5186, 114, 552, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[923112, 20896, 101, 1, 41, "Section"],
Cell[CellGroupData[{
Cell[923238, 20901, 106, 1, 36, "Subsection"],
Cell[923347, 20904, 1865, 46, 112, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[925249, 20955, 95, 1, 28, "Subsection"],
Cell[925347, 20958, 3008, 74, 472, "Input",
 InitializationCell->True],
Cell[928358, 21034, 1655, 43, 232, "Input",
 InitializationCell->True],
Cell[930016, 21079, 940, 27, 152, "Input",
 InitializationCell->True],
Cell[930959, 21108, 516, 13, 72, "Input",
 InitializationCell->True],
Cell[931478, 21123, 601, 16, 72, "Input",
 InitializationCell->True],
Cell[932082, 21141, 9321, 208, 911, "Input",
 InitializationCell->True],
Cell[941406, 21351, 631, 16, 132, "Input",
 InitializationCell->True],
Cell[942040, 21369, 503, 12, 31, "Input",
 InitializationCell->True],
Cell[942546, 21383, 730, 18, 31, "Input",
 InitializationCell->True],
Cell[943279, 21403, 964, 26, 132, "Input",
 InitializationCell->True],
Cell[944246, 21431, 2349, 60, 192, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[946632, 21496, 92, 1, 28, "Subsection"],
Cell[946727, 21499, 6455, 154, 3088, "Input",
 InitializationCell->True],
Cell[953185, 21655, 4986, 116, 2368, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[958208, 21776, 92, 1, 28, "Subsection"],
Cell[958303, 21779, 7403, 169, 3328, "Input",
 InitializationCell->True],
Cell[965709, 21950, 13909, 316, 5168, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[979655, 22271, 90, 1, 28, "Subsection"],
Cell[979748, 22274, 5248, 127, 1648, "Input",
 InitializationCell->True],
Cell[984999, 22403, 23589, 523, 7808, "Input",
 InitializationCell->True],
Cell[1008591, 22928, 27984, 618, 6768, "Input",
 InitializationCell->True],
Cell[1036578, 23548, 5368, 107, 1648, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[1041983, 23660, 113, 1, 28, "Subsection"],
Cell[1042099, 23663, 4105, 98, 472, "Input",
 InitializationCell->True],
Cell[1046207, 23763, 4555, 113, 372, "Input",
 InitializationCell->True],
Cell[1050765, 23878, 4630, 111, 552, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[1055432, 23994, 98, 1, 28, "Subsection"],
Cell[1055533, 23997, 867, 24, 112, "Input",
 InitializationCell->True],
Cell[1056403, 24023, 886, 24, 112, "Input",
 InitializationCell->True],
Cell[1057292, 24049, 23951, 516, 2272, "Input",
 InitializationCell->True],
Cell[1081246, 24567, 3942, 84, 512, "Input",
 InitializationCell->True],
Cell[1085191, 24653, 2555, 61, 352, "Input",
 InitializationCell->True],
Cell[1087749, 24716, 3481, 86, 472, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[1091267, 24807, 103, 1, 36, "Subsection"],
Cell[1091373, 24810, 43491, 936, 3752, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1134913, 25752, 102, 1, 71, "Section"],
Cell[CellGroupData[{
Cell[1135040, 25757, 97, 1, 36, "Subsection"],
Cell[1135140, 25760, 3425, 83, 212, "Input",
 InitializationCell->True],
Cell[1138568, 25845, 1135, 31, 112, "Input",
 InitializationCell->True],
Cell[1139706, 25878, 4673, 122, 292, "Input",
 InitializationCell->True],
Cell[1144382, 26002, 7411, 173, 772, "Input",
 InitializationCell->True],
Cell[1151796, 26177, 1894, 43, 172, "Input",
 InitializationCell->True],
Cell[1153693, 26222, 283, 8, 31, "Input",
 InitializationCell->True]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1154025, 26236, 98, 1, 41, "Section"],
Cell[CellGroupData[{
Cell[1154148, 26241, 104, 1, 36, "Subsection"],
Cell[1154255, 26244, 481, 11, 31, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1154761, 26259, 9490, 266, 592, "Input",
 InitializationCell->True],
Cell[1164254, 26527, 273, 7, 70, "Message"],
Cell[1164530, 26536, 286, 7, 70, "Message"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1164865, 26549, 99, 1, 28, "Subsection"],
Cell[1164967, 26552, 1190, 24, 92, "Input",
 InitializationCell->True],
Cell[1166160, 26578, 10025, 232, 392, "Input",
 InitializationCell->True],
Cell[1176188, 26812, 3563, 82, 323, "Input",
 InitializationCell->True],
Cell[1179754, 26896, 7632, 175, 761, "Input",
 InitializationCell->True],
Cell[1187389, 27073, 3462, 83, 392, "Input",
 InitializationCell->True],
Cell[1190854, 27158, 4551, 100, 452, "Input",
 InitializationCell->True],
Cell[1195408, 27260, 2876, 68, 352, "Input",
 InitializationCell->True],
Cell[1198287, 27330, 2609, 64, 352, "Input",
 InitializationCell->True],
Cell[1200899, 27396, 2188, 60, 272, "Input",
 InitializationCell->True],
Cell[1203090, 27458, 6141, 131, 412, "Input",
 InitializationCell->True],
Cell[1209234, 27591, 1979, 46, 152, "Input",
 InitializationCell->True],
Cell[1211216, 27639, 5339, 118, 492, "Input",
 InitializationCell->True],
Cell[1216558, 27759, 3375, 74, 292, "Input",
 InitializationCell->True],
Cell[1219936, 27835, 92, 1, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1220065, 27841, 156, 2, 36, "Subsection"],
Cell[1220224, 27845, 13449, 334, 592, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
